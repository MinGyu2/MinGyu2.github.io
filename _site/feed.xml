<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-04-03T23:47:25+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">기록하는 개발자</title><subtitle>기록소</subtitle><author><name>Jung MinGyu</name></author><entry><title type="html">웹서버 만들기(2)</title><link href="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C2/" rel="alternate" type="text/html" title="웹서버 만들기(2)" /><published>2023-04-03T00:00:00+09:00</published><updated>2023-04-04T00:13:00+09:00</updated><id>http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C2</id><content type="html" xml:base="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C2/"><![CDATA[<p><a href="https://mingyu2.github.io/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C1/">웹서버 만들기(1)</a></p>
<h3 id="tomcat-기본-폴더-변경">Tomcat 기본 폴더 변경</h3>
<ol>
  <li><code class="language-plaintext highlighter-rouge">apache-tomcat-10.1.7/conf/server.xml</code> 에서 Host의 appBase 부분에 원하는 기본폴더 경로를 넣어주면된다.<br /><img src="https://user-images.githubusercontent.com/31990118/229538683-e88bd49c-0863-4b52-93e3-e1b8e668c13c.png" alt="Pasted image 20230403161627" /></li>
  <li>톰켓을 재시작해준다.<br /><code class="language-plaintext highlighter-rouge">./apache-tomcat-10.1.7/bin/shutdown.sh</code> 톰캣 중지<br /><code class="language-plaintext highlighter-rouge">./apache-tomcat-10.1.7/bin/startup.sh</code> 톰캣 시작</li>
  <li><code class="language-plaintext highlighter-rouge">apache-tomcat-10.1.7</code> 와 같은 위치에 <strong>myWeb</strong>  폴더를 만들어준다.<br /><img src="https://user-images.githubusercontent.com/31990118/229538804-c61cf487-ff22-4ba3-afb8-7358bd3a6fc4.png" alt="Pasted image 20230403162230" /></li>
  <li><code class="language-plaintext highlighter-rouge">myWeb</code> 폴더안에 <strong>ROOT</strong> 폴더를 만들어준다.<br /><img src="https://user-images.githubusercontent.com/31990118/229538910-1c718aca-5a81-4b2e-965e-4f0536657b41.png" alt="Pasted image 20230403162644" /></li>
  <li><code class="language-plaintext highlighter-rouge">ROOT</code> 폴더에 index.jsp 파일 만들어준다. 다음 내용을 입력해준다.
    <div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;%</span> <span class="nc">String</span> <span class="n">test</span><span class="o">=</span><span class="s">"hello"</span><span class="o">;</span><span class="nt">%&gt;</span>
<span class="nt">&lt;%=</span><span class="n">test</span><span class="nt">%&gt;</span>
</code></pre></div>    </div>
  </li>
  <li>http://localhost 로 들어가면 hello 라는 문구를 출력하는 페이지를 볼 수 있다. <br /><img src="https://user-images.githubusercontent.com/31990118/229539147-895b04b6-10f6-4d36-912d-0ee78aa76b9f.png" alt="Pasted image 20230403163523" /></li>
</ol>

<h3 id="servlet">Servlet</h3>
<ul>
  <li>자바 소스코드를 컴파일하여 서버에서 사용하는 것이라 생각하면 된다.</li>
  <li>톰켓이 설치되어 있어야한다. 그리고 nginx 와 톰캣이 연동되어 있어야한다.</li>
</ul>

<ol>
  <li><strong>App.java</strong> 파일을 만들고 다음 코드를 입력해주자.
<script src="https://gist.github.com/MinGyu2/25985c0a56f4b1d065ea3728c8e2ca7b.js"></script></li>
  <li>컴파일 해보자<br /><code class="language-plaintext highlighter-rouge">javac -cp apache-tomcat-10.1.7/lib/servlet-api.jar App.java -d 출력파일위치</code><br /><strong>App.class</strong> 파일이 만들어진것을 확인할 수 있다.<br /><img src="https://user-images.githubusercontent.com/31990118/229539398-2ae422bf-460d-4391-90f9-ea0467a3676a.png" alt="Pasted image 20230403221606" /></li>
  <li>기본폴더(여기서는 myWeb 이다) <code class="language-plaintext highlighter-rouge">ROOT 폴더</code>안에 <strong>WEB-INF</strong> 폴더를 만들어주자.<br /><img src="https://user-images.githubusercontent.com/31990118/229541020-b2f57225-18a5-4b72-8380-04e778e88839.png" alt="Pasted image 20230403222333" /></li>
  <li><code class="language-plaintext highlighter-rouge">WEB-INF</code> 폴더안에 <strong>classes</strong> 폴더를 만들어주자. 이 폴더안에 앞에서 만들었던 App.class 파일을 넣을것이다.<br /><img src="https://user-images.githubusercontent.com/31990118/229541088-44173183-012a-4813-b25b-6edd46cca653.png" alt="Pasted image 20230403222739" /></li>
  <li><code class="language-plaintext highlighter-rouge">WEB-INF</code> 폴더안에 web.xml 파일을 만들어주자. 그다음 다음 내용을 추가하자. <code class="language-plaintext highlighter-rouge">web.xml</code>을 통해 Servlet을 매핑하였다.<br /><script src="https://gist.github.com/MinGyu2/d0fb4b8d208eba837b98492a0f88086d.js"></script></li>
  <li><code class="language-plaintext highlighter-rouge">http://localhost/hello</code> 로 접속하면 다음 화면이 출력되는것을 확인할 수 있다.<br /><img src="https://user-images.githubusercontent.com/31990118/229541547-b6ab7b4c-6a49-40e8-a0a9-71a96e8a507f.png" alt="Pasted image 20230403223750" /></li>
  <li>톰캣을 재시작할 필요가 있을 수 있다.<br /><code class="language-plaintext highlighter-rouge">./apache-tomcat-10.1.7/bin/shutdown.sh</code> 톰캣 중지<br /><code class="language-plaintext highlighter-rouge">./apache-tomcat-10.1.7/bin/startup.sh</code> 톰캣 시작</li>
</ol>

<h3 id="jsp">JSP</h3>
<ul>
  <li>먼저 처음에 만들어 주었던 <code class="language-plaintext highlighter-rouge">index.jsp</code> 파일을 삭제해준다.</li>
  <li><code class="language-plaintext highlighter-rouge">WEB-INF</code> 폴더안에 web.xml 파일에서 <code class="language-plaintext highlighter-rouge">&lt;url-pattern&gt;/&lt;/url-pattern&gt;</code> 로 변경한다. 그러면 이제 <code class="language-plaintext highlighter-rouge">http://localhost</code> 로 접속하여도 다음 화면이 출려되는것을 확인할 수 있다.<br /><img src="https://user-images.githubusercontent.com/31990118/229541717-36410547-aa40-4c98-8a70-f940e314268f.png" alt="Pasted image 20230403223750" />
<script src="https://gist.github.com/MinGyu2/3a6e85f36084a036ec177160a99558f3.js"></script></li>
  <li>servlet 에서는 데이터 계산에 관련된 것만 하고 클라이언트에게 보여주는 화면은 jsp를 통해 보여줄 것이다.</li>
</ul>

<h3 id="참고-사이트">참고 사이트</h3>
<ul>
  <li><a href="https://blog.miyam.net/116">Tomcat에서 ROOT로 Context 변경하기 (miyam.net)</a></li>
  <li><a href="https://ddoongi.tistory.com/25">IDE 없이 간단한 Servlet 만들어보기 (tistory.com)</a></li>
  <li><a href="https://develop-writing.tistory.com/20">Hello Servlet! 만들어보기 (IDE 없이) (tistory.com)</a></li>
  <li><a href="https://velog.io/@jsj3282/MVC-%ED%8C%A8%ED%84%B4-%EA%B5%AC%ED%98%842-%EB%AA%A8%EB%8D%B8-2-%EA%B5%AC%EC%A1%B0%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-MVC-%ED%8C%A8%ED%84%B4">MVC 패턴 구현(2) : 모델 2 구조를 이용한 MVC 패턴(1) (velog.io)</a></li>
  <li><a href="https://whitewing4139.tistory.com/261">2. JSP, Servlet 기본 파일 위치</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="nginx" /><category term="tomcat" /><category term="servlet" /><summary type="html"><![CDATA[간단한 로그인 서버를 만들기 (2)]]></summary></entry><entry><title type="html">웹서버 만들기(1)</title><link href="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C1/" rel="alternate" type="text/html" title="웹서버 만들기(1)" /><published>2023-04-02T00:00:00+09:00</published><updated>2023-04-03T23:13:00+09:00</updated><id>http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C1</id><content type="html" xml:base="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C1/"><![CDATA[<ul>
  <li>목표 : jsp 를 이용하여 간단한 로그인 서버를 만들것이다.</li>
  <li>환경 : 우분투 22.04</li>
  <li>MVC ( Model View Controller ) 구조
    <ol>
      <li>MVC 모델1 : <code class="language-plaintext highlighter-rouge">클라이언트 &lt;&gt; 아파치 or nginx &lt;&gt; 톰캣 &lt;&gt; JSP &lt;&gt; DB</code></li>
      <li>MVC 모델2 : <code class="language-plaintext highlighter-rouge">클라이언트 &lt;&gt; 아파치 or nginx &lt;&gt; 톰캣&lt;&gt; servlet JSP &lt;&gt; DB</code></li>
    </ol>
  </li>
</ul>

<h3 id="nginx-설치하기">Nginx 설치하기</h3>
<ol>
  <li><code class="language-plaintext highlighter-rouge">sudo apt install nginx</code> nginx 설치하기. <code class="language-plaintext highlighter-rouge">service nginx status</code> 로 상태를 확인할 수 있다. 설치를 하면 자동으로 동작 시작하는 것을 볼 수 있다.<br />
<code class="language-plaintext highlighter-rouge">nmap localhost</code> 로 열린 포트를 확인할 수 있다.<br />
<img src="https://user-images.githubusercontent.com/31990118/229353386-8d671b2d-95d6-4c01-a269-7d02c2752279.png" alt="Pasted image 20230402175338" /><br />
<img src="https://user-images.githubusercontent.com/31990118/229353485-fb6c96ac-1084-4585-b6cc-fdd632238fd1.png" alt="Pasted image 20230402200137" /><br />
<img src="https://user-images.githubusercontent.com/31990118/229353524-cd57db39-a86d-4b74-a57b-20c3600ad975.png" alt="Pasted image 20230402200423" /></li>
  <li>nginx 중지, 시작, 재시작 명령어.
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo service nginx stop
sudo service nginx start
sudo service nginx restart
</code></pre></div>    </div>
  </li>
</ol>

<h3 id="톰캣-설치하기">톰캣 설치하기</h3>
<ol>
  <li>톰캣 설치하기 전 <strong>open jdk 11</strong> 부터 설치한다.
<code class="language-plaintext highlighter-rouge">sudo apt install openjdk-11-jdk -y</code> 명령으로 설치한다.<br />
<img src="https://user-images.githubusercontent.com/31990118/229353590-76b89577-653b-459c-81dd-258ab4478117.png" alt="Pasted image 20230402183637" /></li>
  <li>톰캣을 설치 하기 위해 톰캣 10.0.27 버전 먼저 다운로드 받는다<br />
<code class="language-plaintext highlighter-rouge">sudo wget https://archive.apache.org/dist/tomcat/tomcat-10/v10.0.27/bin/apache-tomcat-10.0.27.tar.gz</code> 명령으로 다운받는다.<br />
<img src="https://user-images.githubusercontent.com/31990118/229353620-1052c81f-b6fc-4a5d-911b-5474c68b8c42.png" alt="Pasted image 20230402184349" /></li>
  <li>현재폴더에서 압축을 풀어준다.<br />
<code class="language-plaintext highlighter-rouge">tar -xvf apache-tomcat-10.0.27.tar.gz</code>
<img src="https://user-images.githubusercontent.com/31990118/229353642-2e0e235a-4ac4-413d-89c9-38143fb04057.png" alt="Pasted image 20230402184512" /></li>
  <li>tomcat 동작시키기.<br />
<code class="language-plaintext highlighter-rouge">./apache-tomcat-10.0.27/bin/startup.sh</code>  톰켓을 시작한다.<br />
<code class="language-plaintext highlighter-rouge">nmap localhost</code> 로 열린 포트를 확인한다<br />
<img src="https://user-images.githubusercontent.com/31990118/229353662-5fa96c01-9997-478a-9ce9-d5f8d79d5621.png" alt="Pasted image 20230402201051" /><br />
[http://localhost:8080]<br />
<img src="https://user-images.githubusercontent.com/31990118/229353695-a5d58aeb-ec1f-49a3-8eeb-32a360e1d54e.png" alt="Pasted image 20230402201102" /></li>
  <li>만약 자바를 설치하지 않았거나 JAVA_HOME 환경변수를 지정하지 않으면 오류가 발생할 수 있다. JAVA_HOME 환경변수를 등록하여 오류 해결이 가능하다.</li>
</ol>

<h3 id="nginx-와-tomcat-연동하기">NginX 와 Tomcat 연동하기</h3>
<ol>
  <li>먼저 톰켓을 동작 시켜야한다.<br />
<img src="https://user-images.githubusercontent.com/31990118/229353781-1628dd20-3a10-4b94-8887-2c1b979ee9a7.png" alt="Pasted image 20230402201051" /></li>
  <li><code class="language-plaintext highlighter-rouge">vi /etc/nginx/nginx.conf</code> 파일을 살폅보면  sites-enabled 폴더 안의 파일들을 살펴보는 것을 알 수 있다.<br />
<img src="https://user-images.githubusercontent.com/31990118/229353926-9b507926-9f5d-473d-ab29-0799a6397947.png" alt="Pasted image 20230402210019" /></li>
  <li><code class="language-plaintext highlighter-rouge">sudo vi /etc/nginx/sites-enabled/default</code> 열어보자.<br />
<img src="https://user-images.githubusercontent.com/31990118/229410744-73a7dfc8-86e8-498d-9daf-df2f8f1c7bb7.png" alt="image" /><br />
<strong>location /</strong> 의 <strong>proxy_pass</strong> 부분에 tomcat의 동작중인 주소를 넣어준다.</li>
  <li>[http://localhost] 로 접속하면 nginx로 연결되는 것이아닌 tomcat으로 연결되는것을 확인할 수 있다.
<img src="https://user-images.githubusercontent.com/31990118/229354036-affbd17e-02f9-4e49-85f5-bd2f5809c239.png" alt="Pasted image 20230402210711" /></li>
</ol>

<h3 id="nginx와-tomcat-연동중-발생한-오류">nginx와 tomcat 연동중 발생한 오류</h3>

<ul>
  <li><strong>실패1 css 파일 못찾음</strong> <br />
<img src="https://user-images.githubusercontent.com/31990118/229415729-79a7ef72-b801-49a3-83f2-84afb7b1c755.png" alt="Pasted image 20230403132740" />
<img src="https://user-images.githubusercontent.com/31990118/229415824-3200151f-5f51-4ea1-8e9d-bee2e9079f8b.png" alt="Pasted image 20230403132719" /></li>
  <li>해결법
    <ul>
      <li>방법 (1)
        <ul>
          <li><code class="language-plaintext highlighter-rouge">/etc/nginx/sites-enabled/default</code> 파일의 <strong>location /</strong> 부분을 살펴보자.</li>
          <li><strong>try_files $uri $uri/ =404;</strong> 부분을 주석처리 안해주면 <strong>jsp</strong> 가 제대로 동작안하거나 웹사이트가 제대로 동작안 할 수 있다. 따라서 <strong>try_files $uri $uri/ =404;</strong>  부분을 주석처리해주면 된다.<br /><img src="https://user-images.githubusercontent.com/31990118/229415970-22abbd83-7558-496f-be5b-82830905b8f9.png" alt="Pasted image 20230403134856" /></li>
        </ul>
      </li>
      <li>방법(2)
        <ul>
          <li><strong>try_files $uri $uri/ =404;</strong> 을 주석처리 하지않고 .css 요청이 들어올 때도 proxy_pass 처리해 준다. <code class="language-plaintext highlighter-rouge">/etc/nginx/sites-enabled/default</code> 파일에 넣어주면 된다.<br /><img src="https://user-images.githubusercontent.com/31990118/229416083-d35558ad-6d55-438f-8fef-d03b8a3a5cf7.png" alt="Pasted image 20230403135114" /></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>실패2 jsp는 동작은 하지만 서버가 페이지를 이상하게 만들어서줌.</strong>
<img src="https://user-images.githubusercontent.com/31990118/229416212-618480f1-fb39-418d-abb1-437ccd4cbee4.png" alt="Pasted image 20230403135438" /><br />예상동작<br /><img src="https://user-images.githubusercontent.com/31990118/229416494-f48f6664-16c2-4f1b-a82c-f4594d7b7a2c.png" alt="image" /></li>
  <li>해결법
    <ul>
      <li>방법(1)
        <ul>
          <li><code class="language-plaintext highlighter-rouge">location ~ \.js {</code> 부분에서 <code class="language-plaintext highlighter-rouge">add_header Content-Type application/x-javascript;</code> 부분을 주석처리 해주면 된다.<br /><img src="https://user-images.githubusercontent.com/31990118/229416362-acd08166-018e-4ac8-99a6-dc07c4e4d408.png" alt="Pasted image 20230403135944" /></li>
        </ul>
      </li>
      <li>방법(2)
        <ul>
          <li><strong>try_files $uri $uri/ =404;</strong> 부분을 주석처리 안해주면 <strong>jsp</strong> 가 제대로 동작안하거나 웹사이트가 제대로 동작안 할 수 있다. 따라서 <strong>try_files $uri $uri/ =404;</strong>  부분을 주석처리해주면 된다.<br /></li>
        </ul>
      </li>
    </ul>
  </li>
  <li>주의
    <ul>
      <li><code class="language-plaintext highlighter-rouge">default</code> 파일 바꾸고 나서 nginx 서버를 재시작해줘야 한다.<br /><code class="language-plaintext highlighter-rouge">sudo service nginx restart</code></li>
    </ul>
  </li>
</ul>

<h3 id="jsp-동작-테스트">JSP 동작 테스트</h3>
<ol>
  <li><code class="language-plaintext highlighter-rouge">apache-tomcat-10.1.7/webapps/ROOT</code> 위치에 <strong>test.jsp</strong> 파일을 만들어준다.</li>
  <li>그리고 다음 내용을 test.jsp 파일에 추가해준다.</li>
</ol>

<figure class="highlight"><pre><code class="language-jsp" data-lang="jsp"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="code"><pre>  <span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;%</span> <span class="nc">String</span> <span class="n">test</span><span class="o">=</span><span class="s">"hello"</span><span class="o">;</span> <span class="nt">%&gt;</span>
  <span class="nt">&lt;script&gt;</span>
          <span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="nt">&lt;%=</span><span class="n">test</span><span class="nt">%&gt;</span><span class="dl">'</span><span class="p">);</span>
  <span class="nt">&lt;/script&gt;</span>
  <span class="nt">&lt;/html&gt;</span>
  
</pre></td></tr></tbody></table></code></pre></figure>

<ul>
  <li>동작결과<br /> <code class="language-plaintext highlighter-rouge">http://localhost/test.jsp</code> 또는 <code class="language-plaintext highlighter-rouge">http://주소/test.jsp</code> 로 들어가면 alert 창이 뜨는 것을 확인할 수 있다.<br /><img src="https://user-images.githubusercontent.com/31990118/229417802-a74e2a24-a818-483f-a0d4-16a5901817f4.png" alt="Pasted image 20230403141653" />
<br /><img src="https://user-images.githubusercontent.com/31990118/229417878-61157c2c-3e76-499e-bce9-3515112cecff.png" alt="Pasted image 20230403141721" /></li>
</ul>

<h3 id="참고-사이트">참고 사이트</h3>
<ul>
  <li><a href="https://coding-factory.tistory.com/69">Jsp MVC 패턴이란 무엇인가? (Model1, Model2)</a></li>
  <li><a href="https://seonghyuk.tistory.com/41">1. 우분투에서 아파치 웹서버 설치하기</a></li>
  <li><a href="https://doqtqu.tistory.com/103">아파치 + 톰캣 연동하기</a></li>
  <li><a href="https://haengsin.tistory.com/114?category=900169">[WEB] NginX - Tomcat 연동</a></li>
  <li><a href="https://www.hostinger.com/tutorials/how-to-install-tomcat-on-ubuntu/">Install Tomcat on Ubuntu – Simple Step-by-Step Guide (hostinger.com)</a></li>
  <li><a href="https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&amp;blogId=heaves1&amp;logNo=221092915484">nginx설정 (Tomcat서버 요청하기) </a></li>
  <li><a href="https://www.hostinger.com/tutorials/how-to-install-tomcat-on-ubuntu/">Install Tomcat on Ubuntu – Simple Step-by-Step Guide (hostinger.com)</a></li>
  <li><a href="https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&amp;blogId=heaves1&amp;logNo=221092915484">nginx설정 (Tomcat서버 요청하기) </a></li>
  <li><a href="https://sangchul.kr/entry/%EB%A6%AC%EB%88%85%EC%8A%A4-nginx-tomcat-install">[리눅스] nginx tomcat 설치 및 연동</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="nginx" /><category term="tomcat" /><summary type="html"><![CDATA[간단한 로그인 서버를 만들기 (1)]]></summary></entry><entry><title type="html">JSP, Servlet, Spring 개념</title><link href="http://localhost:4000/%EC%9B%B9%EA%B0%9C%EB%85%90/" rel="alternate" type="text/html" title="JSP, Servlet, Spring 개념" /><published>2023-04-01T00:00:00+09:00</published><updated>2023-04-01T23:13:00+09:00</updated><id>http://localhost:4000/%EC%9B%B9%EA%B0%9C%EB%85%90</id><content type="html" xml:base="http://localhost:4000/%EC%9B%B9%EA%B0%9C%EB%85%90/"><![CDATA[<h3 id="jsp--java-server-page-">JSP ( Java Server Page )</h3>
<ul>
  <li>확장자가 <strong>.jsp</strong> 인 파일이다.</li>
  <li>html 문서 안에 자바 코드를 삽해 사용할 수 있도록 해준다.</li>
  <li>동적 페이지를 제공하기 위해 사용된다.</li>
</ul>

<h3 id="servlet">servlet</h3>
<ul>
  <li>확장자가 <strong>.java</strong> 이다.</li>
  <li>자바 코드 안에 HTML을 포함하고 있다.</li>
  <li>웹 서버의 성능을 향상하기 위해 사용되는 자바 클래스의 일종이다.</li>
</ul>

<h3 id="spring">Spring</h3>
<ul>
  <li>웹 어플리케이션 프레임워크이다.</li>
  <li>내부적으로 servlet 과 jsp 를 사용한다.</li>
  <li>웹 어플리케이션 관리와 개발이 간단해진다.</li>
</ul>

<h3 id="참고사이트">참고사이트</h3>
<ul>
  <li><a href="https://www.quora.com/What-is-the-difference-between-Spring-Hibernate-JSP-and-servlets">What is the difference between Spring, Hibernate, JSP, and servlets? - Quora</a></li>
  <li><a href="https://codevang.tistory.com/191">Tomcat(톰캣), JSP, Servlet(서블릿)의 기본 개념 및 구조</a></li>
  <li><a href="https://ko.wikipedia.org/wiki/%EC%9E%90%EB%B0%94_%EC%84%9C%EB%B8%94%EB%A6%BF">자바 서블릿 - 위키백과 </a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="JSP" /><category term="Servlet" /><category term="Spring" /><summary type="html"><![CDATA[JSP ( Java Server Page ) 확장자가 .jsp 인 파일이다. html 문서 안에 자바 코드를 삽해 사용할 수 있도록 해준다. 동적 페이지를 제공하기 위해 사용된다.]]></summary></entry><entry><title type="html">1주차</title><link href="http://localhost:4000/%EB%AA%A8%EC%9D%98%ED%95%B4%ED%82%B9%EC%88%98%EC%97%85/1%EC%A3%BC%EC%B0%A8%EC%88%98%EC%97%85/" rel="alternate" type="text/html" title="1주차" /><published>2023-03-31T00:00:00+09:00</published><updated>2023-03-31T23:13:00+09:00</updated><id>http://localhost:4000/%EB%AA%A8%EC%9D%98%ED%95%B4%ED%82%B9%EC%88%98%EC%97%85/1%EC%A3%BC%EC%B0%A8%EC%88%98%EC%97%85</id><content type="html" xml:base="http://localhost:4000/%EB%AA%A8%EC%9D%98%ED%95%B4%ED%82%B9%EC%88%98%EC%97%85/1%EC%A3%BC%EC%B0%A8%EC%88%98%EC%97%85/"><![CDATA[<h2 id="web-service">Web Service</h2>
<ul>
  <li>네트워크 상에서 서로 다른 종류의 컴퓨터들 강에 상호작용을 하기 위한 소프트웨어 시스템이다.</li>
  <li>HTTP 프로토콜은 응답과 요청의 구조로 이용자(클라이언트) 웹서버에 요청을 하면 웹서버가 응답을 하는 구조이다.</li>
</ul>

<h3 id="동적-페이지">동적 페이지</h3>
<ul>
  <li>누가 요청하는 것에 따라 서버에서 응답이 달라진다.</li>
</ul>

<h3 id="정적-페이지">정적 페이지</h3>
<ul>
  <li>누가 요청을 하든 서버의 응답은 항상 일정하다.</li>
</ul>

<h3 id="서버-클라이언트-구조">서버-클라이언트 구조</h3>
<p><em>클라이언트 &lt;&gt; 웹서버 &lt;&gt; WAS &lt;&gt; DB 서버</em></p>

<h4 id="클라이언트">클라이언트</h4>
<ul>
  <li>PC나 스마트폰등의 사용자 측을 말한다. 사용자가 요청을 서버에 전달하기 위해 웹브라우저를 사용한다. 크롬, 파이어폭스, 사파리, 엣지등이 있다.</li>
  <li>클라이언트 측의 웹 브라우저에서 실행되는 코드를 프론트엔드라 한다. 자바스크립트가 여기에 해당한다.</li>
</ul>

<h4 id="서버">서버</h4>
<ul>
  <li><strong>웹서버</strong> : HTML로 만든 웹 페이지가 들어 있는 파일을 클라이어트에게 제공하는 것이다. <strong>아파치</strong>, <strong>nginx</strong> 등이 있다.</li>
  <li><strong>WAS</strong>(Web Application Server) : 웹 응용 프로그램이 설치되어 작동한는 웹 애플리케이션 서버를 말한다. 웹 서버와 DB 서버 사이의 미들웨어 이다. 그리고 동적 페이지를 생성하기 위한 처리를 한다.</li>
  <li><strong>DB 서버</strong> : 데이터베이스를 저장 및 관리하는 서버를 말한다.</li>
  <li>서버측에서 실행되는 코드를 백엔드라 한다. php가 여기에 해당한다.</li>
</ul>

<h3 id="url-구조">URL 구조</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">http://IP 주소 or Domain/파일경로?파라미터=1</code> 의 구조로 이루어져 있다.</li>
  <li>맨 처음을 보고 어떤 프로토콜인지 알 수 있다.(<code class="language-plaintext highlighter-rouge">http</code>, <code class="language-plaintext highlighter-rouge">https</code>, <code class="language-plaintext highlighter-rouge">ftp</code> 등)</li>
  <li><strong>파일경로</strong>는 컴퓨터의 폴더와 비슷하다고 생각하면 된다.</li>
  <li><strong>파라미터</strong>는 상자라고 생각하면 된다. 예를 들어 <code class="language-plaintext highlighter-rouge">?name=1</code> 은 name 이라는 상자에 데이터 1을 넣는 것이다.</li>
</ul>

<h3 id="http-상태-메세지">HTTP 상태 메세지</h3>

<table>
  <thead>
    <tr>
      <th>상태 메세지</th>
      <th>설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>200</td>
      <td>성공적(GOOD)</td>
    </tr>
    <tr>
      <td>300</td>
      <td>Redirect 즉 새 URL로 이동한 것 이다.</td>
    </tr>
    <tr>
      <td>400</td>
      <td>클라이언트 측 오류 메세지(요청을 잘못한 것이다.)</td>
    </tr>
    <tr>
      <td>500</td>
      <td>서버 측 오류</td>
    </tr>
  </tbody>
</table>

<h3 id="참고-사이트">참고 사이트</h3>
<ul>
  <li><a href="https://dev-youngjun.tistory.com/67">웹 시스템 WAS 원리</a></li>
  <li><a href="http://wiki.hash.kr/index.php/%EC%84%9C%EB%B2%84-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8">서버 클라이언트 구조</a></li>
  <li><a href="https://www.beusable.net/blog/?p=4507">URL 구조</a></li>
  <li><a href="https://doomed-lab.tistory.com/15">HTTP 상태 메세지 정리</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="모의해킹수업" /><category term="웹 구조" /><summary type="html"><![CDATA[웹 서비스 란 무엇인가?]]></summary></entry><entry><title type="html">github.io 블로그 시작하기</title><link href="http://localhost:4000/%EC%95%88%EB%85%95%ED%95%98%EC%84%B8%EC%9A%94/" rel="alternate" type="text/html" title="github.io 블로그 시작하기" /><published>2023-03-30T00:00:00+09:00</published><updated>2023-03-30T22:06:00+09:00</updated><id>http://localhost:4000/%EC%95%88%EB%85%95%ED%95%98%EC%84%B8%EC%9A%94</id><content type="html" xml:base="http://localhost:4000/%EC%95%88%EB%85%95%ED%95%98%EC%84%B8%EC%9A%94/"><![CDATA[<p>GitHub Blog 서비스인 github.io 블로그 시작하기로 했다.
GitHub Blog 서비스의 이름은 Pages이다.</p>

<p>Pages가 다른 블로그 플랫폼 보다 편한 것 같아서 마음에 든다.
다른 사람들도 같이 많이 사용했으면 좋겠다는 생각이 든다.</p>

<p>YFM에서 정의한 제목을 이중 괄호 구문으로 본문에 추가할 수 있다.
이 글의 제목은 github.io 블로그 시작하기이고
마지막으로 수정된 시간은 2023-03-30 08:06:00 -0500이다.</p>]]></content><author><name>Jung MinGyu</name></author><summary type="html"><![CDATA[GitHub Blog 서비스인 github.io 블로그 시작하기로 했다.]]></summary></entry></feed>